{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { m as macro } from '../../macros2.js';\nimport { A as degreesFromRadians } from '../../Common/Core/Math/index.js';\nimport Constants from './RenderWindowInteractor/Constants.js';\nconst {\n  Device,\n  Input\n} = Constants;\nconst {\n  vtkWarningMacro,\n  vtkErrorMacro,\n  normalizeWheel,\n  vtkOnceErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst EMPTY_MOUSE_EVENT = {\n  ctrlKey: false,\n  altKey: false,\n  shiftKey: false\n};\nconst deviceInputMap = {\n  'xr-standard': [Input.Trigger, Input.Grip, Input.TrackPad, Input.Thumbstick, Input.A, Input.B]\n};\nconst handledEvents = ['StartAnimation', 'Animation', 'EndAnimation', 'PointerEnter', 'PointerLeave', 'MouseEnter', 'MouseLeave', 'StartMouseMove', 'MouseMove', 'EndMouseMove', 'LeftButtonPress', 'LeftButtonRelease', 'MiddleButtonPress', 'MiddleButtonRelease', 'RightButtonPress', 'RightButtonRelease', 'KeyPress', 'KeyDown', 'KeyUp', 'StartMouseWheel', 'MouseWheel', 'EndMouseWheel', 'StartPinch', 'Pinch', 'EndPinch', 'StartPan', 'Pan', 'EndPan', 'StartRotate', 'Rotate', 'EndRotate', 'Button3D', 'Move3D', 'StartPointerLock', 'EndPointerLock', 'StartInteraction', 'Interaction', 'EndInteraction', 'AnimationFrameRateUpdate'];\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n}\nfunction pointerCacheToPositions(cache) {\n  const positions = Object.create(null);\n  cache.forEach(_ref => {\n    let {\n      pointerId,\n      position\n    } = _ref;\n    positions[pointerId] = position;\n  });\n  return positions;\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowInteractor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowInteractor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowInteractor');\n\n  // Capture \"parentClass\" api for internal use\n  const superClass = {\n    ...publicAPI\n  };\n\n  // Initialize list of requesters\n  const animationRequesters = new Set();\n\n  // map from pointerId to { pointerId: number, position: [x, y] }\n  const pointerCache = new Map();\n\n  // Factor to apply on wheel spin.\n  let wheelCoefficient = 1;\n\n  // Public API methods\n\n  //----------------------------------------------------------------------\n  publicAPI.start = () => {\n    // Let the compositing handle the event loop if it wants to.\n    // if (publicAPI.HasObserver(vtkCommand::StartEvent) && !publicAPI.HandleEventLoop) {\n    //   publicAPI.invokeEvent({ type: 'StartEvent' });\n    //   return;\n    // }\n\n    // As a convenience, initialize if we aren't initialized yet.\n    if (!model.initialized) {\n      publicAPI.initialize();\n      if (!model.initialized) {\n        return;\n      }\n    }\n    // Pass execution to the subclass which will run the event loop,\n    // this will not return until TerminateApp is called.\n    publicAPI.startEventLoop();\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setRenderWindow = aren => {\n    vtkErrorMacro('you want to call setView(view) instead of setRenderWindow on a vtk.js interactor');\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setInteractorStyle = style => {\n    if (model.interactorStyle !== style) {\n      if (model.interactorStyle != null) {\n        model.interactorStyle.setInteractor(null);\n      }\n      model.interactorStyle = style;\n      if (model.interactorStyle != null) {\n        if (model.interactorStyle.getInteractor() !== publicAPI) {\n          model.interactorStyle.setInteractor(publicAPI);\n        }\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------\n  publicAPI.initialize = () => {\n    model.initialized = true;\n    publicAPI.enable();\n    publicAPI.render();\n  };\n  publicAPI.enable = () => publicAPI.setEnabled(true);\n  publicAPI.disable = () => publicAPI.setEnabled(false);\n  publicAPI.startEventLoop = () => vtkWarningMacro('empty event loop');\n  function updateCurrentRenderer(x, y) {\n    if (!model._forcedRenderer) {\n      model.currentRenderer = publicAPI.findPokedRenderer(x, y);\n    }\n  }\n  publicAPI.getCurrentRenderer = () => {\n    if (model.currentRenderer) {\n      return model.currentRenderer;\n    }\n    updateCurrentRenderer(0, 0);\n    return model.currentRenderer;\n  };\n  function _getScreenEventPositionFor(source) {\n    const canvas = model._view.getCanvas();\n    const bounds = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / bounds.width;\n    const scaleY = canvas.height / bounds.height;\n    const position = {\n      x: scaleX * (source.clientX - bounds.left),\n      y: scaleY * (bounds.height - source.clientY + bounds.top),\n      z: 0\n    };\n\n    // if multitouch, do not update the current renderer\n    if (pointerCache.size <= 1 || !model.currentRenderer) {\n      updateCurrentRenderer(position.x, position.y);\n    }\n    return position;\n  }\n  // Allow user to override it\n  const getScreenEventPositionFor = model._getScreenEventPositionFor || _getScreenEventPositionFor;\n  function getModifierKeysFor(event) {\n    return {\n      controlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey\n    };\n  }\n  function getKeysFor(event) {\n    const modifierKeys = getModifierKeysFor(event);\n    const keys = {\n      key: event.key,\n      keyCode: event.charCode,\n      ...modifierKeys\n    };\n    return keys;\n  }\n  function getDeviceTypeFor(event) {\n    return event.pointerType || '';\n  }\n  const _bindEvents = () => {\n    if (model.container === null) {\n      return;\n    }\n    const {\n      container\n    } = model;\n    container.addEventListener('contextmenu', preventDefault);\n    container.addEventListener('wheel', publicAPI.handleWheel);\n    container.addEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    container.addEventListener('pointerenter', publicAPI.handlePointerEnter);\n    container.addEventListener('pointerleave', publicAPI.handlePointerLeave);\n    container.addEventListener('pointermove', publicAPI.handlePointerMove, {\n      passive: false\n    });\n    container.addEventListener('pointerdown', publicAPI.handlePointerDown, {\n      passive: false\n    });\n    container.addEventListener('pointerup', publicAPI.handlePointerUp);\n    container.addEventListener('pointercancel', publicAPI.handlePointerCancel);\n    document.addEventListener('keypress', publicAPI.handleKeyPress);\n    document.addEventListener('keydown', publicAPI.handleKeyDown);\n    document.addEventListener('keyup', publicAPI.handleKeyUp);\n    document.addEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n\n    // using touchAction is more performant than preventDefault\n    // in a touchstart handler.\n    container.style.touchAction = 'none';\n    container.style.userSelect = 'none';\n    // disables tap highlight for when cursor is pointer\n    container.style.webkitTapHighlightColor = 'rgba(0,0,0,0)';\n  };\n\n  // For backward compatibility.\n  // Necessary for using unbind/bindEvent without calling setContainer.\n  publicAPI.bindEvents = container => {\n    if (container === null) {\n      return;\n    }\n    const res = superClass.setContainer(container);\n    if (res) {\n      _bindEvents();\n    }\n  };\n  const _unbindEvents = () => {\n    // Clear any previous timeouts and state variables that control mouse / touchpad behavior.\n    clearTimeout(model.moveTimeoutID);\n    clearTimeout(model.wheelTimeoutID);\n    model.moveTimeoutID = 0;\n    model.wheelTimeoutID = 0;\n    wheelCoefficient = 1.0;\n    const {\n      container\n    } = model;\n    if (container) {\n      container.removeEventListener('contextmenu', preventDefault);\n      container.removeEventListener('wheel', publicAPI.handleWheel);\n      container.removeEventListener('DOMMouseScroll', publicAPI.handleWheel);\n      container.removeEventListener('pointerenter', publicAPI.handlePointerEnter);\n      container.removeEventListener('pointerleave', publicAPI.handlePointerLeave);\n      container.removeEventListener('pointermove', publicAPI.handlePointerMove, {\n        passive: false\n      });\n      container.removeEventListener('pointerdown', publicAPI.handlePointerDown, {\n        passive: false\n      });\n      container.removeEventListener('pointerup', publicAPI.handlePointerUp);\n      container.removeEventListener('pointercancel', publicAPI.handlePointerCancel);\n    }\n    document.removeEventListener('keypress', publicAPI.handleKeyPress);\n    document.removeEventListener('keydown', publicAPI.handleKeyDown);\n    document.removeEventListener('keyup', publicAPI.handleKeyUp);\n    document.removeEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n    pointerCache.clear();\n  };\n  publicAPI.unbindEvents = () => {\n    _unbindEvents();\n    superClass.setContainer(null);\n  };\n  publicAPI.handleKeyPress = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyPressEvent(data);\n  };\n  publicAPI.handleKeyDown = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyDownEvent(data);\n  };\n  publicAPI.handleKeyUp = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyUpEvent(data);\n  };\n  publicAPI.handlePointerEnter = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerEnterEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseEnterEvent(callData);\n    }\n  };\n  publicAPI.handlePointerLeave = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerLeaveEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseLeaveEvent(callData);\n    }\n  };\n  publicAPI.handlePointerDown = event => {\n    if (event.button > 2 || publicAPI.isPointerLocked()) {\n      // ignore events from extra mouse buttons such as `back` and `forward`\n      return;\n    }\n    if (model.preventDefaultOnPointerDown) {\n      preventDefault(event);\n    }\n    if (event.target.hasPointerCapture(event.pointerId)) {\n      event.target.releasePointerCapture(event.pointerId);\n    }\n    model.container.setPointerCapture(event.pointerId);\n    if (pointerCache.has(event.pointerId)) {\n      vtkWarningMacro('[RenderWindowInteractor] duplicate pointerId detected');\n    }\n    pointerCache.set(event.pointerId, {\n      pointerId: event.pointerId,\n      position: getScreenEventPositionFor(event)\n    });\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchStart(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseDown(event);\n        break;\n    }\n  };\n  publicAPI.handlePointerUp = event => {\n    if (pointerCache.has(event.pointerId)) {\n      if (model.preventDefaultOnPointerUp) {\n        preventDefault(event);\n      }\n      pointerCache.delete(event.pointerId);\n      model.container.releasePointerCapture(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerCancel = event => {\n    if (pointerCache.has(event.pointerId)) {\n      pointerCache.delete(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerMove = event => {\n    if (pointerCache.has(event.pointerId)) {\n      const pointer = pointerCache.get(event.pointerId);\n      pointer.position = getScreenEventPositionFor(event);\n    }\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchMove(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseMove(event);\n        break;\n    }\n  };\n  publicAPI.handleMouseDown = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonPressEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonPressEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonPressEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button pressed: ${event.button}`);\n        break;\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.requestPointerLock = () => {\n    if (model.container) {\n      model.container.requestPointerLock();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.exitPointerLock = () => document.exitPointerLock?.();\n\n  //----------------------------------------------------------------------\n  publicAPI.isPointerLocked = () => !!model.container && document.pointerLockElement === model.container;\n\n  //----------------------------------------------------------------------\n  publicAPI.handlePointerLockChange = () => {\n    if (publicAPI.isPointerLocked()) {\n      publicAPI.startPointerLockEvent();\n    } else {\n      publicAPI.endPointerLockEvent();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  function forceRender() {\n    if (model._view && model.enabled && model.enableRender) {\n      model.inRender = true;\n      model._view.traverseAllPasses();\n      model.inRender = false;\n    }\n    // outside the above test so that third-party code can redirect\n    // the render to the appropriate class\n    publicAPI.invokeRenderEvent();\n  }\n  publicAPI.requestAnimation = requestor => {\n    if (requestor === undefined) {\n      vtkErrorMacro(`undefined requester, can not start animating`);\n      return;\n    }\n    if (animationRequesters.has(requestor)) {\n      vtkWarningMacro(`requester is already registered for animating`);\n      return;\n    }\n    animationRequesters.add(requestor);\n    if (!model.animationRequest && animationRequesters.size === 1 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n\n  // continue animating for at least the specified duration of\n  // milliseconds.\n  publicAPI.extendAnimation = duration => {\n    const newEnd = Date.now() + duration;\n    model._animationExtendedEnd = Math.max(model._animationExtendedEnd, newEnd);\n    if (!model.animationRequest && animationRequesters.size === 0 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n  publicAPI.isAnimating = () => model.xrAnimation || model.animationRequest !== null;\n  publicAPI.cancelAnimation = function (requestor) {\n    let skipWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!animationRequesters.has(requestor)) {\n      if (!skipWarning) {\n        const requestStr = requestor && requestor.getClassName ? requestor.getClassName() : requestor;\n        vtkWarningMacro(`${requestStr} did not request an animation`);\n      }\n      return;\n    }\n    animationRequesters.delete(requestor);\n    if (model.animationRequest && animationRequesters.size === 0 && Date.now() > model._animationExtendedEnd) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.switchToXRAnimation = () => {\n    // cancel existing animation if any\n    if (model.animationRequest) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n    }\n    model.xrAnimation = true;\n  };\n  publicAPI.returnFromXRAnimation = () => {\n    model.xrAnimation = false;\n    if (animationRequesters.size !== 0) {\n      model.recentAnimationFrameRate = 10.0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    }\n  };\n  publicAPI.updateXRGamepads = (xrSession, xrFrame, xrRefSpace) => {\n    // watch for when buttons change state and fire events\n    xrSession.inputSources.forEach(inputSource => {\n      const gripPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.gripSpace, xrRefSpace);\n      const targetRayPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.targetRaySpace, xrRefSpace);\n      const gamepad = inputSource.gamepad;\n      const hand = inputSource.handedness;\n      if (!gamepad) {\n        return;\n      }\n      if (!(gamepad.index in model.lastGamepadValues)) {\n        model.lastGamepadValues[gamepad.index] = {\n          left: {\n            buttons: {}\n          },\n          right: {\n            buttons: {}\n          },\n          none: {\n            buttons: {}\n          }\n        };\n      }\n      for (let buttonIdx = 0; buttonIdx < gamepad.buttons.length; ++buttonIdx) {\n        if (!(buttonIdx in model.lastGamepadValues[gamepad.index][hand].buttons)) {\n          model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] = false;\n        }\n        if (model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] !== gamepad.buttons[buttonIdx].pressed && gripPose != null) {\n          publicAPI.button3DEvent({\n            gamepad,\n            position: gripPose.transform.position,\n            orientation: gripPose.transform.orientation,\n            targetPosition: targetRayPose.transform.position,\n            targetOrientation: targetRayPose.transform.orientation,\n            pressed: gamepad.buttons[buttonIdx].pressed,\n            device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController,\n            input: deviceInputMap[gamepad.mapping] && deviceInputMap[gamepad.mapping][buttonIdx] ? deviceInputMap[gamepad.mapping][buttonIdx] : Input.Trigger\n          });\n          model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] = gamepad.buttons[buttonIdx].pressed;\n        }\n        if (model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] && gripPose != null) {\n          publicAPI.move3DEvent({\n            gamepad,\n            position: gripPose.transform.position,\n            orientation: gripPose.transform.orientation,\n            targetPosition: targetRayPose.transform.position,\n            targetOrientation: targetRayPose.transform.orientation,\n            device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController\n          });\n        }\n      }\n    });\n  };\n  publicAPI.handleMouseMove = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    if (model.moveTimeoutID === 0) {\n      publicAPI.startMouseMoveEvent(callData);\n    } else {\n      publicAPI.mouseMoveEvent(callData);\n      clearTimeout(model.moveTimeoutID);\n    }\n\n    // start a timer to keep us animating while we get mouse move events\n    model.moveTimeoutID = setTimeout(() => {\n      publicAPI.endMouseMoveEvent();\n      model.moveTimeoutID = 0;\n    }, 200);\n  };\n  publicAPI.handleAnimation = () => {\n    const currTime = Date.now();\n    model._animationFrameCount++;\n    if (currTime - model._animationStartTime > 1000.0 && model._animationFrameCount > 1) {\n      model.recentAnimationFrameRate = 1000.0 * (model._animationFrameCount - 1) / (currTime - model._animationStartTime);\n      model.lastFrameTime = 1.0 / model.recentAnimationFrameRate;\n      publicAPI.animationFrameRateUpdateEvent();\n      model._animationStartTime = currTime;\n      model._animationFrameCount = 1;\n    }\n    publicAPI.animationEvent();\n    forceRender();\n    if (animationRequesters.size > 0 || Date.now() < model._animationExtendedEnd) {\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    } else {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.handleWheel = event => {\n    preventDefault(event);\n\n    /**\n     * wheel event values can vary significantly across browsers, platforms\n     * and devices [1]. `normalizeWheel` uses facebook's solution from their\n     * fixed-data-table repository [2].\n     *\n     * [1] https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel\n     * [2] https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n     *\n     * This code will return an object with properties:\n     *\n     *   spinX   -- normalized spin speed (use for zoom) - x plane\n     *   spinY   -- \" - y plane\n     *   pixelX  -- normalized distance (to pixels) - x plane\n     *   pixelY  -- \" - y plane\n     *\n     */\n    const callData = {\n      ...normalizeWheel(event),\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n\n    // Wheel events are thought to scroll pages (i.e. multiple lines at once).\n    // See normalizeWheel() documentation for more context.\n    // While trackpad wheel events are many small (<1) wheel spins,\n    // mouse wheel events have absolute spin values higher than 1.\n    // Here the first spin value is \"recorded\", and used to normalize\n    // all the following mouse wheel events.\n    if (model.wheelTimeoutID === 0) {\n      // we attempt to distinguish between trackpads and mice\n      // .3 will be larger than the first trackpad event,\n      // but small enough to detect some common edge case mice\n      if (Math.abs(callData.spinY) >= 0.3) {\n        // Event is coming from mouse wheel\n        wheelCoefficient = Math.abs(callData.spinY);\n      } else {\n        // Event is coming from trackpad\n        wheelCoefficient = 1;\n      }\n    }\n    callData.spinY /= wheelCoefficient;\n    if (model.wheelTimeoutID === 0) {\n      publicAPI.startMouseWheelEvent(callData);\n      publicAPI.mouseWheelEvent(callData);\n    } else {\n      publicAPI.mouseWheelEvent(callData);\n      clearTimeout(model.wheelTimeoutID);\n    }\n    if (model.mouseScrollDebounceByPass) {\n      publicAPI.extendAnimation(600);\n      publicAPI.endMouseWheelEvent();\n      model.wheelTimeoutID = 0;\n    } else {\n      // start a timer to keep us animating while we get wheel events\n      model.wheelTimeoutID = setTimeout(() => {\n        publicAPI.extendAnimation(600);\n        publicAPI.endMouseWheelEvent();\n        model.wheelTimeoutID = 0;\n      }, 200);\n    }\n  };\n  publicAPI.handleMouseUp = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonReleaseEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonReleaseEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonReleaseEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button released: ${event.button}`);\n        break;\n    }\n  };\n  publicAPI.handleTouchStart = event => {\n    const pointers = [...pointerCache.values()];\n    // If multitouch\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      // did we just transition to multitouch?\n      if (pointers.length === 2) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      }\n      // handle the gesture\n      publicAPI.recognizeGesture('TouchStart', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: getScreenEventPositionFor(event),\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonPressEvent(callData);\n    }\n  };\n  publicAPI.handleTouchMove = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      publicAPI.recognizeGesture('TouchMove', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.mouseMoveEvent(callData);\n    }\n  };\n  publicAPI.handleTouchEnd = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures) {\n      // No more fingers down\n      if (pointers.length === 0) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: getScreenEventPositionFor(event),\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      } else if (pointers.length === 1) {\n        // If one finger left, end touch and start button press\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchEnd', positions);\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonPressEvent(callData);\n      } else {\n        // If more than one finger left, keep touch move\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchMove', positions);\n      }\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonReleaseEvent(callData);\n    }\n  };\n  publicAPI.setView = val => {\n    if (model._view === val) {\n      return;\n    }\n    model._view = val;\n    model._view.getRenderable().setInteractor(publicAPI);\n    publicAPI.modified();\n  };\n  publicAPI.getFirstRenderer = () => model._view?.getRenderable()?.getRenderersByReference()?.[0];\n  publicAPI.findPokedRenderer = function () {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (!model._view) {\n      return null;\n    }\n    // The original order of renderers needs to remain as\n    // the first one is the one we want to manipulate the camera on.\n    const rc = model._view?.getRenderable()?.getRenderers();\n    if (!rc || rc.length === 0) {\n      return null;\n    }\n    rc.sort((a, b) => a.getLayer() - b.getLayer());\n    let interactiveren = null;\n    let viewportren = null;\n    let currentRenderer = null;\n    let count = rc.length;\n    while (count--) {\n      const aren = rc[count];\n      if (model._view.isInViewport(x, y, aren) && aren.getInteractive()) {\n        currentRenderer = aren;\n        break;\n      }\n      if (interactiveren === null && aren.getInteractive()) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        interactiveren = aren;\n      }\n      if (viewportren === null && model._view.isInViewport(x, y, aren)) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        viewportren = aren;\n      }\n    }\n\n    // We must have a value.  If we found an interactive renderer before, that's\n    // better than a non-interactive renderer.\n    if (currentRenderer === null) {\n      currentRenderer = interactiveren;\n    }\n\n    // We must have a value.  If we found a renderer that is in the viewport,\n    // that is better than any old viewport (but not as good as an interactive\n    // one).\n    if (currentRenderer === null) {\n      currentRenderer = viewportren;\n    }\n\n    // We must have a value - take anything.\n    if (currentRenderer == null) {\n      currentRenderer = rc[0];\n    }\n    return currentRenderer;\n  };\n\n  // only render if we are not animating. If we are animating\n  // then renders will happen naturally anyhow and we definitely\n  // do not want extra renders as the make the apparent interaction\n  // rate slower.\n  publicAPI.render = () => {\n    if (!publicAPI.isAnimating() && !model.inRender) {\n      forceRender();\n    }\n  };\n\n  // create the generic Event methods\n  handledEvents.forEach(eventName => {\n    const lowerFirst = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n    publicAPI[`${lowerFirst}Event`] = arg => {\n      // Check that interactor enabled\n      if (!model.enabled) {\n        return;\n      }\n\n      // Check that a poked renderer exists\n      const renderer = publicAPI.getCurrentRenderer();\n      if (!renderer) {\n        vtkOnceErrorMacro(`\n          Can not forward events without a current renderer on the interactor.\n        `);\n        return;\n      }\n\n      // Pass the eventName and the poked renderer\n      const callData = {\n        type: eventName,\n        pokedRenderer: model.currentRenderer,\n        firstRenderer: publicAPI.getFirstRenderer(),\n        // Add the arguments to the call data\n        ...arg\n      };\n\n      // Call invoke\n      publicAPI[`invoke${eventName}`](callData);\n    };\n  });\n\n  // we know we are in multitouch now, so start recognizing\n  publicAPI.recognizeGesture = (event, positions) => {\n    // more than two pointers we ignore\n    if (Object.keys(positions).length > 2) {\n      return;\n    }\n    if (!model.startingEventPositions) {\n      model.startingEventPositions = {};\n    }\n\n    // store the initial positions\n    if (event === 'TouchStart') {\n      Object.keys(positions).forEach(key => {\n        model.startingEventPositions[key] = positions[key];\n      });\n      // we do not know what the gesture is yet\n      model.currentGesture = 'Start';\n      return;\n    }\n\n    // end the gesture if needed\n    if (event === 'TouchEnd') {\n      if (model.currentGesture === 'Pinch') {\n        publicAPI.render();\n        publicAPI.endPinchEvent();\n      }\n      if (model.currentGesture === 'Rotate') {\n        publicAPI.render();\n        publicAPI.endRotateEvent();\n      }\n      if (model.currentGesture === 'Pan') {\n        publicAPI.render();\n        publicAPI.endPanEvent();\n      }\n      model.currentGesture = 'Start';\n      model.startingEventPositions = {};\n      return;\n    }\n\n    // what are the two pointers we are working with\n    let count = 0;\n    const posVals = [];\n    const startVals = [];\n    Object.keys(positions).forEach(key => {\n      posVals[count] = positions[key];\n      startVals[count] = model.startingEventPositions[key];\n      count++;\n    });\n\n    // The meat of the algorithm\n    // on move events we analyze them to determine what type\n    // of movement it is and then deal with it.\n    // calculate the distances\n    const originalDistance = Math.sqrt((startVals[0].x - startVals[1].x) * (startVals[0].x - startVals[1].x) + (startVals[0].y - startVals[1].y) * (startVals[0].y - startVals[1].y));\n    const newDistance = Math.sqrt((posVals[0].x - posVals[1].x) * (posVals[0].x - posVals[1].x) + (posVals[0].y - posVals[1].y) * (posVals[0].y - posVals[1].y));\n\n    // calculate rotations\n    let originalAngle = degreesFromRadians(Math.atan2(startVals[1].y - startVals[0].y, startVals[1].x - startVals[0].x));\n    let newAngle = degreesFromRadians(Math.atan2(posVals[1].y - posVals[0].y, posVals[1].x - posVals[0].x));\n\n    // angles are cyclic so watch for that, 1 and 359 are only 2 apart :)\n    let angleDeviation = newAngle - originalAngle;\n    newAngle = newAngle + 180.0 >= 360.0 ? newAngle - 180.0 : newAngle + 180.0;\n    originalAngle = originalAngle + 180.0 >= 360.0 ? originalAngle - 180.0 : originalAngle + 180.0;\n    if (Math.abs(newAngle - originalAngle) < Math.abs(angleDeviation)) {\n      angleDeviation = newAngle - originalAngle;\n    }\n\n    // calculate the translations\n    const trans = [];\n    trans[0] = (posVals[0].x - startVals[0].x + posVals[1].x - startVals[1].x) / 2.0;\n    trans[1] = (posVals[0].y - startVals[0].y + posVals[1].y - startVals[1].y) / 2.0;\n    if (event === 'TouchMove') {\n      // OK we want to\n      // - immediately respond to the user\n      // - allow the user to zoom without panning (saves focal point)\n      // - allow the user to rotate without panning (saves focal point)\n\n      // do we know what gesture we are doing yet? If not\n      // see if we can figure it out\n      if (model.currentGesture === 'Start') {\n        // pinch is a move to/from the center point\n        // rotate is a move along the circumference\n        // pan is a move of the center point\n        // compute the distance along each of these axes in pixels\n        // the first to break thresh wins\n        let thresh = 0.01 * Math.sqrt(model.container.clientWidth * model.container.clientWidth + model.container.clientHeight * model.container.clientHeight);\n        if (thresh < 15.0) {\n          thresh = 15.0;\n        }\n        const pinchDistance = Math.abs(newDistance - originalDistance);\n        const rotateDistance = newDistance * 3.1415926 * Math.abs(angleDeviation) / 360.0;\n        const panDistance = Math.sqrt(trans[0] * trans[0] + trans[1] * trans[1]);\n        if (pinchDistance > thresh && pinchDistance > rotateDistance && pinchDistance > panDistance) {\n          model.currentGesture = 'Pinch';\n          const callData = {\n            scale: 1.0,\n            touches: positions\n          };\n          publicAPI.startPinchEvent(callData);\n        } else if (rotateDistance > thresh && rotateDistance > panDistance) {\n          model.currentGesture = 'Rotate';\n          const callData = {\n            rotation: 0.0,\n            touches: positions\n          };\n          publicAPI.startRotateEvent(callData);\n        } else if (panDistance > thresh) {\n          model.currentGesture = 'Pan';\n          const callData = {\n            translation: [0, 0],\n            touches: positions\n          };\n          publicAPI.startPanEvent(callData);\n        }\n      } else {\n        // if we have found a specific type of movement then\n        // handle it\n        if (model.currentGesture === 'Rotate') {\n          const callData = {\n            rotation: angleDeviation,\n            touches: positions\n          };\n          publicAPI.rotateEvent(callData);\n        }\n        if (model.currentGesture === 'Pinch') {\n          const callData = {\n            scale: newDistance / originalDistance,\n            touches: positions\n          };\n          publicAPI.pinchEvent(callData);\n        }\n        if (model.currentGesture === 'Pan') {\n          const callData = {\n            translation: trans,\n            touches: positions\n          };\n          publicAPI.panEvent(callData);\n        }\n      }\n    }\n  };\n  publicAPI.handleVisibilityChange = () => {\n    model._animationStartTime = Date.now();\n    model._animationFrameCount = 0;\n  };\n  publicAPI.setCurrentRenderer = r => {\n    model._forcedRenderer = !!r;\n    model.currentRenderer = r;\n  };\n  publicAPI.setContainer = container => {\n    _unbindEvents();\n    const res = superClass.setContainer(container ?? null);\n    if (res) {\n      _bindEvents();\n    }\n    return res;\n  };\n\n  // Stop animating if the renderWindowInteractor is deleted.\n  publicAPI.delete = () => {\n    while (animationRequesters.size) {\n      publicAPI.cancelAnimation(animationRequesters.values().next().value);\n    }\n    if (typeof document.hidden !== 'undefined') {\n      document.removeEventListener('visibilitychange', publicAPI.handleVisibilityChange);\n    }\n    if (model.container) {\n      publicAPI.setContainer(null);\n    }\n    superClass.delete();\n  };\n\n  // Use the Page Visibility API to detect when we switch away from or back to\n  // this tab, and reset the animationFrameStart. When tabs are not active, browsers\n  // will stop calling requestAnimationFrame callbacks.\n  if (typeof document.hidden !== 'undefined') {\n    document.addEventListener('visibilitychange', publicAPI.handleVisibilityChange, false);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  renderWindow: null,\n  interactorStyle: null,\n  picker: null,\n  pickingManager: null,\n  initialized: false,\n  enabled: false,\n  enableRender: true,\n  currentRenderer: null,\n  lightFollowCamera: true,\n  desiredUpdateRate: 30.0,\n  stillUpdateRate: 2.0,\n  container: null,\n  // _view: null,\n  recognizeGestures: true,\n  currentGesture: 'Start',\n  animationRequest: null,\n  lastFrameTime: 0.1,\n  recentAnimationFrameRate: 10.0,\n  wheelTimeoutID: 0,\n  moveTimeoutID: 0,\n  lastGamepadValues: {},\n  preventDefaultOnPointerDown: false,\n  preventDefaultOnPointerUp: false,\n  mouseScrollDebounceByPass: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  // run animation at least until this time\n  model._animationExtendedEnd = 0;\n  macro.event(publicAPI, model, 'RenderEvent');\n  handledEvents.forEach(eventName => macro.event(publicAPI, model, eventName));\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['initialized', 'interactorStyle', 'lastFrameTime', 'recentAnimationFrameRate', '_view']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['container', 'lightFollowCamera', 'enabled', 'enableRender', 'recognizeGestures', 'desiredUpdateRate', 'stillUpdateRate', 'picker', 'preventDefaultOnPointerDown', 'preventDefaultOnPointerUp', 'mouseScrollDebounceByPass']);\n  macro.moveToProtected(publicAPI, model, ['view']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkRenderWindowInteractor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindowInteractor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindowInteractor$1 = {\n  newInstance,\n  extend,\n  handledEvents,\n  ...Constants\n};\nexport { vtkRenderWindowInteractor$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","A","degreesFromRadians","Constants","Device","Input","vtkWarningMacro","vtkErrorMacro","normalizeWheel","vtkOnceErrorMacro","EMPTY_MOUSE_EVENT","ctrlKey","altKey","shiftKey","deviceInputMap","Trigger","Grip","TrackPad","Thumbstick","B","handledEvents","preventDefault","event","cancelable","pointerCacheToPositions","cache","positions","Object","create","forEach","_ref","pointerId","position","vtkRenderWindowInteractor","publicAPI","model","classHierarchy","push","superClass","animationRequesters","Set","pointerCache","Map","wheelCoefficient","start","initialized","initialize","startEventLoop","setRenderWindow","aren","setInteractorStyle","style","interactorStyle","setInteractor","getInteractor","enable","render","setEnabled","disable","updateCurrentRenderer","x","y","_forcedRenderer","currentRenderer","findPokedRenderer","getCurrentRenderer","_getScreenEventPositionFor","source","canvas","_view","getCanvas","bounds","getBoundingClientRect","scaleX","width","scaleY","height","clientX","left","clientY","top","z","size","getScreenEventPositionFor","getModifierKeysFor","controlKey","getKeysFor","modifierKeys","keys","key","keyCode","charCode","getDeviceTypeFor","pointerType","_bindEvents","container","addEventListener","handleWheel","handlePointerEnter","handlePointerLeave","handlePointerMove","passive","handlePointerDown","handlePointerUp","handlePointerCancel","document","handleKeyPress","handleKeyDown","handleKeyUp","handlePointerLockChange","touchAction","userSelect","webkitTapHighlightColor","bindEvents","res","setContainer","_unbindEvents","clearTimeout","moveTimeoutID","wheelTimeoutID","removeEventListener","clear","unbindEvents","data","keyPressEvent","keyDownEvent","keyUpEvent","callData","deviceType","pointerEnterEvent","mouseEnterEvent","pointerLeaveEvent","mouseLeaveEvent","button","isPointerLocked","preventDefaultOnPointerDown","target","hasPointerCapture","releasePointerCapture","setPointerCapture","has","set","handleTouchStart","handleMouseDown","preventDefaultOnPointerUp","delete","handleTouchEnd","handleMouseUp","pointer","get","handleTouchMove","handleMouseMove","leftButtonPressEvent","middleButtonPressEvent","rightButtonPressEvent","requestPointerLock","exitPointerLock","pointerLockElement","startPointerLockEvent","endPointerLockEvent","forceRender","enabled","enableRender","inRender","traverseAllPasses","invokeRenderEvent","requestAnimation","requestor","undefined","add","animationRequest","xrAnimation","_animationStartTime","Date","now","_animationFrameCount","requestAnimationFrame","handleAnimation","startAnimationEvent","extendAnimation","duration","newEnd","_animationExtendedEnd","Math","max","isAnimating","cancelAnimation","skipWarning","arguments","length","requestStr","getClassName","cancelAnimationFrame","endAnimationEvent","switchToXRAnimation","returnFromXRAnimation","recentAnimationFrameRate","updateXRGamepads","xrSession","xrFrame","xrRefSpace","inputSources","inputSource","gripPose","gripSpace","getPose","targetRayPose","targetRaySpace","gamepad","hand","handedness","index","lastGamepadValues","buttons","right","none","buttonIdx","pressed","button3DEvent","transform","orientation","targetPosition","targetOrientation","device","LeftController","RightController","input","mapping","move3DEvent","startMouseMoveEvent","mouseMoveEvent","setTimeout","endMouseMoveEvent","currTime","lastFrameTime","animationFrameRateUpdateEvent","animationEvent","abs","spinY","startMouseWheelEvent","mouseWheelEvent","mouseScrollDebounceByPass","endMouseWheelEvent","leftButtonReleaseEvent","middleButtonReleaseEvent","rightButtonReleaseEvent","pointers","values","recognizeGestures","recognizeGesture","setView","val","getRenderable","modified","getFirstRenderer","getRenderersByReference","rc","getRenderers","sort","a","b","getLayer","interactiveren","viewportren","count","isInViewport","getInteractive","eventName","lowerFirst","charAt","toLowerCase","slice","arg","renderer","type","pokedRenderer","firstRenderer","startingEventPositions","currentGesture","endPinchEvent","endRotateEvent","endPanEvent","posVals","startVals","originalDistance","sqrt","newDistance","originalAngle","atan2","newAngle","angleDeviation","trans","thresh","clientWidth","clientHeight","pinchDistance","rotateDistance","panDistance","scale","touches","startPinchEvent","rotation","startRotateEvent","translation","startPanEvent","rotateEvent","pinchEvent","panEvent","handleVisibilityChange","setCurrentRenderer","r","next","value","hidden","DEFAULT_VALUES","renderWindow","picker","pickingManager","lightFollowCamera","desiredUpdateRate","stillUpdateRate","extend","initialValues","assign","obj","setGet","moveToProtected","newInstance","vtkRenderWindowInteractor$1","default"],"sources":["C:/Users/Malcolm/Projects/Web/TickerWeb/TickerWeb_Vue/node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport { A as degreesFromRadians } from '../../Common/Core/Math/index.js';\nimport Constants from './RenderWindowInteractor/Constants.js';\n\nconst {\n  Device,\n  Input\n} = Constants;\nconst {\n  vtkWarningMacro,\n  vtkErrorMacro,\n  normalizeWheel,\n  vtkOnceErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst EMPTY_MOUSE_EVENT = {\n  ctrlKey: false,\n  altKey: false,\n  shiftKey: false\n};\nconst deviceInputMap = {\n  'xr-standard': [Input.Trigger, Input.Grip, Input.TrackPad, Input.Thumbstick, Input.A, Input.B]\n};\nconst handledEvents = ['StartAnimation', 'Animation', 'EndAnimation', 'PointerEnter', 'PointerLeave', 'MouseEnter', 'MouseLeave', 'StartMouseMove', 'MouseMove', 'EndMouseMove', 'LeftButtonPress', 'LeftButtonRelease', 'MiddleButtonPress', 'MiddleButtonRelease', 'RightButtonPress', 'RightButtonRelease', 'KeyPress', 'KeyDown', 'KeyUp', 'StartMouseWheel', 'MouseWheel', 'EndMouseWheel', 'StartPinch', 'Pinch', 'EndPinch', 'StartPan', 'Pan', 'EndPan', 'StartRotate', 'Rotate', 'EndRotate', 'Button3D', 'Move3D', 'StartPointerLock', 'EndPointerLock', 'StartInteraction', 'Interaction', 'EndInteraction', 'AnimationFrameRateUpdate'];\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n}\nfunction pointerCacheToPositions(cache) {\n  const positions = Object.create(null);\n  cache.forEach(_ref => {\n    let {\n      pointerId,\n      position\n    } = _ref;\n    positions[pointerId] = position;\n  });\n  return positions;\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowInteractor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowInteractor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowInteractor');\n\n  // Capture \"parentClass\" api for internal use\n  const superClass = {\n    ...publicAPI\n  };\n\n  // Initialize list of requesters\n  const animationRequesters = new Set();\n\n  // map from pointerId to { pointerId: number, position: [x, y] }\n  const pointerCache = new Map();\n\n  // Factor to apply on wheel spin.\n  let wheelCoefficient = 1;\n\n  // Public API methods\n\n  //----------------------------------------------------------------------\n  publicAPI.start = () => {\n    // Let the compositing handle the event loop if it wants to.\n    // if (publicAPI.HasObserver(vtkCommand::StartEvent) && !publicAPI.HandleEventLoop) {\n    //   publicAPI.invokeEvent({ type: 'StartEvent' });\n    //   return;\n    // }\n\n    // As a convenience, initialize if we aren't initialized yet.\n    if (!model.initialized) {\n      publicAPI.initialize();\n      if (!model.initialized) {\n        return;\n      }\n    }\n    // Pass execution to the subclass which will run the event loop,\n    // this will not return until TerminateApp is called.\n    publicAPI.startEventLoop();\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setRenderWindow = aren => {\n    vtkErrorMacro('you want to call setView(view) instead of setRenderWindow on a vtk.js interactor');\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setInteractorStyle = style => {\n    if (model.interactorStyle !== style) {\n      if (model.interactorStyle != null) {\n        model.interactorStyle.setInteractor(null);\n      }\n      model.interactorStyle = style;\n      if (model.interactorStyle != null) {\n        if (model.interactorStyle.getInteractor() !== publicAPI) {\n          model.interactorStyle.setInteractor(publicAPI);\n        }\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------\n  publicAPI.initialize = () => {\n    model.initialized = true;\n    publicAPI.enable();\n    publicAPI.render();\n  };\n  publicAPI.enable = () => publicAPI.setEnabled(true);\n  publicAPI.disable = () => publicAPI.setEnabled(false);\n  publicAPI.startEventLoop = () => vtkWarningMacro('empty event loop');\n  function updateCurrentRenderer(x, y) {\n    if (!model._forcedRenderer) {\n      model.currentRenderer = publicAPI.findPokedRenderer(x, y);\n    }\n  }\n  publicAPI.getCurrentRenderer = () => {\n    if (model.currentRenderer) {\n      return model.currentRenderer;\n    }\n    updateCurrentRenderer(0, 0);\n    return model.currentRenderer;\n  };\n  function _getScreenEventPositionFor(source) {\n    const canvas = model._view.getCanvas();\n    const bounds = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / bounds.width;\n    const scaleY = canvas.height / bounds.height;\n    const position = {\n      x: scaleX * (source.clientX - bounds.left),\n      y: scaleY * (bounds.height - source.clientY + bounds.top),\n      z: 0\n    };\n\n    // if multitouch, do not update the current renderer\n    if (pointerCache.size <= 1 || !model.currentRenderer) {\n      updateCurrentRenderer(position.x, position.y);\n    }\n    return position;\n  }\n  // Allow user to override it\n  const getScreenEventPositionFor = model._getScreenEventPositionFor || _getScreenEventPositionFor;\n  function getModifierKeysFor(event) {\n    return {\n      controlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey\n    };\n  }\n  function getKeysFor(event) {\n    const modifierKeys = getModifierKeysFor(event);\n    const keys = {\n      key: event.key,\n      keyCode: event.charCode,\n      ...modifierKeys\n    };\n    return keys;\n  }\n  function getDeviceTypeFor(event) {\n    return event.pointerType || '';\n  }\n  const _bindEvents = () => {\n    if (model.container === null) {\n      return;\n    }\n    const {\n      container\n    } = model;\n    container.addEventListener('contextmenu', preventDefault);\n    container.addEventListener('wheel', publicAPI.handleWheel);\n    container.addEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    container.addEventListener('pointerenter', publicAPI.handlePointerEnter);\n    container.addEventListener('pointerleave', publicAPI.handlePointerLeave);\n    container.addEventListener('pointermove', publicAPI.handlePointerMove, {\n      passive: false\n    });\n    container.addEventListener('pointerdown', publicAPI.handlePointerDown, {\n      passive: false\n    });\n    container.addEventListener('pointerup', publicAPI.handlePointerUp);\n    container.addEventListener('pointercancel', publicAPI.handlePointerCancel);\n    document.addEventListener('keypress', publicAPI.handleKeyPress);\n    document.addEventListener('keydown', publicAPI.handleKeyDown);\n    document.addEventListener('keyup', publicAPI.handleKeyUp);\n    document.addEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n\n    // using touchAction is more performant than preventDefault\n    // in a touchstart handler.\n    container.style.touchAction = 'none';\n    container.style.userSelect = 'none';\n    // disables tap highlight for when cursor is pointer\n    container.style.webkitTapHighlightColor = 'rgba(0,0,0,0)';\n  };\n\n  // For backward compatibility.\n  // Necessary for using unbind/bindEvent without calling setContainer.\n  publicAPI.bindEvents = container => {\n    if (container === null) {\n      return;\n    }\n    const res = superClass.setContainer(container);\n    if (res) {\n      _bindEvents();\n    }\n  };\n  const _unbindEvents = () => {\n    // Clear any previous timeouts and state variables that control mouse / touchpad behavior.\n    clearTimeout(model.moveTimeoutID);\n    clearTimeout(model.wheelTimeoutID);\n    model.moveTimeoutID = 0;\n    model.wheelTimeoutID = 0;\n    wheelCoefficient = 1.0;\n    const {\n      container\n    } = model;\n    if (container) {\n      container.removeEventListener('contextmenu', preventDefault);\n      container.removeEventListener('wheel', publicAPI.handleWheel);\n      container.removeEventListener('DOMMouseScroll', publicAPI.handleWheel);\n      container.removeEventListener('pointerenter', publicAPI.handlePointerEnter);\n      container.removeEventListener('pointerleave', publicAPI.handlePointerLeave);\n      container.removeEventListener('pointermove', publicAPI.handlePointerMove, {\n        passive: false\n      });\n      container.removeEventListener('pointerdown', publicAPI.handlePointerDown, {\n        passive: false\n      });\n      container.removeEventListener('pointerup', publicAPI.handlePointerUp);\n      container.removeEventListener('pointercancel', publicAPI.handlePointerCancel);\n    }\n    document.removeEventListener('keypress', publicAPI.handleKeyPress);\n    document.removeEventListener('keydown', publicAPI.handleKeyDown);\n    document.removeEventListener('keyup', publicAPI.handleKeyUp);\n    document.removeEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n    pointerCache.clear();\n  };\n  publicAPI.unbindEvents = () => {\n    _unbindEvents();\n    superClass.setContainer(null);\n  };\n  publicAPI.handleKeyPress = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyPressEvent(data);\n  };\n  publicAPI.handleKeyDown = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyDownEvent(data);\n  };\n  publicAPI.handleKeyUp = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyUpEvent(data);\n  };\n  publicAPI.handlePointerEnter = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerEnterEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseEnterEvent(callData);\n    }\n  };\n  publicAPI.handlePointerLeave = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerLeaveEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseLeaveEvent(callData);\n    }\n  };\n  publicAPI.handlePointerDown = event => {\n    if (event.button > 2 || publicAPI.isPointerLocked()) {\n      // ignore events from extra mouse buttons such as `back` and `forward`\n      return;\n    }\n    if (model.preventDefaultOnPointerDown) {\n      preventDefault(event);\n    }\n    if (event.target.hasPointerCapture(event.pointerId)) {\n      event.target.releasePointerCapture(event.pointerId);\n    }\n    model.container.setPointerCapture(event.pointerId);\n    if (pointerCache.has(event.pointerId)) {\n      vtkWarningMacro('[RenderWindowInteractor] duplicate pointerId detected');\n    }\n    pointerCache.set(event.pointerId, {\n      pointerId: event.pointerId,\n      position: getScreenEventPositionFor(event)\n    });\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchStart(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseDown(event);\n        break;\n    }\n  };\n  publicAPI.handlePointerUp = event => {\n    if (pointerCache.has(event.pointerId)) {\n      if (model.preventDefaultOnPointerUp) {\n        preventDefault(event);\n      }\n      pointerCache.delete(event.pointerId);\n      model.container.releasePointerCapture(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerCancel = event => {\n    if (pointerCache.has(event.pointerId)) {\n      pointerCache.delete(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerMove = event => {\n    if (pointerCache.has(event.pointerId)) {\n      const pointer = pointerCache.get(event.pointerId);\n      pointer.position = getScreenEventPositionFor(event);\n    }\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchMove(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseMove(event);\n        break;\n    }\n  };\n  publicAPI.handleMouseDown = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonPressEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonPressEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonPressEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button pressed: ${event.button}`);\n        break;\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.requestPointerLock = () => {\n    if (model.container) {\n      model.container.requestPointerLock();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.exitPointerLock = () => document.exitPointerLock?.();\n\n  //----------------------------------------------------------------------\n  publicAPI.isPointerLocked = () => !!model.container && document.pointerLockElement === model.container;\n\n  //----------------------------------------------------------------------\n  publicAPI.handlePointerLockChange = () => {\n    if (publicAPI.isPointerLocked()) {\n      publicAPI.startPointerLockEvent();\n    } else {\n      publicAPI.endPointerLockEvent();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  function forceRender() {\n    if (model._view && model.enabled && model.enableRender) {\n      model.inRender = true;\n      model._view.traverseAllPasses();\n      model.inRender = false;\n    }\n    // outside the above test so that third-party code can redirect\n    // the render to the appropriate class\n    publicAPI.invokeRenderEvent();\n  }\n  publicAPI.requestAnimation = requestor => {\n    if (requestor === undefined) {\n      vtkErrorMacro(`undefined requester, can not start animating`);\n      return;\n    }\n    if (animationRequesters.has(requestor)) {\n      vtkWarningMacro(`requester is already registered for animating`);\n      return;\n    }\n    animationRequesters.add(requestor);\n    if (!model.animationRequest && animationRequesters.size === 1 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n\n  // continue animating for at least the specified duration of\n  // milliseconds.\n  publicAPI.extendAnimation = duration => {\n    const newEnd = Date.now() + duration;\n    model._animationExtendedEnd = Math.max(model._animationExtendedEnd, newEnd);\n    if (!model.animationRequest && animationRequesters.size === 0 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n  publicAPI.isAnimating = () => model.xrAnimation || model.animationRequest !== null;\n  publicAPI.cancelAnimation = function (requestor) {\n    let skipWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!animationRequesters.has(requestor)) {\n      if (!skipWarning) {\n        const requestStr = requestor && requestor.getClassName ? requestor.getClassName() : requestor;\n        vtkWarningMacro(`${requestStr} did not request an animation`);\n      }\n      return;\n    }\n    animationRequesters.delete(requestor);\n    if (model.animationRequest && animationRequesters.size === 0 && Date.now() > model._animationExtendedEnd) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.switchToXRAnimation = () => {\n    // cancel existing animation if any\n    if (model.animationRequest) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n    }\n    model.xrAnimation = true;\n  };\n  publicAPI.returnFromXRAnimation = () => {\n    model.xrAnimation = false;\n    if (animationRequesters.size !== 0) {\n      model.recentAnimationFrameRate = 10.0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    }\n  };\n  publicAPI.updateXRGamepads = (xrSession, xrFrame, xrRefSpace) => {\n    // watch for when buttons change state and fire events\n    xrSession.inputSources.forEach(inputSource => {\n      const gripPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.gripSpace, xrRefSpace);\n      const targetRayPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.targetRaySpace, xrRefSpace);\n      const gamepad = inputSource.gamepad;\n      const hand = inputSource.handedness;\n      if (!gamepad) {\n        return;\n      }\n      if (!(gamepad.index in model.lastGamepadValues)) {\n        model.lastGamepadValues[gamepad.index] = {\n          left: {\n            buttons: {}\n          },\n          right: {\n            buttons: {}\n          },\n          none: {\n            buttons: {}\n          }\n        };\n      }\n      for (let buttonIdx = 0; buttonIdx < gamepad.buttons.length; ++buttonIdx) {\n        if (!(buttonIdx in model.lastGamepadValues[gamepad.index][hand].buttons)) {\n          model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] = false;\n        }\n        if (model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] !== gamepad.buttons[buttonIdx].pressed && gripPose != null) {\n          publicAPI.button3DEvent({\n            gamepad,\n            position: gripPose.transform.position,\n            orientation: gripPose.transform.orientation,\n            targetPosition: targetRayPose.transform.position,\n            targetOrientation: targetRayPose.transform.orientation,\n            pressed: gamepad.buttons[buttonIdx].pressed,\n            device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController,\n            input: deviceInputMap[gamepad.mapping] && deviceInputMap[gamepad.mapping][buttonIdx] ? deviceInputMap[gamepad.mapping][buttonIdx] : Input.Trigger\n          });\n          model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] = gamepad.buttons[buttonIdx].pressed;\n        }\n        if (model.lastGamepadValues[gamepad.index][hand].buttons[buttonIdx] && gripPose != null) {\n          publicAPI.move3DEvent({\n            gamepad,\n            position: gripPose.transform.position,\n            orientation: gripPose.transform.orientation,\n            targetPosition: targetRayPose.transform.position,\n            targetOrientation: targetRayPose.transform.orientation,\n            device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController\n          });\n        }\n      }\n    });\n  };\n  publicAPI.handleMouseMove = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    if (model.moveTimeoutID === 0) {\n      publicAPI.startMouseMoveEvent(callData);\n    } else {\n      publicAPI.mouseMoveEvent(callData);\n      clearTimeout(model.moveTimeoutID);\n    }\n\n    // start a timer to keep us animating while we get mouse move events\n    model.moveTimeoutID = setTimeout(() => {\n      publicAPI.endMouseMoveEvent();\n      model.moveTimeoutID = 0;\n    }, 200);\n  };\n  publicAPI.handleAnimation = () => {\n    const currTime = Date.now();\n    model._animationFrameCount++;\n    if (currTime - model._animationStartTime > 1000.0 && model._animationFrameCount > 1) {\n      model.recentAnimationFrameRate = 1000.0 * (model._animationFrameCount - 1) / (currTime - model._animationStartTime);\n      model.lastFrameTime = 1.0 / model.recentAnimationFrameRate;\n      publicAPI.animationFrameRateUpdateEvent();\n      model._animationStartTime = currTime;\n      model._animationFrameCount = 1;\n    }\n    publicAPI.animationEvent();\n    forceRender();\n    if (animationRequesters.size > 0 || Date.now() < model._animationExtendedEnd) {\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    } else {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.handleWheel = event => {\n    preventDefault(event);\n\n    /**\n     * wheel event values can vary significantly across browsers, platforms\n     * and devices [1]. `normalizeWheel` uses facebook's solution from their\n     * fixed-data-table repository [2].\n     *\n     * [1] https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel\n     * [2] https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n     *\n     * This code will return an object with properties:\n     *\n     *   spinX   -- normalized spin speed (use for zoom) - x plane\n     *   spinY   -- \" - y plane\n     *   pixelX  -- normalized distance (to pixels) - x plane\n     *   pixelY  -- \" - y plane\n     *\n     */\n    const callData = {\n      ...normalizeWheel(event),\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n\n    // Wheel events are thought to scroll pages (i.e. multiple lines at once).\n    // See normalizeWheel() documentation for more context.\n    // While trackpad wheel events are many small (<1) wheel spins,\n    // mouse wheel events have absolute spin values higher than 1.\n    // Here the first spin value is \"recorded\", and used to normalize\n    // all the following mouse wheel events.\n    if (model.wheelTimeoutID === 0) {\n      // we attempt to distinguish between trackpads and mice\n      // .3 will be larger than the first trackpad event,\n      // but small enough to detect some common edge case mice\n      if (Math.abs(callData.spinY) >= 0.3) {\n        // Event is coming from mouse wheel\n        wheelCoefficient = Math.abs(callData.spinY);\n      } else {\n        // Event is coming from trackpad\n        wheelCoefficient = 1;\n      }\n    }\n    callData.spinY /= wheelCoefficient;\n    if (model.wheelTimeoutID === 0) {\n      publicAPI.startMouseWheelEvent(callData);\n      publicAPI.mouseWheelEvent(callData);\n    } else {\n      publicAPI.mouseWheelEvent(callData);\n      clearTimeout(model.wheelTimeoutID);\n    }\n    if (model.mouseScrollDebounceByPass) {\n      publicAPI.extendAnimation(600);\n      publicAPI.endMouseWheelEvent();\n      model.wheelTimeoutID = 0;\n    } else {\n      // start a timer to keep us animating while we get wheel events\n      model.wheelTimeoutID = setTimeout(() => {\n        publicAPI.extendAnimation(600);\n        publicAPI.endMouseWheelEvent();\n        model.wheelTimeoutID = 0;\n      }, 200);\n    }\n  };\n  publicAPI.handleMouseUp = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonReleaseEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonReleaseEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonReleaseEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button released: ${event.button}`);\n        break;\n    }\n  };\n  publicAPI.handleTouchStart = event => {\n    const pointers = [...pointerCache.values()];\n    // If multitouch\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      // did we just transition to multitouch?\n      if (pointers.length === 2) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      }\n      // handle the gesture\n      publicAPI.recognizeGesture('TouchStart', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: getScreenEventPositionFor(event),\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonPressEvent(callData);\n    }\n  };\n  publicAPI.handleTouchMove = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      publicAPI.recognizeGesture('TouchMove', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.mouseMoveEvent(callData);\n    }\n  };\n  publicAPI.handleTouchEnd = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures) {\n      // No more fingers down\n      if (pointers.length === 0) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: getScreenEventPositionFor(event),\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      } else if (pointers.length === 1) {\n        // If one finger left, end touch and start button press\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchEnd', positions);\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonPressEvent(callData);\n      } else {\n        // If more than one finger left, keep touch move\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchMove', positions);\n      }\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonReleaseEvent(callData);\n    }\n  };\n  publicAPI.setView = val => {\n    if (model._view === val) {\n      return;\n    }\n    model._view = val;\n    model._view.getRenderable().setInteractor(publicAPI);\n    publicAPI.modified();\n  };\n  publicAPI.getFirstRenderer = () => model._view?.getRenderable()?.getRenderersByReference()?.[0];\n  publicAPI.findPokedRenderer = function () {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (!model._view) {\n      return null;\n    }\n    // The original order of renderers needs to remain as\n    // the first one is the one we want to manipulate the camera on.\n    const rc = model._view?.getRenderable()?.getRenderers();\n    if (!rc || rc.length === 0) {\n      return null;\n    }\n    rc.sort((a, b) => a.getLayer() - b.getLayer());\n    let interactiveren = null;\n    let viewportren = null;\n    let currentRenderer = null;\n    let count = rc.length;\n    while (count--) {\n      const aren = rc[count];\n      if (model._view.isInViewport(x, y, aren) && aren.getInteractive()) {\n        currentRenderer = aren;\n        break;\n      }\n      if (interactiveren === null && aren.getInteractive()) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        interactiveren = aren;\n      }\n      if (viewportren === null && model._view.isInViewport(x, y, aren)) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        viewportren = aren;\n      }\n    }\n\n    // We must have a value.  If we found an interactive renderer before, that's\n    // better than a non-interactive renderer.\n    if (currentRenderer === null) {\n      currentRenderer = interactiveren;\n    }\n\n    // We must have a value.  If we found a renderer that is in the viewport,\n    // that is better than any old viewport (but not as good as an interactive\n    // one).\n    if (currentRenderer === null) {\n      currentRenderer = viewportren;\n    }\n\n    // We must have a value - take anything.\n    if (currentRenderer == null) {\n      currentRenderer = rc[0];\n    }\n    return currentRenderer;\n  };\n\n  // only render if we are not animating. If we are animating\n  // then renders will happen naturally anyhow and we definitely\n  // do not want extra renders as the make the apparent interaction\n  // rate slower.\n  publicAPI.render = () => {\n    if (!publicAPI.isAnimating() && !model.inRender) {\n      forceRender();\n    }\n  };\n\n  // create the generic Event methods\n  handledEvents.forEach(eventName => {\n    const lowerFirst = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n    publicAPI[`${lowerFirst}Event`] = arg => {\n      // Check that interactor enabled\n      if (!model.enabled) {\n        return;\n      }\n\n      // Check that a poked renderer exists\n      const renderer = publicAPI.getCurrentRenderer();\n      if (!renderer) {\n        vtkOnceErrorMacro(`\n          Can not forward events without a current renderer on the interactor.\n        `);\n        return;\n      }\n\n      // Pass the eventName and the poked renderer\n      const callData = {\n        type: eventName,\n        pokedRenderer: model.currentRenderer,\n        firstRenderer: publicAPI.getFirstRenderer(),\n        // Add the arguments to the call data\n        ...arg\n      };\n\n      // Call invoke\n      publicAPI[`invoke${eventName}`](callData);\n    };\n  });\n\n  // we know we are in multitouch now, so start recognizing\n  publicAPI.recognizeGesture = (event, positions) => {\n    // more than two pointers we ignore\n    if (Object.keys(positions).length > 2) {\n      return;\n    }\n    if (!model.startingEventPositions) {\n      model.startingEventPositions = {};\n    }\n\n    // store the initial positions\n    if (event === 'TouchStart') {\n      Object.keys(positions).forEach(key => {\n        model.startingEventPositions[key] = positions[key];\n      });\n      // we do not know what the gesture is yet\n      model.currentGesture = 'Start';\n      return;\n    }\n\n    // end the gesture if needed\n    if (event === 'TouchEnd') {\n      if (model.currentGesture === 'Pinch') {\n        publicAPI.render();\n        publicAPI.endPinchEvent();\n      }\n      if (model.currentGesture === 'Rotate') {\n        publicAPI.render();\n        publicAPI.endRotateEvent();\n      }\n      if (model.currentGesture === 'Pan') {\n        publicAPI.render();\n        publicAPI.endPanEvent();\n      }\n      model.currentGesture = 'Start';\n      model.startingEventPositions = {};\n      return;\n    }\n\n    // what are the two pointers we are working with\n    let count = 0;\n    const posVals = [];\n    const startVals = [];\n    Object.keys(positions).forEach(key => {\n      posVals[count] = positions[key];\n      startVals[count] = model.startingEventPositions[key];\n      count++;\n    });\n\n    // The meat of the algorithm\n    // on move events we analyze them to determine what type\n    // of movement it is and then deal with it.\n    // calculate the distances\n    const originalDistance = Math.sqrt((startVals[0].x - startVals[1].x) * (startVals[0].x - startVals[1].x) + (startVals[0].y - startVals[1].y) * (startVals[0].y - startVals[1].y));\n    const newDistance = Math.sqrt((posVals[0].x - posVals[1].x) * (posVals[0].x - posVals[1].x) + (posVals[0].y - posVals[1].y) * (posVals[0].y - posVals[1].y));\n\n    // calculate rotations\n    let originalAngle = degreesFromRadians(Math.atan2(startVals[1].y - startVals[0].y, startVals[1].x - startVals[0].x));\n    let newAngle = degreesFromRadians(Math.atan2(posVals[1].y - posVals[0].y, posVals[1].x - posVals[0].x));\n\n    // angles are cyclic so watch for that, 1 and 359 are only 2 apart :)\n    let angleDeviation = newAngle - originalAngle;\n    newAngle = newAngle + 180.0 >= 360.0 ? newAngle - 180.0 : newAngle + 180.0;\n    originalAngle = originalAngle + 180.0 >= 360.0 ? originalAngle - 180.0 : originalAngle + 180.0;\n    if (Math.abs(newAngle - originalAngle) < Math.abs(angleDeviation)) {\n      angleDeviation = newAngle - originalAngle;\n    }\n\n    // calculate the translations\n    const trans = [];\n    trans[0] = (posVals[0].x - startVals[0].x + posVals[1].x - startVals[1].x) / 2.0;\n    trans[1] = (posVals[0].y - startVals[0].y + posVals[1].y - startVals[1].y) / 2.0;\n    if (event === 'TouchMove') {\n      // OK we want to\n      // - immediately respond to the user\n      // - allow the user to zoom without panning (saves focal point)\n      // - allow the user to rotate without panning (saves focal point)\n\n      // do we know what gesture we are doing yet? If not\n      // see if we can figure it out\n      if (model.currentGesture === 'Start') {\n        // pinch is a move to/from the center point\n        // rotate is a move along the circumference\n        // pan is a move of the center point\n        // compute the distance along each of these axes in pixels\n        // the first to break thresh wins\n        let thresh = 0.01 * Math.sqrt(model.container.clientWidth * model.container.clientWidth + model.container.clientHeight * model.container.clientHeight);\n        if (thresh < 15.0) {\n          thresh = 15.0;\n        }\n        const pinchDistance = Math.abs(newDistance - originalDistance);\n        const rotateDistance = newDistance * 3.1415926 * Math.abs(angleDeviation) / 360.0;\n        const panDistance = Math.sqrt(trans[0] * trans[0] + trans[1] * trans[1]);\n        if (pinchDistance > thresh && pinchDistance > rotateDistance && pinchDistance > panDistance) {\n          model.currentGesture = 'Pinch';\n          const callData = {\n            scale: 1.0,\n            touches: positions\n          };\n          publicAPI.startPinchEvent(callData);\n        } else if (rotateDistance > thresh && rotateDistance > panDistance) {\n          model.currentGesture = 'Rotate';\n          const callData = {\n            rotation: 0.0,\n            touches: positions\n          };\n          publicAPI.startRotateEvent(callData);\n        } else if (panDistance > thresh) {\n          model.currentGesture = 'Pan';\n          const callData = {\n            translation: [0, 0],\n            touches: positions\n          };\n          publicAPI.startPanEvent(callData);\n        }\n      } else {\n        // if we have found a specific type of movement then\n        // handle it\n        if (model.currentGesture === 'Rotate') {\n          const callData = {\n            rotation: angleDeviation,\n            touches: positions\n          };\n          publicAPI.rotateEvent(callData);\n        }\n        if (model.currentGesture === 'Pinch') {\n          const callData = {\n            scale: newDistance / originalDistance,\n            touches: positions\n          };\n          publicAPI.pinchEvent(callData);\n        }\n        if (model.currentGesture === 'Pan') {\n          const callData = {\n            translation: trans,\n            touches: positions\n          };\n          publicAPI.panEvent(callData);\n        }\n      }\n    }\n  };\n  publicAPI.handleVisibilityChange = () => {\n    model._animationStartTime = Date.now();\n    model._animationFrameCount = 0;\n  };\n  publicAPI.setCurrentRenderer = r => {\n    model._forcedRenderer = !!r;\n    model.currentRenderer = r;\n  };\n  publicAPI.setContainer = container => {\n    _unbindEvents();\n    const res = superClass.setContainer(container ?? null);\n    if (res) {\n      _bindEvents();\n    }\n    return res;\n  };\n\n  // Stop animating if the renderWindowInteractor is deleted.\n  publicAPI.delete = () => {\n    while (animationRequesters.size) {\n      publicAPI.cancelAnimation(animationRequesters.values().next().value);\n    }\n    if (typeof document.hidden !== 'undefined') {\n      document.removeEventListener('visibilitychange', publicAPI.handleVisibilityChange);\n    }\n    if (model.container) {\n      publicAPI.setContainer(null);\n    }\n    superClass.delete();\n  };\n\n  // Use the Page Visibility API to detect when we switch away from or back to\n  // this tab, and reset the animationFrameStart. When tabs are not active, browsers\n  // will stop calling requestAnimationFrame callbacks.\n  if (typeof document.hidden !== 'undefined') {\n    document.addEventListener('visibilitychange', publicAPI.handleVisibilityChange, false);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  renderWindow: null,\n  interactorStyle: null,\n  picker: null,\n  pickingManager: null,\n  initialized: false,\n  enabled: false,\n  enableRender: true,\n  currentRenderer: null,\n  lightFollowCamera: true,\n  desiredUpdateRate: 30.0,\n  stillUpdateRate: 2.0,\n  container: null,\n  // _view: null,\n  recognizeGestures: true,\n  currentGesture: 'Start',\n  animationRequest: null,\n  lastFrameTime: 0.1,\n  recentAnimationFrameRate: 10.0,\n  wheelTimeoutID: 0,\n  moveTimeoutID: 0,\n  lastGamepadValues: {},\n  preventDefaultOnPointerDown: false,\n  preventDefaultOnPointerUp: false,\n  mouseScrollDebounceByPass: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  // run animation at least until this time\n  model._animationExtendedEnd = 0;\n  macro.event(publicAPI, model, 'RenderEvent');\n  handledEvents.forEach(eventName => macro.event(publicAPI, model, eventName));\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['initialized', 'interactorStyle', 'lastFrameTime', 'recentAnimationFrameRate', '_view']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['container', 'lightFollowCamera', 'enabled', 'enableRender', 'recognizeGestures', 'desiredUpdateRate', 'stillUpdateRate', 'picker', 'preventDefaultOnPointerDown', 'preventDefaultOnPointerUp', 'mouseScrollDebounceByPass']);\n  macro.moveToProtected(publicAPI, model, ['view']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkRenderWindowInteractor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindowInteractor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindowInteractor$1 = {\n  newInstance,\n  extend,\n  handledEvents,\n  ...Constants\n};\n\nexport { vtkRenderWindowInteractor$1 as default, extend, newInstance };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}