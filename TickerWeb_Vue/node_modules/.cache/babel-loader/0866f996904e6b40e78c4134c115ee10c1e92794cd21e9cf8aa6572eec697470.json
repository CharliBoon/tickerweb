{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkImplicitFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImplicitFunction(publicAPI, model) {\n  model.classHierarchy.push('vtkImplicitFunction');\n  publicAPI.functionValue = xyz => {\n    if (!model.transform) {\n      return publicAPI.evaluateFunction(xyz);\n    }\n    const transformedXYZ = [];\n    model.transform.transformPoint(xyz, transformedXYZ);\n    return publicAPI.evaluateFunction(transformedXYZ);\n  };\n  publicAPI.evaluateFunction = _xyz => {\n    macro.vtkErrorMacro('not implemented');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  // transform : null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['transform']);\n  vtkImplicitFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImplicitFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImplicitFunction$1 = {\n  newInstance,\n  extend\n};\nexport { vtkImplicitFunction$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkImplicitFunction","publicAPI","model","classHierarchy","push","functionValue","xyz","transform","evaluateFunction","transformedXYZ","transformPoint","_xyz","vtkErrorMacro","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","setGet","newInstance","vtkImplicitFunction$1","default"],"sources":["C:/Users/Malcolm/Projects/Web/TickerWeb/node_modules/@kitware/vtk.js/Common/DataModel/ImplicitFunction.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkImplicitFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImplicitFunction(publicAPI, model) {\n  model.classHierarchy.push('vtkImplicitFunction');\n  publicAPI.functionValue = xyz => {\n    if (!model.transform) {\n      return publicAPI.evaluateFunction(xyz);\n    }\n    const transformedXYZ = [];\n    model.transform.transformPoint(xyz, transformedXYZ);\n    return publicAPI.evaluateFunction(transformedXYZ);\n  };\n  publicAPI.evaluateFunction = _xyz => {\n    macro.vtkErrorMacro('not implemented');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  // transform : null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['transform']);\n  vtkImplicitFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImplicitFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImplicitFunction$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImplicitFunction$1 as default, extend, newInstance };\n"],"mappings":";AAAA,SAASA,CAAC,IAAIC,KAAK,QAAQ,kBAAkB;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASC,mBAAmBA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAC7CA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,qBAAqB,CAAC;EAChDH,SAAS,CAACI,aAAa,GAAGC,GAAG,IAAI;IAC/B,IAAI,CAACJ,KAAK,CAACK,SAAS,EAAE;MACpB,OAAON,SAAS,CAACO,gBAAgB,CAACF,GAAG,CAAC;IACxC;IACA,MAAMG,cAAc,GAAG,EAAE;IACzBP,KAAK,CAACK,SAAS,CAACG,cAAc,CAACJ,GAAG,EAAEG,cAAc,CAAC;IACnD,OAAOR,SAAS,CAACO,gBAAgB,CAACC,cAAc,CAAC;EACnD,CAAC;EACDR,SAAS,CAACO,gBAAgB,GAAGG,IAAI,IAAI;IACnCZ,KAAK,CAACa,aAAa,CAAC,iBAAiB,CAAC;EACxC,CAAC;AACH;;AAEA;AACA;AACA;AACA,MAAMC,cAAc,GAAG;EACrB;AAAA,CACD;;AAED;;AAEA,SAASC,MAAMA,CAACb,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIa,aAAa,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FG,MAAM,CAACC,MAAM,CAAClB,KAAK,EAAEW,cAAc,EAAEE,aAAa,CAAC;;EAEnD;EACAhB,KAAK,CAACsB,GAAG,CAACpB,SAAS,EAAEC,KAAK,CAAC;EAC3BH,KAAK,CAACuB,MAAM,CAACrB,SAAS,EAAEC,KAAK,EAAE,CAAC,WAAW,CAAC,CAAC;EAC7CF,mBAAmB,CAACC,SAAS,EAAEC,KAAK,CAAC;AACvC;;AAEA;;AAEA,MAAMqB,WAAW,GAAGxB,KAAK,CAACwB,WAAW,CAACT,MAAM,EAAE,qBAAqB,CAAC;;AAEpE;;AAEA,IAAIU,qBAAqB,GAAG;EAC1BD,WAAW;EACXT;AACF,CAAC;AAED,SAASU,qBAAqB,IAAIC,OAAO,EAAEX,MAAM,EAAES,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}