{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { m as macro } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nconst {\n  vtkErrorMacro\n} = macro;\n\n// prettier-ignore\nconst BOUNDS_MAP = [0, 2, 4,\n// pt 0\n1, 2, 4,\n// pt 1\n0, 3, 4,\n// pt 2\n1, 3, 4,\n// pt 3\n0, 2, 5,\n// pt 4\n1, 2, 5,\n// pt 5\n0, 3, 5,\n// pt 6\n1, 3, 5 // pt 7\n];\n\n// prettier-ignore\nconst LINE_ARRAY = [2, 0, 1, 2, 2, 3, 2, 4, 5, 2, 6, 7, 2, 0, 2, 2, 1, 3, 2, 4, 6, 2, 5, 7, 2, 0, 4, 2, 1, 5, 2, 2, 6, 2, 3, 7];\n\n// ----------------------------------------------------------------------------\n// vtkOutlineFilter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOutlineFilter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOutlineFilter');\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    const bounds = input.getBounds();\n    const output = vtkPolyData.newInstance();\n    output.getPoints().setData(Float32Array.from(BOUNDS_MAP.map(idx => bounds[idx])), 3);\n    output.getLines().setData(Uint16Array.from(LINE_ARRAY));\n    outData[0] = output;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n\n  // Object specific methods\n  vtkOutlineFilter(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOutlineFilter');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOutlineFilter$1 = {\n  newInstance,\n  extend,\n  BOUNDS_MAP,\n  LINE_ARRAY\n};\nexport { BOUNDS_MAP, LINE_ARRAY, vtkOutlineFilter$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkPolyData","vtkErrorMacro","BOUNDS_MAP","LINE_ARRAY","vtkOutlineFilter","publicAPI","model","classHierarchy","push","requestData","inData","outData","input","bounds","getBounds","output","newInstance","getPoints","setData","Float32Array","from","map","idx","getLines","Uint16Array","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","algo","vtkOutlineFilter$1","default"],"sources":["C:/Users/Malcolm/Projects/Web/TickerWeb/TickerWeb_Vue/node_modules/@kitware/vtk.js/Filters/General/OutlineFilter.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// prettier-ignore\nconst BOUNDS_MAP = [0, 2, 4,\n// pt 0\n1, 2, 4,\n// pt 1\n0, 3, 4,\n// pt 2\n1, 3, 4,\n// pt 3\n0, 2, 5,\n// pt 4\n1, 2, 5,\n// pt 5\n0, 3, 5,\n// pt 6\n1, 3, 5 // pt 7\n];\n\n// prettier-ignore\nconst LINE_ARRAY = [2, 0, 1, 2, 2, 3, 2, 4, 5, 2, 6, 7, 2, 0, 2, 2, 1, 3, 2, 4, 6, 2, 5, 7, 2, 0, 4, 2, 1, 5, 2, 2, 6, 2, 3, 7];\n\n// ----------------------------------------------------------------------------\n// vtkOutlineFilter methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOutlineFilter(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOutlineFilter');\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    const bounds = input.getBounds();\n    const output = vtkPolyData.newInstance();\n    output.getPoints().setData(Float32Array.from(BOUNDS_MAP.map(idx => bounds[idx])), 3);\n    output.getLines().setData(Uint16Array.from(LINE_ARRAY));\n    outData[0] = output;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n\n  // Object specific methods\n  vtkOutlineFilter(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOutlineFilter');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOutlineFilter$1 = {\n  newInstance,\n  extend,\n  BOUNDS_MAP,\n  LINE_ARRAY\n};\n\nexport { BOUNDS_MAP, LINE_ARRAY, vtkOutlineFilter$1 as default, extend, newInstance };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}