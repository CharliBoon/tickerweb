{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkCompositeCameraManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCompositeCameraManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCompositeCameraManipulator');\n\n  //-------------------------------------------------------------------------\n  publicAPI.computeDisplayCenter = (iObserver, renderer) => {\n    const pt = iObserver.computeWorldToDisplay(renderer, model.center[0], model.center[1], model.center[2]);\n    model.displayCenter[0] = pt[0];\n    model.displayCenter[1] = pt[1];\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  center: [0, 0, 0],\n  rotationFactor: 1,\n  displayCenter: [0, 0]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['rotationFactor']);\n  macro.setGetArray(publicAPI, model, ['displayCenter'], 2);\n  macro.setGetArray(publicAPI, model, ['center'], 3);\n\n  // Object specific methods\n  vtkCompositeCameraManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkCompositeCameraManipulator$1 = {\n  extend\n};\nexport { vtkCompositeCameraManipulator$1 as default, extend };","map":{"version":3,"names":["m","macro","vtkCompositeCameraManipulator","publicAPI","model","classHierarchy","push","computeDisplayCenter","iObserver","renderer","pt","computeWorldToDisplay","center","displayCenter","DEFAULT_VALUES","rotationFactor","extend","initialValues","arguments","length","undefined","Object","assign","setGet","setGetArray","vtkCompositeCameraManipulator$1","default"],"sources":["/home/ims/VSCodeProjects/TickerWeb/TickerWeb_Vue/node_modules/@kitware/vtk.js/Interaction/Manipulators/CompositeCameraManipulator.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkCompositeCameraManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCompositeCameraManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCompositeCameraManipulator');\n\n  //-------------------------------------------------------------------------\n  publicAPI.computeDisplayCenter = (iObserver, renderer) => {\n    const pt = iObserver.computeWorldToDisplay(renderer, model.center[0], model.center[1], model.center[2]);\n    model.displayCenter[0] = pt[0];\n    model.displayCenter[1] = pt[1];\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  center: [0, 0, 0],\n  rotationFactor: 1,\n  displayCenter: [0, 0]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['rotationFactor']);\n  macro.setGetArray(publicAPI, model, ['displayCenter'], 2);\n  macro.setGetArray(publicAPI, model, ['center'], 3);\n\n  // Object specific methods\n  vtkCompositeCameraManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkCompositeCameraManipulator$1 = {\n  extend\n};\n\nexport { vtkCompositeCameraManipulator$1 as default, extend };\n"],"mappings":";AAAA,SAASA,CAAC,IAAIC,KAAK,QAAQ,kBAAkB;;AAE7C;AACA;AACA;;AAEA,SAASC,6BAA6BA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACvD;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,+BAA+B,CAAC;;EAE1D;EACAH,SAAS,CAACI,oBAAoB,GAAG,CAACC,SAAS,EAAEC,QAAQ,KAAK;IACxD,MAAMC,EAAE,GAAGF,SAAS,CAACG,qBAAqB,CAACF,QAAQ,EAAEL,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,EAAER,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,EAAER,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,CAAC;IACvGR,KAAK,CAACS,aAAa,CAAC,CAAC,CAAC,GAAGH,EAAE,CAAC,CAAC,CAAC;IAC9BN,KAAK,CAACS,aAAa,CAAC,CAAC,CAAC,GAAGH,EAAE,CAAC,CAAC,CAAC;EAChC,CAAC;AACH;;AAEA;AACA;AACA;;AAEA,MAAMI,cAAc,GAAG;EACrBF,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjBG,cAAc,EAAE,CAAC;EACjBF,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC;AACtB,CAAC;;AAED;;AAEA,SAASG,MAAMA,CAACb,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIa,aAAa,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FG,MAAM,CAACC,MAAM,CAAClB,KAAK,EAAEU,cAAc,EAAEG,aAAa,CAAC;;EAEnD;EACAhB,KAAK,CAACsB,MAAM,CAACpB,SAAS,EAAEC,KAAK,EAAE,CAAC,gBAAgB,CAAC,CAAC;EAClDH,KAAK,CAACuB,WAAW,CAACrB,SAAS,EAAEC,KAAK,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;EACzDH,KAAK,CAACuB,WAAW,CAACrB,SAAS,EAAEC,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;;EAElD;EACAF,6BAA6B,CAACC,SAAS,EAAEC,KAAK,CAAC;AACjD;;AAEA;;AAEA,IAAIqB,+BAA+B,GAAG;EACpCT;AACF,CAAC;AAED,SAASS,+BAA+B,IAAIC,OAAO,EAAEV,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}