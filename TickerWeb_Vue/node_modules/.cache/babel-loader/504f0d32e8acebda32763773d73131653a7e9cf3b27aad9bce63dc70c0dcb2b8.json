{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\nimport vtkCompositeCameraManipulator from './CompositeCameraManipulator.js';\nimport vtkCompositeMouseManipulator from './CompositeMouseManipulator.js';\nimport { r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkMouseCameraSliceManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMouseCameraSliceManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMouseCameraSliceManipulator');\n  publicAPI.onButtonDown = (interactor, renderer, position) => {\n    model.previousPosition = position;\n  };\n  publicAPI.onMouseMove = (interactor, renderer, position) => {\n    if (!position) {\n      return;\n    }\n    const dy = position.y - model.previousPosition.y;\n    const camera = renderer.getActiveCamera();\n    const range = camera.getClippingRange();\n    let distance = camera.getDistance();\n\n    // scale the interaction by the height of the viewport\n    let viewportHeight = 0.0;\n    if (camera.getParallelProjection()) {\n      viewportHeight = 2.0 * camera.getParallelScale();\n    } else {\n      const angle = radiansFromDegrees(camera.getViewAngle());\n      viewportHeight = 2.0 * distance * Math.tan(0.5 * angle);\n    }\n    const size = interactor.getView().getViewportSize(renderer);\n    const delta = dy * viewportHeight / size[1];\n    distance += delta;\n\n    // clamp the distance to the clipping range\n    if (distance < range[0]) {\n      distance = range[0] + viewportHeight * 1e-3;\n    }\n    if (distance > range[1]) {\n      distance = range[1] - viewportHeight * 1e-3;\n    }\n    camera.setDistance(distance);\n    model.previousPosition = position;\n  };\n  publicAPI.onScroll = (interactor, renderer, delta) => {\n    if (!delta) {\n      return;\n    }\n    let scrollDelta = 1.0 - delta;\n    scrollDelta *= 25; // TODO: expose factor?\n\n    const camera = renderer.getActiveCamera();\n    const range = camera.getClippingRange();\n    let distance = camera.getDistance();\n    distance += scrollDelta;\n\n    // clamp the distance to the clipping range\n    if (distance < range[0]) {\n      distance = range[0];\n    }\n    if (distance > range[1]) {\n      distance = range[1];\n    }\n    camera.setDistance(distance);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  vtkCompositeCameraManipulator.extend(publicAPI, model, initialValues);\n  vtkCompositeMouseManipulator.extend(publicAPI, model, initialValues);\n\n  // Object specific methods\n  vtkMouseCameraSliceManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMouseCameraSliceManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMouseCameraSliceManipulator$1 = {\n  newInstance,\n  extend\n};\nexport { vtkMouseCameraSliceManipulator$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkCompositeCameraManipulator","vtkCompositeMouseManipulator","r","radiansFromDegrees","vtkMouseCameraSliceManipulator","publicAPI","model","classHierarchy","push","onButtonDown","interactor","renderer","position","previousPosition","onMouseMove","dy","y","camera","getActiveCamera","range","getClippingRange","distance","getDistance","viewportHeight","getParallelProjection","getParallelScale","angle","getViewAngle","Math","tan","size","getView","getViewportSize","delta","setDistance","onScroll","scrollDelta","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","newInstance","vtkMouseCameraSliceManipulator$1","default"],"sources":["/home/ims/VSCodeProjects/TickerWeb/TickerWeb_Vue/node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraSliceManipulator.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport vtkCompositeCameraManipulator from './CompositeCameraManipulator.js';\nimport vtkCompositeMouseManipulator from './CompositeMouseManipulator.js';\nimport { r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkMouseCameraSliceManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMouseCameraSliceManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMouseCameraSliceManipulator');\n  publicAPI.onButtonDown = (interactor, renderer, position) => {\n    model.previousPosition = position;\n  };\n  publicAPI.onMouseMove = (interactor, renderer, position) => {\n    if (!position) {\n      return;\n    }\n    const dy = position.y - model.previousPosition.y;\n    const camera = renderer.getActiveCamera();\n    const range = camera.getClippingRange();\n    let distance = camera.getDistance();\n\n    // scale the interaction by the height of the viewport\n    let viewportHeight = 0.0;\n    if (camera.getParallelProjection()) {\n      viewportHeight = 2.0 * camera.getParallelScale();\n    } else {\n      const angle = radiansFromDegrees(camera.getViewAngle());\n      viewportHeight = 2.0 * distance * Math.tan(0.5 * angle);\n    }\n    const size = interactor.getView().getViewportSize(renderer);\n    const delta = dy * viewportHeight / size[1];\n    distance += delta;\n\n    // clamp the distance to the clipping range\n    if (distance < range[0]) {\n      distance = range[0] + viewportHeight * 1e-3;\n    }\n    if (distance > range[1]) {\n      distance = range[1] - viewportHeight * 1e-3;\n    }\n    camera.setDistance(distance);\n    model.previousPosition = position;\n  };\n  publicAPI.onScroll = (interactor, renderer, delta) => {\n    if (!delta) {\n      return;\n    }\n    let scrollDelta = 1.0 - delta;\n    scrollDelta *= 25; // TODO: expose factor?\n\n    const camera = renderer.getActiveCamera();\n    const range = camera.getClippingRange();\n    let distance = camera.getDistance();\n    distance += scrollDelta;\n\n    // clamp the distance to the clipping range\n    if (distance < range[0]) {\n      distance = range[0];\n    }\n    if (distance > range[1]) {\n      distance = range[1];\n    }\n    camera.setDistance(distance);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  vtkCompositeCameraManipulator.extend(publicAPI, model, initialValues);\n  vtkCompositeMouseManipulator.extend(publicAPI, model, initialValues);\n\n  // Object specific methods\n  vtkMouseCameraSliceManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMouseCameraSliceManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMouseCameraSliceManipulator$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkMouseCameraSliceManipulator$1 as default, extend, newInstance };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}