{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\nimport vtkRenderWindowInteractor from './RenderWindowInteractor.js';\nconst {\n  vtkErrorMacro,\n  VOID\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------\n// Description:\n// Transform from world to display coordinates.\nfunction computeWorldToDisplay(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.worldToDisplay(x, y, z, renderer);\n}\n\n//----------------------------------------------------------------------------\n// Description:\n// Transform from display to world coordinates.\nfunction computeDisplayToWorld(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.displayToWorld(x, y, z, renderer);\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\nconst STATIC = {\n  computeWorldToDisplay,\n  computeDisplayToWorld\n};\n\n// ----------------------------------------------------------------------------\n// vtkInteractorObserver methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorObserver(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorObserver');\n  const superClass = {\n    ...publicAPI\n  };\n\n  //----------------------------------------------------------------------------\n  function unsubscribeFromEvents() {\n    while (model.subscribedEvents.length) {\n      model.subscribedEvents.pop().unsubscribe();\n    }\n  }\n\n  //----------------------------------------------------------------------------\n  // Check what events we can handle and register callbacks\n  function subscribeToEvents() {\n    vtkRenderWindowInteractor.handledEvents.forEach(eventName => {\n      if (publicAPI[`handle${eventName}`]) {\n        model.subscribedEvents.push(model._interactor[`on${eventName}`](callData => {\n          if (model.processEvents) {\n            return publicAPI[`handle${eventName}`](callData);\n          }\n          return VOID;\n        }, model.priority));\n      }\n    });\n  }\n\n  //----------------------------------------------------------------------------\n  // Public API methods\n  //----------------------------------------------------------------------------\n  publicAPI.setInteractor = i => {\n    if (i === model._interactor) {\n      return;\n    }\n    unsubscribeFromEvents();\n    model._interactor = i;\n    if (i && model.enabled) {\n      subscribeToEvents();\n    }\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setEnabled = enable => {\n    if (enable === model.enabled) {\n      return;\n    }\n    unsubscribeFromEvents();\n    if (enable) {\n      if (model._interactor) {\n        subscribeToEvents();\n      } else {\n        vtkErrorMacro(`\n          The interactor must be set before subscribing to events\n        `);\n      }\n    }\n    model.enabled = enable;\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Transform from display to world coordinates.\n  publicAPI.computeDisplayToWorld = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n    return model._interactor.getView().displayToWorld(x, y, z, renderer);\n  };\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Transform from world to display coordinates.\n  publicAPI.computeWorldToDisplay = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n    return model._interactor.getView().worldToDisplay(x, y, z, renderer);\n  };\n\n  //----------------------------------------------------------------------------\n\n  publicAPI.setPriority = priority => {\n    const modified = superClass.setPriority(priority);\n    if (modified && model._interactor) {\n      unsubscribeFromEvents();\n      subscribeToEvents();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  enabled: true,\n  // _interactor: null,\n  priority: 0.0,\n  processEvents: true,\n  subscribedEvents: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'InteractionEvent');\n  macro.event(publicAPI, model, 'StartInteractionEvent');\n  macro.event(publicAPI, model, 'EndInteractionEvent');\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['_interactor', 'enabled']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['priority', 'processEvents']);\n  macro.moveToProtected(publicAPI, model, ['interactor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkInteractorObserver(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkInteractorObserver');\n\n// ----------------------------------------------------------------------------\n\nvar vtkInteractorObserver$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\nexport { STATIC, vtkInteractorObserver$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkRenderWindowInteractor","vtkErrorMacro","VOID","computeWorldToDisplay","renderer","x","y","z","view","getRenderWindow","getViews","worldToDisplay","computeDisplayToWorld","displayToWorld","STATIC","vtkInteractorObserver","publicAPI","model","classHierarchy","push","superClass","unsubscribeFromEvents","subscribedEvents","length","pop","unsubscribe","subscribeToEvents","handledEvents","forEach","eventName","_interactor","callData","processEvents","priority","setInteractor","i","enabled","modified","setEnabled","enable","getView","setPriority","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","obj","event","get","setGet","moveToProtected","newInstance","vtkInteractorObserver$1","default"],"sources":["C:/Users/Malcolm/Projects/Web/TickerWeb/TickerWeb_Vue/node_modules/@kitware/vtk.js/Rendering/Core/InteractorObserver.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport vtkRenderWindowInteractor from './RenderWindowInteractor.js';\n\nconst {\n  vtkErrorMacro,\n  VOID\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------\n// Description:\n// Transform from world to display coordinates.\nfunction computeWorldToDisplay(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.worldToDisplay(x, y, z, renderer);\n}\n\n//----------------------------------------------------------------------------\n// Description:\n// Transform from display to world coordinates.\nfunction computeDisplayToWorld(renderer, x, y, z) {\n  const view = renderer.getRenderWindow().getViews()[0];\n  return view.displayToWorld(x, y, z, renderer);\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\nconst STATIC = {\n  computeWorldToDisplay,\n  computeDisplayToWorld\n};\n\n// ----------------------------------------------------------------------------\n// vtkInteractorObserver methods\n// ----------------------------------------------------------------------------\n\nfunction vtkInteractorObserver(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkInteractorObserver');\n  const superClass = {\n    ...publicAPI\n  };\n\n  //----------------------------------------------------------------------------\n  function unsubscribeFromEvents() {\n    while (model.subscribedEvents.length) {\n      model.subscribedEvents.pop().unsubscribe();\n    }\n  }\n\n  //----------------------------------------------------------------------------\n  // Check what events we can handle and register callbacks\n  function subscribeToEvents() {\n    vtkRenderWindowInteractor.handledEvents.forEach(eventName => {\n      if (publicAPI[`handle${eventName}`]) {\n        model.subscribedEvents.push(model._interactor[`on${eventName}`](callData => {\n          if (model.processEvents) {\n            return publicAPI[`handle${eventName}`](callData);\n          }\n          return VOID;\n        }, model.priority));\n      }\n    });\n  }\n\n  //----------------------------------------------------------------------------\n  // Public API methods\n  //----------------------------------------------------------------------------\n  publicAPI.setInteractor = i => {\n    if (i === model._interactor) {\n      return;\n    }\n    unsubscribeFromEvents();\n    model._interactor = i;\n    if (i && model.enabled) {\n      subscribeToEvents();\n    }\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setEnabled = enable => {\n    if (enable === model.enabled) {\n      return;\n    }\n    unsubscribeFromEvents();\n    if (enable) {\n      if (model._interactor) {\n        subscribeToEvents();\n      } else {\n        vtkErrorMacro(`\n          The interactor must be set before subscribing to events\n        `);\n      }\n    }\n    model.enabled = enable;\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Transform from display to world coordinates.\n  publicAPI.computeDisplayToWorld = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n    return model._interactor.getView().displayToWorld(x, y, z, renderer);\n  };\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Transform from world to display coordinates.\n  publicAPI.computeWorldToDisplay = (renderer, x, y, z) => {\n    if (!renderer) {\n      return null;\n    }\n    return model._interactor.getView().worldToDisplay(x, y, z, renderer);\n  };\n\n  //----------------------------------------------------------------------------\n\n  publicAPI.setPriority = priority => {\n    const modified = superClass.setPriority(priority);\n    if (modified && model._interactor) {\n      unsubscribeFromEvents();\n      subscribeToEvents();\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  enabled: true,\n  // _interactor: null,\n  priority: 0.0,\n  processEvents: true,\n  subscribedEvents: []\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'InteractionEvent');\n  macro.event(publicAPI, model, 'StartInteractionEvent');\n  macro.event(publicAPI, model, 'EndInteractionEvent');\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['_interactor', 'enabled']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['priority', 'processEvents']);\n  macro.moveToProtected(publicAPI, model, ['interactor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkInteractorObserver(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkInteractorObserver');\n\n// ----------------------------------------------------------------------------\n\nvar vtkInteractorObserver$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkInteractorObserver$1 as default, extend, newInstance };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}