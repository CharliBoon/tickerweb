{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"vtkContainer\"\n};\nconst _hoisted_2 = {\n  class: \"controls\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = [\"value\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */), _createElementVNode(\"table\", _hoisted_2, [_createElementVNode(\"tbody\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", {\n    style: {\n      \"text-align\": \"left\"\n    }\n  }, [_createElementVNode(\"b\", null, \"Events\")]), _createElementVNode(\"td\", {\n    style: {\n      \"text-align\": \"left\"\n    }\n  })], -1 /* HOISTED */)), _createElementVNode(\"tr\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"td\", {\n    style: {\n      \"text-align\": \"left\"\n    }\n  }, \"TimeStamp\", -1 /* HOISTED */)), _createElementVNode(\"td\", null, [_createElementVNode(\"input\", {\n    type: \"range\",\n    min: \"1640995200\",\n    max: \"1656653056\",\n    value: _ctx.events_timestamp,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.setEventTimeStamp($event.target.value))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_3)])]), _createElementVNode(\"tr\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"td\", {\n    style: {\n      \"text-align\": \"left\"\n    }\n  }, \"Opacity\", -1 /* HOISTED */)), _createElementVNode(\"td\", null, [_createElementVNode(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"100\",\n    value: _ctx.events_opacity,\n    onInput: _cache[1] || (_cache[1] = $event => _ctx.setEventOpacity($event.target.value))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4)])]), _cache[10] || (_cache[10] = _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", {\n    style: {\n      \"text-align\": \"left\"\n    }\n  }, [_createElementVNode(\"b\", null, \"Plan\")]), _createElementVNode(\"td\", {\n    style: {\n      \"text-align\": \"left\"\n    }\n  })], -1 /* HOISTED */)), _createElementVNode(\"tr\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"td\", {\n    style: {\n      \"text-align\": \"left\"\n    }\n  }, \"Opacity\", -1 /* HOISTED */)), _createElementVNode(\"td\", null, [_createElementVNode(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"100\",\n    value: _ctx.plan_opacity,\n    onInput: _cache[2] || (_cache[2] = $event => _ctx.setPlanOpacity($event.target.value))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5)])]), _createElementVNode(\"tr\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"td\", {\n    style: {\n      \"text-align\": \"left\"\n    }\n  }, \"Representation\", -1 /* HOISTED */)), _createElementVNode(\"td\", null, [_createElementVNode(\"select\", {\n    style: {\n      \"width\": \"100%\"\n    },\n    value: _ctx.plan_representation,\n    onChange: _cache[3] || (_cache[3] = $event => _ctx.setRepresentation($event.target.value))\n  }, _cache[7] || (_cache[7] = [_createElementVNode(\"option\", {\n    value: \"0\"\n  }, \"Points\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"1\"\n  }, \"Wireframe\", -1 /* HOISTED */)]), 40 /* PROPS, NEED_HYDRATION */, _hoisted_6)])])])])]);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","style","type","min","max","value","_ctx","events_timestamp","onInput","_cache","$event","setEventTimeStamp","target","_hoisted_3","events_opacity","setEventOpacity","_hoisted_4","plan_opacity","setPlanOpacity","_hoisted_5","plan_representation","onChange","setRepresentation","_hoisted_6"],"sources":["C:\\Users\\Malcolm\\Projects\\Web\\TickerWeb\\TickerWeb_Vue\\src\\components\\TickerVTK.vue"],"sourcesContent":["<template>\n  <div>\n    <div ref=\"vtkContainer\" />\n    <table class=\"controls\">\n      <tbody>\n        <tr>\n          <td style=\"text-align:left\"><b>Events</b></td>\n          <td style=\"text-align:left\"> </td>\n        </tr>\n        <tr>\n          <td style=\"text-align:left\">TimeStamp</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"1640995200\"\n              max=\"1656653056\"\n              :value=\"events_timestamp\"\n              @input=\"setEventTimeStamp($event.target.value)\"\n            />\n          </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Opacity</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              :value=\"events_opacity\"\n              @input=\"setEventOpacity($event.target.value)\"\n            />\n          </td>\n        </tr>\n        <tr>\n          <td style=\"text-align:left\"><b>Plan</b></td>\n          <td style=\"text-align:left\"> </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Opacity</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              :value=\"plan_opacity\"\n              @input=\"setPlanOpacity($event.target.value)\"\n            />\n          </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Representation</td>\n          <td>\n            <select\n              style=\"width: 100%\"\n              :value=\"plan_representation\"\n              @change=\"setRepresentation($event.target.value)\"\n            >\n              <option value=\"0\">Points</option>\n              <option value=\"1\">Wireframe</option>\n            </select>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect, watch } from 'vue';\n// vtk\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry'; // geometry rendering for WebGL, WebGPU\nimport '@kitware/vtk.js/Rendering/Profiles/Glyph'; // vtkGlyph3DMapper\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkActor                  from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkLookupTable            from '@kitware/vtk.js/Common/Core/LookupTable';\nimport vtkDataArray              from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkMapper                 from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkXMLPolyDataReader      from '@kitware/vtk.js/IO/XML/XMLPolyDataReader';\nimport vtkGlyph3DMapper          from '@kitware/vtk.js/Rendering/Core/Glyph3DMapper'; \nimport vtkCubeSource             from '@kitware/vtk.js/Filters/Sources/CubeSource';\nimport vtkSphereSource           from '@kitware/vtk.js/Filters/Sources/SphereSource';\n\nexport default {\n\n  setup() {\n  \n    const vtkContainer = ref(null);\n    const context = ref(null);\n\tconst events_opacity      = ref(50);\n    const events_timestamp    = ref(1640995200);\n\tconst plan_opacity        = ref(100);\n    const plan_representation = ref(1);\n\t\n    const textEncoder = new TextEncoder();\n    //const path = 'http://localhost:5000';\n\tconst path = 'http://192.168.0.2:5000';\n    \n\t// nodes\n\tconst node_reader = vtkXMLPolyDataReader.newInstance();\n\tconst node_lut = vtkLookupTable.newInstance();\n    const data = new Uint8Array([0, 255, 0, 255, 255, 165, 80, 255, 255, 0, 0, 255]);\n    const table = vtkDataArray.newInstance({values: data, numberOfComponents: 4});\n    node_lut.setTable(table);\n\n\tconst node_glyph = vtkCubeSource.newInstance();\n\tconst node_mapper = vtkGlyph3DMapper.newInstance();\n\tconst node_actor = vtkActor.newInstance();\n\t//\n\tnode_mapper.setInputConnection(node_reader.getOutputPort());\n\tnode_mapper.setSourceConnection(node_glyph.getOutputPort())\n\tnode_mapper.setScalarModeToUsePointData();\n\tnode_mapper.setColorByArrayName('alert');\n\tnode_mapper.setScalarVisibility(true);\n\tnode_mapper.setScalarRange(1, 3);\n    node_mapper.setLookupTable(node_lut);\n    //node_mapper.setColorByArrayName(\"Scalars\");\n    node_mapper.setColorModeToMapScalars();\n\tnode_mapper.setScaleFactor(10.0);\n\t//node_mapper.setScaleModeToScaleByConstant\n    node_actor.setMapper(node_mapper);\n\t//node_actor.getProperty().setAmbient(0.5)\n\t\n\t// plan\n\tconst plan_reader = vtkXMLPolyDataReader.newInstance();\n\tconst plan_mapper = vtkMapper.newInstance();\n\tconst plan_actor  = vtkActor.newInstance();\n\t//\n\tplan_mapper.setInputConnection(plan_reader.getOutputPort());\n\tplan_actor.setMapper(plan_mapper)\n\tplan_actor.getProperty().setOpacity(0.25)\n\t\n\t// events\n\tconst events_reader = vtkXMLPolyDataReader.newInstance();\n\tconst events_glyph  = vtkSphereSource.newInstance();\n\tconst events_mapper = vtkGlyph3DMapper.newInstance();\n\tconst events_actor  = vtkActor.newInstance();\n\t//\n\tevents_mapper.setInputConnection(events_reader.getOutputPort());\n\tevents_mapper.setSourceConnection(events_glyph.getOutputPort())\n\tevents_mapper.setScaleFactor(100.0);\n    events_mapper.setScaleArray('scale');\n\tevents_mapper.setScalarVisibility(true);\n\tevents_mapper.setScalarModeToUsePointData()\n\tevents_mapper.setColorByArrayName('dtEvent');\n\tevents_mapper.setScalarRange(1640995200.0, 1656653056.0)\n\tevents_actor.setMapper(events_mapper)\n\tevents_actor.getProperty().setOpacity(0.5)\n\t\n\t\n    function setEventTimeStamp(res) {\n      events_timestamp.value = Number(res);\n    }\n\t\n\tfunction setEventOpacity(opacity) {\n      event_opacity.value = Number(opacity);\n    }\n\t\n\tfunction setPlanOpacity(opacity) {\n      plan_opacity.value = Number(opacity);\n    }\n\n    function setRepresentation(rep) {\n      plan_representation.value = Number(rep);\n    }\n\t\n\tfunction onEventFilter(timestamp, reset=false) {\n      if (context.value) {\n        const {renderWindow, renderer} = context.value;\n\t\taxios.post(path + '/event_filter',{timestamp: timestamp})\n          .then(function (response_post) {\n            axios.get(path+'/events')\n              .then((response_get) => {\n                events_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n\t\t\t\tif (reset) {\n                  renderer.resetCamera()\n                  console.log('reset')\n                  }\n\t\t\t\trenderWindow.render();\n                console.log(response_get.data)\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n            console.log(response_post);\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n\t\trenderWindow.render();\n      }\n\t}\n\t\n\tfunction getNodes(reset=false) {\n      const {renderWindow, renderer} = context.value;\n      axios.get(path+'/nodes')\n        .then((response_get) => {\n          node_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n          //node_reader.update()\n          if (reset) {\n            renderer.resetCamera()\n            }\n          renderWindow.render();\n          console.log(response_get.data)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n\t\n\tfunction getPlan(reset=false) {\n      const {renderWindow, renderer} = context.value;\n      axios.get(path+'/plan')\n        .then((response_get) => {\n          plan_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n          //plan_reader.update()\n          if (reset) {\n            renderer.resetCamera()\n            }\n          renderWindow.render();\n          console.log(response_get.data)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n\t\n\tfunction getEvents(reset=false) {\n      const {renderWindow, renderer} = context.value;\n      axios.get(path+'/events')\n        .then((response_get) => {\n          events_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n          if (reset) {\n            renderer.resetCamera()\n            }\n          renderWindow.render();\n          console.log(response_get.data)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n\t\n\twatch(events_timestamp, (newValue) => {\n      onEventFilter(newValue)\n\t})\n\n    watchEffect(() => {\n      const plan_opacity = unref(plan_opacity);\n      const rep = unref(plan_representation);\n      const events_opacity = unref(evenys_opacity);\n      if (context.value) {\n        const { plan_actor, renderWindow } = context.value;\n\t\tplan_actor.getProperty().setOpacity(plan_opacity*0.01);\n        plan_actor.getProperty().setRepresentation(rep);\n\t\tevents_actor.getProperty().setOpacity(events_opacity*0.01);\n\t\trenderWindow.render();\n      }\n    });\n\n    onMounted(() => {\n\t\n      if (!context.value) {\n        const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value,\n          });\n        //fullScreenRenderer.setAlphaBitPlanes(1) // depth-peeling\n        //fullScreenRenderer.setMultiSamples(0) // depth-peeling\n         \n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n\t\t//\n        renderer.setUseDepthPeeling(true) // depth peeling\n        renderer.setMaximumNumberOfPeels(100) // depth peeling\n        renderer.setOcclusionRatio(0.01) // depth peeling\n\t\t//\n\t\trenderer.addActor(node_actor);\n\t\trenderer.addActor(plan_actor);\n\t\trenderer.addActor(events_actor);\n\t\t\n\t\tcontext.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          //\n          node_actor,\n          node_mapper,\n          node_reader,\n          node_glyph,\n          //\n          plan_reader,\n          plan_mapper,\n          plan_actor,\n        };\n\t\t\n\t\t// renders as well\n        getNodes(false);\n        getPlan(false);\n        getEvents(true);\n        onEventFilter(unref(events_timestamp), true)\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (context.value) {\n\t\t//const {fullScreenRenderer, actor, mapper } = context.value;\n        const { renderer, renderWindow, fullScreenRenderer, node_reader, node_actor, node_mapper, node_glyph, plan_reader, plan_actor, plan_mapper, events_reader, events_actor, events_mapper, events_glyph, } = context.value;\n        plan_actor.delete();\n        plan_mapper.delete();\n        plan_reader.delete();\n\t\tnode_actor.delete();\n        node_mapper.delete();\n        node_reader.delete();\n\t\tnode_glyph.delete();\n        events_reader.delete();\n        events_actor.delete();\n        events_mapper.delete();\n        events_glyph.delete();\n        //\n\t\trenderer.delete()\n\t\trenderWindow.delete()\n        //\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n\n    return {\n      vtkContainer,\n      setRepresentation,\n      setEventTimeStamp,\n\t  setEventOpacity,\n      setPlanOpacity,\n      plan_opacity,\n      plan_representation,\n      events_timestamp,\n\t  events_opacity\n      //\n      getNodes,\n      getPlan,\n      getEvents,\n    };\n  }\n}\n</script>\n\n<style scoped>\n.controls {\n  position: absolute;\n  top: 25px;\n  left: 25px;\n  background: white;\n  padding: 12px;\n}\n</style>"],"mappings":";;EAESA,GAAG,EAAC;AAAc;;EAChBC,KAAK,EAAC;AAAU;mBAH3B;mBAAA;mBAAA;mBAAA;;uBACEC,mBAAA,CA+DM,cA9DJC,mBAAA,CAA0B,OAA1BC,UAA0B,+BAC1BD,mBAAA,CA4DQ,SA5DRE,UA4DQ,GA3DNF,mBAAA,CA0DQ,gB,0BAzDNA,mBAAA,CAGK,aAFHA,mBAAA,CAA8C;IAA1CG,KAAuB,EAAvB;MAAA;IAAA;EAAuB,IAACH,mBAAA,CAAa,WAAV,QAAM,E,GACrCA,mBAAA,CAAkC;IAA9BG,KAAuB,EAAvB;MAAA;IAAA;EAAuB,G,sBAE7BH,mBAAA,CAWK,a,0BAVHA,mBAAA,CAA0C;IAAtCG,KAAuB,EAAvB;MAAA;IAAA;EAAuB,GAAC,WAAS,sBACrCH,mBAAA,CAQK,aAPHA,mBAAA,CAME;IALAI,IAAI,EAAC,OAAO;IACZC,GAAG,EAAC,YAAY;IAChBC,GAAG,EAAC,YAAY;IACfC,KAAK,EAAEC,IAAA,CAAAC,gBAAgB;IACvBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,iBAAiB,CAACD,MAAM,CAACE,MAAM,CAACP,KAAK;2CAjB3DQ,UAAA,E,KAqBEf,mBAAA,CAWW,a,0BAVHA,mBAAA,CAAwC;IAApCG,KAAuB,EAAvB;MAAA;IAAA;EAAuB,GAAC,SAAO,sBACnCH,mBAAA,CAQK,aAPHA,mBAAA,CAME;IALAI,IAAI,EAAC,OAAO;IACZC,GAAG,EAAC,GAAG;IACPC,GAAG,EAAC,KAAK;IACRC,KAAK,EAAEC,IAAA,CAAAQ,cAAc;IACrBN,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAS,eAAe,CAACL,MAAM,CAACE,MAAM,CAACP,KAAK;2CA7BzDW,UAAA,E,iCAiCQlB,mBAAA,CAGK,aAFHA,mBAAA,CAA4C;IAAxCG,KAAuB,EAAvB;MAAA;IAAA;EAAuB,IAACH,mBAAA,CAAW,WAAR,MAAI,E,GACnCA,mBAAA,CAAkC;IAA9BG,KAAuB,EAAvB;MAAA;IAAA;EAAuB,G,sBAEnCH,mBAAA,CAWW,a,0BAVHA,mBAAA,CAAwC;IAApCG,KAAuB,EAAvB;MAAA;IAAA;EAAuB,GAAC,SAAO,sBACnCH,mBAAA,CAQK,aAPHA,mBAAA,CAME;IALAI,IAAI,EAAC,OAAO;IACZC,GAAG,EAAC,GAAG;IACPC,GAAG,EAAC,KAAK;IACRC,KAAK,EAAEC,IAAA,CAAAW,YAAY;IACnBT,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAY,cAAc,CAACR,MAAM,CAACE,MAAM,CAACP,KAAK;2CA7CxDc,UAAA,E,KAiDErB,mBAAA,CAYW,a,0BAXHA,mBAAA,CAA+C;IAA3CG,KAAuB,EAAvB;MAAA;IAAA;EAAuB,GAAC,gBAAc,sBAC1CH,mBAAA,CASK,aARHA,mBAAA,CAOS;IANPG,KAAmB,EAAnB;MAAA;IAAA,CAAmB;IAClBI,KAAK,EAAEC,IAAA,CAAAc,mBAAmB;IAC1BC,QAAM,EAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAgB,iBAAiB,CAACZ,MAAM,CAACE,MAAM,CAACP,KAAK;gCAE9CP,mBAAA,CAAiC;IAAzBO,KAAK,EAAC;EAAG,GAAC,QAAM,qBACxBP,mBAAA,CAAoC;IAA5BO,KAAK,EAAC;EAAG,GAAC,WAAS,oB,mCA1DzCkB,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}