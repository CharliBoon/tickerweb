{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport DeepEqual from 'fast-deep-equal';\nimport vtk, { vtkGlobal } from './vtk.js';\nimport ClassHierarchy from './Common/Core/ClassHierarchy.js';\n\n/**\n * macros.js is the old macro.js.\n * The name change is so we do not get eaten by babel-plugin-macros.\n */\nlet globalMTime = 0;\nconst VOID = Symbol('void');\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n}\n\n// ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n/* eslint-disable no-prototype-builtins                                      */\n\nconst fakeConsole = {};\nfunction noOp() {}\nconst consoleMethods = ['log', 'debug', 'info', 'warn', 'error', 'time', 'timeEnd', 'group', 'groupEnd'];\nconsoleMethods.forEach(methodName => {\n  fakeConsole[methodName] = noOp;\n});\nvtkGlobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\nconst loggerFunctions = {\n  debug: noOp,\n  // Don't print debug by default\n  error: vtkGlobal.console.error || noOp,\n  info: vtkGlobal.console.info || noOp,\n  log: vtkGlobal.console.log || noOp,\n  warn: vtkGlobal.console.warn || noOp\n};\nfunction setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\nfunction vtkLogMacro() {\n  loggerFunctions.log(...arguments);\n}\nfunction vtkInfoMacro() {\n  loggerFunctions.info(...arguments);\n}\nfunction vtkDebugMacro() {\n  loggerFunctions.debug(...arguments);\n}\nfunction vtkErrorMacro() {\n  loggerFunctions.error(...arguments);\n}\nfunction vtkWarningMacro() {\n  loggerFunctions.warn(...arguments);\n}\nconst ERROR_ONCE_MAP = {};\nfunction vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nconst TYPED_ARRAYS = Object.create(null);\nTYPED_ARRAYS.Float32Array = Float32Array;\nTYPED_ARRAYS.Float64Array = Float64Array;\nTYPED_ARRAYS.Uint8Array = Uint8Array;\nTYPED_ARRAYS.Int8Array = Int8Array;\nTYPED_ARRAYS.Uint16Array = Uint16Array;\nTYPED_ARRAYS.Int16Array = Int16Array;\nTYPED_ARRAYS.Uint32Array = Uint32Array;\nTYPED_ARRAYS.Int32Array = Int32Array;\nTYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray;\ntry {\n  TYPED_ARRAYS.BigInt64Array = BigInt64Array;\n  TYPED_ARRAYS.BigUint64Array = BigUint64Array;\n} catch {\n  // ignore\n}\nfunction newTypedArray(type) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return new (TYPED_ARRAYS[type] || Float64Array)(...args);\n}\nfunction newTypedArrayFrom(type) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  return (TYPED_ARRAYS[type] || Float64Array).from(...args);\n}\n\n// ----------------------------------------------------------------------------\n// capitilize provided string\n// ----------------------------------------------------------------------------\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction _capitalize(str) {\n  return capitalize(str[0] === '_' ? str.slice(1) : str);\n}\nfunction uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nfunction formatBytesToProperUnit(size) {\n  let precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  let chunkSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n  const units = ['TB', 'GB', 'MB', 'KB'];\n  let value = Number(size);\n  let currentUnit = 'B';\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n  return `${value.toFixed(precision)} ${currentUnit}`;\n}\n\n// ----------------------------------------------------------------------------\n// Convert thousand number with proper separator\n// ----------------------------------------------------------------------------\n\nfunction formatNumbersWithThousandSeparator(n) {\n  let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  const sections = [];\n  let size = n;\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n  if (size > 0) {\n    sections.push(size);\n  }\n  sections.reverse();\n  return sections.join(separator);\n}\n\n// ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach(key => {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n}\nfunction isTypedArray(value) {\n  return Object.values(TYPED_ARRAYS).some(ctor => value instanceof ctor);\n}\n\n// ----------------------------------------------------------------------------\n// shallow equals\n// ----------------------------------------------------------------------------\n\nfunction shallowEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find(key => e[key] === value);\n}\nfunction getStateArrayMapFunc(item) {\n  if (item && item.isA) {\n    return item.getState();\n  }\n  return item;\n}\n\n// ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\nfunction setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n}\n\n// ----------------------------------------------------------------------------\n// measurePromiseExecution\n//\n// Measures the time it takes for a promise to finish from\n//   the time this function is invoked.\n// The callback receives the time it took for the promise to resolve or reject.\n// ----------------------------------------------------------------------------\n\nfunction measurePromiseExecution(promise, callback) {\n  const start = performance.now();\n  promise.finally(() => {\n    const delta = performance.now() - start;\n    callback(delta);\n  });\n}\n\n// ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nfunction obj() {\n  let publicAPI = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n  const callbacks = [];\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n  if (!('classHierarchy' in model)) {\n    model.classHierarchy = new ClassHierarchy('vtkObject');\n  } else if (!(model.classHierarchy instanceof ClassHierarchy)) {\n    const hierarchy = new ClassHierarchy();\n    for (let i = 0; i < model.classHierarchy.length; i++) {\n      hierarchy.push(model.classHierarchy[i]);\n    }\n    model.classHierarchy = hierarchy;\n  }\n  function off(index) {\n    callbacks[index] = null;\n  }\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n  publicAPI.isDeleted = () => !!model.deleted;\n  publicAPI.modified = otherMTime => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n    model.mtime = ++globalMTime;\n    callbacks.forEach(callback => callback && callback(publicAPI));\n  };\n  publicAPI.onModified = callback => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n  publicAPI.getMTime = () => model.mtime;\n  publicAPI.isA = className => {\n    let count = model.classHierarchy.length;\n    // we go backwards as that is more likely for\n    // early termination\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n    return false;\n  };\n  publicAPI.getClassName = function () {\n    let depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.classHierarchy[model.classHierarchy.length - 1 - depth];\n  };\n  publicAPI.set = function () {\n    let map = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let noWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let noFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let ret = false;\n    Object.keys(map).forEach(name => {\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn(...map[name]) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(`Warning: Set value to model directly ${name}, ${map[name]}`);\n        }\n        ret = model[name] !== map[name] || ret;\n        model[name] = map[name];\n      }\n    });\n    return ret;\n  };\n  publicAPI.get = function () {\n    for (var _len3 = arguments.length, list = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      list[_key3] = arguments[_key3];\n    }\n    if (!list.length) {\n      return model;\n    }\n    const subset = {};\n    list.forEach(name => {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n  publicAPI.getReferenceByName = val => model[val];\n  publicAPI.delete = () => {\n    Object.keys(model).forEach(field => delete model[field]);\n    callbacks.forEach((el, index) => off(index));\n\n    // Flag the instance being deleted\n    model.deleted = true;\n  };\n\n  // Add serialization support\n  publicAPI.getState = () => {\n    if (model.deleted) {\n      return null;\n    }\n    const jsonArchive = {\n      ...model,\n      vtkClass: publicAPI.getClassName()\n    };\n\n    // Convert every vtkObject to its serializable form\n    Object.keys(jsonArchive).forEach(keyName => {\n      if (jsonArchive[keyName] === null || jsonArchive[keyName] === undefined || keyName[0] === '_' // protected members start with _\n      ) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      } else if (isTypedArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = Array.from(jsonArchive[keyName]);\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive).sort().forEach(name => {\n      sortedObj[name] = jsonArchive[name];\n    });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n    return sortedObj;\n  };\n\n  // Add shallowCopy(otherInstance) support\n  publicAPI.shallowCopy = function (other) {\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(`Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`);\n    }\n    const otherModel = other.get();\n    const keyList = Object.keys(model).sort();\n    const otherKeyList = Object.keys(otherModel).sort();\n    otherKeyList.forEach(key => {\n      const keyIdx = keyList.indexOf(key);\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(`add ${key} in shallowCopy`);\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n      model[key] = otherModel[key];\n    });\n    if (keyList.length && debug) {\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\n    }\n    publicAPI.modified();\n  };\n\n  // This function will get called when one invoke JSON.stringify(vtkObject)\n  // JSON.stringify will only stringify the return value of this function\n  publicAPI.toJSON = function vtkObjToJSON() {\n    return publicAPI.getState();\n  };\n\n  // Allow usage as decorator\n  return publicAPI;\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nconst objectGetterMap = {\n  object(publicAPI, model, field) {\n    return function getter() {\n      return {\n        ...model[field.name]\n      };\n    };\n  }\n};\nfunction get(publicAPI, model, fieldNames) {\n  fieldNames.forEach(field => {\n    if (typeof field === 'object') {\n      const getter = objectGetterMap[field.type];\n      if (getter) {\n        publicAPI[`get${_capitalize(field.name)}`] = getter(publicAPI, model, field);\n      } else {\n        publicAPI[`get${_capitalize(field.name)}`] = () => model[field.name];\n      }\n    } else {\n      publicAPI[`get${_capitalize(field)}`] = () => model[field];\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nconst objectSetterMap = {\n  enum(publicAPI, model, field) {\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\n    return value => {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n          return false;\n        }\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (Object.keys(field.enum).map(key => field.enum[key]).indexOf(value) !== -1) {\n            const previousValue = model[field.name];\n            model[field.name] = value;\n            model[onChanged]?.(publicAPI, model, value, previousValue);\n            publicAPI.modified();\n            return true;\n          }\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\n          throw new RangeError('Set Enum outside numeric range');\n        }\n        return false;\n      }\n      vtkErrorMacro(`Set Enum with invalid argument (String/Number) ${field}, ${value}`);\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  },\n  object(publicAPI, model, field) {\n    if (field.params?.length === 1) {\n      vtkWarningMacro('Setter of type \"object\" with a single \"param\" field is not supported');\n    }\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\n    return function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      let value;\n      if (args.length > 1 && field.params?.length) {\n        value = field.params.reduce((acc, prop, idx) => Object.assign(acc, {\n          [prop]: args[idx]\n        }), {});\n      } else {\n        value = args[0];\n      }\n      if (!DeepEqual(model[field.name], value)) {\n        const previousValue = model[field.name];\n        model[field.name] = value;\n        model[onChanged]?.(publicAPI, model, value, previousValue);\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  }\n};\nfunction findSetter(field) {\n  if (typeof field === 'object') {\n    const fn = objectSetterMap[field.type];\n    if (fn) {\n      return (publicAPI, model) => fn(publicAPI, model, field);\n    }\n    vtkErrorMacro(`No setter for field ${field}`);\n    throw new TypeError('No setter for field');\n  }\n  return function getSetter(publicAPI, model) {\n    const onChanged = `_on${_capitalize(field)}Changed`;\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n      if (model[field] !== value) {\n        const previousValue = model[field.name];\n        model[field] = value;\n        model[onChanged]?.(publicAPI, model, value, previousValue);\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  };\n}\nfunction set(publicAPI, model, fields) {\n  fields.forEach(field => {\n    if (typeof field === 'object') {\n      publicAPI[`set${_capitalize(field.name)}`] = findSetter(field)(publicAPI, model);\n    } else {\n      publicAPI[`set${_capitalize(field)}`] = findSetter(field)(publicAPI, model);\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nfunction setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nfunction getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach(field => {\n    publicAPI[`get${_capitalize(field)}`] = () => model[field] ? Array.from(model[field]) : model[field];\n    publicAPI[`get${_capitalize(field)}ByReference`] = () => model[field];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nfunction setArray(publicAPI, model, fieldNames, size) {\n  let defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  fieldNames.forEach(field => {\n    if (model[field] && size && model[field].length !== size) {\n      throw new RangeError(`Invalid initial number of values for array (${field})`);\n    }\n    const onChanged = `_on${_capitalize(field)}Changed`;\n    publicAPI[`set${_capitalize(field)}`] = function () {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      let array = args;\n      let changeDetected;\n      let needCopy = false;\n      // allow null or an array to be passed as a single arg.\n      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n        needCopy = true;\n      }\n      if (array == null) {\n        changeDetected = model[field] !== array;\n      } else {\n        if (size && array.length !== size) {\n          if (array.length < size && defaultVal !== undefined) {\n            array = Array.from(array);\n            needCopy = false;\n            while (array.length < size) array.push(defaultVal);\n          } else {\n            throw new RangeError(`Invalid number of values for array setter (${field})`);\n          }\n        }\n        changeDetected = model[field] == null || model[field].length !== array.length;\n        for (let i = 0; !changeDetected && i < array.length; ++i) {\n          changeDetected = model[field][i] !== array[i];\n        }\n        if (changeDetected && needCopy) {\n          array = Array.from(array);\n        }\n      }\n      if (changeDetected) {\n        const previousValue = model[field.name];\n        model[field] = array;\n        model[onChanged]?.(publicAPI, model, array, previousValue);\n        publicAPI.modified();\n      }\n      return changeDetected;\n    };\n    publicAPI[`set${_capitalize(field)}From`] = otherArray => {\n      const target = model[field];\n      otherArray.forEach((v, i) => {\n        target[i] = v;\n      });\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nfunction setGetArray(publicAPI, model, fieldNames, size) {\n  let defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\nfunction moveToProtected(publicAPI, model, fieldNames) {\n  for (let i = 0; i < fieldNames.length; i++) {\n    const fieldName = fieldNames[i];\n    if (model[fieldName] !== undefined) {\n      model[`_${fieldName}`] = model[fieldName];\n      delete model[fieldName];\n    }\n  }\n}\n// ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nfunction algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  }\n\n  // Cache the argument for later manipulation\n  model.numberOfInputs = numberOfInputs;\n\n  // Methods\n  function setInputData(dataset) {\n    let port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(`algorithm ${publicAPI.getClassName()} only has ${model.numberOfInputs} input ports. To add more input ports, use addInputData()`);\n      return;\n    }\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n  function getInputData() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n    return model.inputData[port];\n  }\n  function setInputConnection(outputPort) {\n    let port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\n      msg += `${model.numberOfInputs}`;\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n  function getInputConnection() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.inputConnection[port];\n  }\n  function getPortToFill() {\n    let portToFill = model.numberOfInputs;\n    while (portToFill && !model.inputData[portToFill - 1] && !model.inputConnection[portToFill - 1]) {\n      portToFill--;\n    }\n    if (portToFill === model.numberOfInputs) {\n      model.numberOfInputs++;\n    }\n    return portToFill;\n  }\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputConnection(outputPort, getPortToFill());\n  }\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputData(dataset, getPortToFill());\n  }\n  function getOutputData() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n    return model.output[port];\n  }\n  publicAPI.shouldUpdate = () => {\n    const localMTime = publicAPI.getMTime();\n    let minOutputMTime = Infinity;\n    let count = numberOfOutputs;\n    while (count--) {\n      if (!model.output[count] || model.output[count].isDeleted()) {\n        return true;\n      }\n      const mt = model.output[count].getMTime();\n      if (mt < localMTime) {\n        return true;\n      }\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n    count = model.numberOfInputs;\n    while (count--) {\n      if (model.inputConnection[count]?.filter.shouldUpdate() || publicAPI.getInputData(count)?.getMTime() > minOutputMTime) {\n        return true;\n      }\n    }\n    return false;\n  };\n  function getOutputPort() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const outputPortAccess = () => getOutputData(port);\n    // Add reference to filter\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  }\n\n  // Handle input if needed\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    let count = model.numberOfInputs;\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    }\n\n    // Expose public methods\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n  publicAPI.update = () => {\n    const ins = [];\n    if (model.numberOfInputs) {\n      let count = 0;\n      while (count < model.numberOfInputs) {\n        ins[count] = publicAPI.getInputData(count);\n        count++;\n      }\n    }\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\n  publicAPI.getNumberOfOutputPorts = () => numberOfOutputs || model.output.length;\n  publicAPI.getInputArrayToProcess = inputPort => {\n    const arrayDesc = model.inputArrayToProcess[inputPort];\n    const ds = model.inputData[inputPort];\n    if (arrayDesc && ds) {\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(arrayDesc.arrayName);\n    }\n    return null;\n  };\n  publicAPI.setInputArrayToProcess = function (inputPort, arrayName, fieldAssociation) {\n    let attributeType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Scalars';\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n    model.inputArrayToProcess[inputPort] = {\n      arrayName,\n      fieldAssociation,\n      attributeType\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nconst EVENT_ABORT = Symbol('Event abort');\nfunction event(publicAPI, model, eventName) {\n  const callbacks = [];\n  const previousDelete = publicAPI.delete;\n  let curCallbackID = 1;\n  function off(callbackID) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      const [cbID] = callbacks[i];\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n  function invoke() {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n    const currentCallbacks = callbacks.slice();\n    for (let index = 0; index < currentCallbacks.length; ++index) {\n      const [, cb, priority] = currentCallbacks[index];\n      if (!cb) {\n        continue; // eslint-disable-line\n      }\n      if (priority < 0) {\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        const continueNext = cb.apply(publicAPI, arguments);\n        if (continueNext === EVENT_ABORT) {\n          break;\n        }\n      }\n    }\n    /* eslint-enable prefer-rest-params */\n  }\n  publicAPI[`invoke${_capitalize(eventName)}`] = invoke;\n  publicAPI[`on${_capitalize(eventName)}`] = function (callback) {\n    let priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\n    if (!callback.apply) {\n      console.error(`Invalid callback for event ${eventName}`);\n      return null;\n    }\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    const callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\n    return on(callbackID);\n  };\n  publicAPI.delete = () => {\n    previousDelete();\n    callbacks.forEach(_ref => {\n      let [cbID] = _ref;\n      return off(cbID);\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nfunction newInstance(extend, className) {\n  const constructor = function () {\n    let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n    return Object.freeze(publicAPI);\n  };\n\n  // Register constructor to factory\n  if (className) {\n    vtk.register(className, constructor);\n  }\n  return constructor;\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nfunction chain() {\n  for (var _len6 = arguments.length, fn = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    fn[_key6] = arguments[_key6];\n  }\n  return function () {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    return fn.filter(i => !!i).map(i => i(...args));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nfunction isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\nfunction traverseInstanceTree(instance, extractFunction) {\n  let accumulator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let visitedInstances = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n    visitedInstances.push(instance);\n    const result = extractFunction(instance);\n    if (result !== undefined) {\n      accumulator.push(result);\n    }\n\n    // Now go through this instance's model\n    const model = instance.get();\n    Object.keys(model).forEach(key => {\n      const modelObj = model[key];\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach(subObj => {\n          traverseInstanceTree(subObj, extractFunction, accumulator, visitedInstances);\n        });\n      } else {\n        traverseInstanceTree(modelObj, extractFunction, accumulator, visitedInstances);\n      }\n    });\n  }\n  return accumulator;\n}\n\n// ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nfunction debounce(func, wait, immediate) {\n  var _this = this;\n  let timeout;\n  const debounced = function () {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    const context = _this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n  debounced.cancel = () => clearTimeout(timeout);\n  return debounced;\n}\n\n// ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nfunction throttle(callback, delay) {\n  let isThrottled = false;\n  let argsToUse = null;\n  function next() {\n    isThrottled = false;\n    if (argsToUse !== null) {\n      wrapper(...argsToUse); // eslint-disable-line\n      argsToUse = null;\n    }\n  }\n  function wrapper() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n    isThrottled = true;\n    callback(...args);\n    setTimeout(next, delay);\n  }\n  return wrapper;\n}\n\n// ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nfunction keystore(publicAPI, model) {\n  let initialKeystore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n  publicAPI.setKey = (key, value) => {\n    model.keystore[key] = value;\n  };\n  publicAPI.getKey = key => model.keystore[key];\n  publicAPI.getAllKeys = () => Object.keys(model.keystore);\n  publicAPI.deleteKey = key => delete model.keystore[key];\n  publicAPI.clearKeystore = () => publicAPI.getAllKeys().forEach(key => delete model.keystore[key]);\n}\n\n// ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\nlet nextProxyId = 1;\nconst ROOT_GROUP_NAME = '__root__';\nfunction proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n  const parentDelete = publicAPI.delete;\n\n  // getProxyId\n  model.proxyId = `${nextProxyId++}`;\n\n  // ui handling\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']);\n\n  // group properties\n  const propertyMap = {};\n  const groupChildrenNames = {};\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n    const childrenNames = groupChildrenNames[currentGroupName];\n    for (let i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(descriptionList[i].children, descriptionList[i].name);\n      }\n    }\n  }\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n  publicAPI.updateUI = ui => {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n    Object.keys(propertyMap).forEach(k => delete propertyMap[k]);\n    Object.keys(groupChildrenNames).forEach(k => delete groupChildrenNames[k]);\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n  function listProxyProperties() {\n    let gName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\n    return groupChildrenNames[gName];\n  }\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\n    const prop = propertyMap[propertyName];\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = {\n        ...propUI\n      };\n    }\n  };\n  publicAPI.activate = () => {\n    if (model.proxyManager) {\n      const setActiveMethod = `setActive${_capitalize(publicAPI.getProxyGroup().slice(0, -1))}`;\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  };\n\n  // property link\n  model.propertyLinkSubscribers = {};\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n  publicAPI.gcPropertyLinks = type => {\n    const subscribers = model.propertyLinkSubscribers[type] || [];\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n  model.propertyLinkMap = {};\n  publicAPI.getPropertyLink = function (id) {\n    let persistent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n    let value = null;\n    const links = [];\n    let count = 0;\n    let updateInProgress = false;\n    function update(source) {\n      let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (updateInProgress) {\n        return null;\n      }\n      const needUpdate = [];\n      let sourceLink = null;\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n      if (!sourceLink) {\n        return null;\n      }\n      const newValue = sourceLink.instance[`get${_capitalize(sourceLink.propertyName)}`]();\n      if (!shallowEquals(newValue, value) || force) {\n        value = newValue;\n        updateInProgress = true;\n        while (needUpdate.length) {\n          const linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set({\n            [linkToUpdate.propertyName]: value\n          });\n        }\n        updateInProgress = false;\n      }\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n      return newValue;\n    }\n    function unbind(instance, propertyName) {\n      const indexToDelete = [];\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === instance && (link.propertyName === propertyName || propertyName === undefined)) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n    function bind(instance, propertyName) {\n      let updateMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      const subscription = instance.onModified(update);\n      const other = links[0];\n      links.push({\n        instance,\n        propertyName,\n        subscription\n      });\n      if (updateMe) {\n        if (model.propertyLinkMap[id].persistent && model.propertyLinkMap[id].value !== undefined) {\n          instance.set({\n            [propertyName]: model.propertyLinkMap[id].value\n          });\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n      return {\n        unsubscribe: () => unbind(instance, propertyName)\n      };\n    }\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n    const linkHandler = {\n      bind,\n      unbind,\n      unsubscribe,\n      persistent\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  };\n\n  // extract values\n  function getProperties() {\n    let groupName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\n    const values = [];\n    const id = model.proxyId;\n    const propertyNames = listProxyProperties(groupName) || [];\n    for (let i = 0; i < propertyNames.length; i++) {\n      const name = propertyNames[i];\n      const method = publicAPI[`get${_capitalize(name)}`];\n      const value = method ? method() : undefined;\n      const prop = {\n        id,\n        name,\n        value\n      };\n      const children = getProperties(name);\n      if (children.length) {\n        prop.children = children;\n      }\n      values.push(prop);\n    }\n    return values;\n  }\n  publicAPI.listPropertyNames = () => getProperties().map(p => p.name);\n  publicAPI.getPropertyByName = name => getProperties().find(p => p.name === name);\n  publicAPI.getPropertyDomainByName = name => (propertyMap[name] || {}).domain;\n\n  // ui section\n  publicAPI.getProxySection = () => ({\n    id: model.proxyId,\n    name: model.proxyGroup,\n    ui: model.ui,\n    properties: getProperties()\n  });\n\n  // free resources\n  publicAPI.delete = () => {\n    const list = Object.keys(model.propertyLinkMap);\n    let count = list.length;\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n    Object.keys(model.propertyLinkSubscribers).forEach(publicAPI.gcPropertyLinks);\n    parentDelete();\n  };\n\n  // @todo fix infinite recursion due to active source\n  publicAPI.getState = () => null;\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (let i = 0; i < model.links.length; i++) {\n        const {\n          link,\n          property,\n          persistent,\n          updateOnBind,\n          type\n        } = model.links[i];\n        if (type === 'application') {\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n  setImmediateVTK(registerLinks);\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nfunction proxyPropertyMapping(publicAPI, model, map) {\n  const parentDelete = publicAPI.delete;\n  const subscriptions = [];\n  const propertyNames = Object.keys(map);\n  let count = propertyNames.length;\n  while (count--) {\n    const propertyName = propertyNames[count];\n    const {\n      modelKey,\n      property,\n      modified = true\n    } = map[propertyName];\n    const methodSrc = _capitalize(property);\n    const methodDst = _capitalize(propertyName);\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nfunction proxyPropertyState(publicAPI, model) {\n  let state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let defaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  model.this = publicAPI;\n  function applyState(map) {\n    const modelKeys = Object.keys(map);\n    let count = modelKeys.length;\n    while (count--) {\n      const modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n  const modelKeys = Object.keys(defaults);\n  let count = modelKeys.length;\n  while (count--) {\n    // Add default\n    const key = modelKeys[count];\n    model[key] = defaults[key];\n\n    // Add set method\n    const mapping = state[key];\n    publicAPI[`set${_capitalize(key)}`] = value => {\n      if (value !== model[key]) {\n        model[key] = value;\n        const propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  }\n\n  // Add getter\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n\n// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\nfunction normalizeWheel(wheelEvent) {\n  let sX = 0; // spinX\n  let sY = 0; // spinY\n  let pX = 0; // pixelX\n  let pY = 0; // pixelY\n\n  // Legacy\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n  return {\n    spinX: sX,\n    spinY: sY || sX,\n    pixelX: pX,\n    pixelY: pY || pX\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nvar macro = {\n  algo,\n  capitalize,\n  chain,\n  debounce,\n  enumToString,\n  event,\n  EVENT_ABORT,\n  formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator,\n  get,\n  getArray,\n  getCurrentGlobalMTime,\n  getStateArrayMapFunc,\n  isVtkObject,\n  keystore,\n  measurePromiseExecution,\n  moveToProtected,\n  newInstance,\n  newTypedArray,\n  newTypedArrayFrom,\n  normalizeWheel,\n  obj,\n  proxy,\n  proxyPropertyMapping,\n  proxyPropertyState,\n  safeArrays,\n  set,\n  setArray,\n  setGet,\n  setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction,\n  throttle,\n  traverseInstanceTree,\n  TYPED_ARRAYS,\n  // deprecated todo remove on breaking API revision\n  uncapitalize,\n  VOID,\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkInfoMacro,\n  vtkLogMacro,\n  vtkOnceErrorMacro,\n  vtkWarningMacro,\n  // vtk.js internal use\n  objectSetterMap\n};\nvar macro$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  VOID: VOID,\n  setLoggerFunction: setLoggerFunction,\n  vtkLogMacro: vtkLogMacro,\n  vtkInfoMacro: vtkInfoMacro,\n  vtkDebugMacro: vtkDebugMacro,\n  vtkErrorMacro: vtkErrorMacro,\n  vtkWarningMacro: vtkWarningMacro,\n  vtkOnceErrorMacro: vtkOnceErrorMacro,\n  TYPED_ARRAYS: TYPED_ARRAYS,\n  newTypedArray: newTypedArray,\n  newTypedArrayFrom: newTypedArrayFrom,\n  capitalize: capitalize,\n  _capitalize: _capitalize,\n  uncapitalize: uncapitalize,\n  formatBytesToProperUnit: formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator: formatNumbersWithThousandSeparator,\n  setImmediateVTK: setImmediateVTK,\n  measurePromiseExecution: measurePromiseExecution,\n  obj: obj,\n  get: get,\n  set: set,\n  setGet: setGet,\n  getArray: getArray,\n  setArray: setArray,\n  setGetArray: setGetArray,\n  moveToProtected: moveToProtected,\n  algo: algo,\n  EVENT_ABORT: EVENT_ABORT,\n  event: event,\n  newInstance: newInstance,\n  chain: chain,\n  isVtkObject: isVtkObject,\n  traverseInstanceTree: traverseInstanceTree,\n  debounce: debounce,\n  throttle: throttle,\n  keystore: keystore,\n  proxy: proxy,\n  proxyPropertyMapping: proxyPropertyMapping,\n  proxyPropertyState: proxyPropertyState,\n  normalizeWheel: normalizeWheel,\n  'default': macro\n});\nexport { uncapitalize as A, formatBytesToProperUnit as B, formatNumbersWithThousandSeparator as C, setImmediateVTK as D, measurePromiseExecution as E, setArray as F, EVENT_ABORT as G, isVtkObject as H, debounce as I, throttle as J, keystore as K, proxyPropertyState as L, normalizeWheel as M, TYPED_ARRAYS as T, VOID as V, _capitalize as _, newTypedArray as a, newTypedArrayFrom as b, macro$1 as c, algo as d, setGet as e, event as f, get as g, chain as h, moveToProtected as i, proxyPropertyMapping as j, getArray as k, setGetArray as l, macro as m, newInstance as n, obj as o, proxy as p, capitalize as q, vtkErrorMacro as r, set as s, traverseInstanceTree as t, setLoggerFunction as u, vtkWarningMacro as v, vtkLogMacro as w, vtkInfoMacro as x, vtkDebugMacro as y, vtkOnceErrorMacro as z };","map":{"version":3,"names":["DeepEqual","vtk","vtkGlobal","ClassHierarchy","globalMTime","VOID","Symbol","getCurrentGlobalMTime","fakeConsole","noOp","consoleMethods","forEach","methodName","console","hasOwnProperty","loggerFunctions","debug","error","info","log","warn","setLoggerFunction","name","fn","vtkLogMacro","arguments","vtkInfoMacro","vtkDebugMacro","vtkErrorMacro","vtkWarningMacro","ERROR_ONCE_MAP","vtkOnceErrorMacro","str","TYPED_ARRAYS","Object","create","Float32Array","Float64Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Uint8ClampedArray","BigInt64Array","BigUint64Array","newTypedArray","type","_len","length","args","Array","_key","newTypedArrayFrom","_len2","_key2","from","capitalize","charAt","toUpperCase","slice","_capitalize","uncapitalize","toLowerCase","formatBytesToProperUnit","size","precision","undefined","chunkSize","units","value","Number","currentUnit","pop","toFixed","formatNumbersWithThousandSeparator","n","separator","sections","push","Math","floor","reverse","join","safeArrays","model","keys","key","isArray","concat","isTypedArray","values","some","ctor","shallowEquals","a","b","i","enumToString","e","find","getStateArrayMapFunc","item","isA","getState","setImmediateVTK","setTimeout","measurePromiseExecution","promise","callback","start","performance","now","finally","delta","obj","publicAPI","callbacks","isInteger","mtime","classHierarchy","hierarchy","off","index","on","unsubscribe","freeze","isDeleted","deleted","modified","otherMTime","getMTime","onModified","className","count","getClassName","depth","set","map","noWarning","noFunction","ret","indexOf","get","_len3","list","_key3","subset","getReferenceByName","val","delete","field","el","jsonArchive","vtkClass","keyName","sortedObj","sort","shallowCopy","other","Error","otherModel","keyList","otherKeyList","keyIdx","splice","toJSON","vtkObjToJSON","objectGetterMap","object","getter","fieldNames","objectSetterMap","enum","onChanged","RangeError","previousValue","TypeError","params","_len4","_key4","reduce","acc","prop","idx","assign","findSetter","getSetter","setter","fields","setGet","getArray","setArray","defaultVal","_len5","_key5","array","changeDetected","needCopy","otherArray","target","v","setGetArray","moveToProtected","fieldName","algo","numberOfInputs","numberOfOutputs","inputData","inputConnection","output","inputArrayToProcess","setInputData","dataset","port","getInputData","setInputConnection","outputPort","msg","getInputConnection","getPortToFill","portToFill","addInputConnection","addInputData","getOutputData","shouldUpdate","update","localMTime","minOutputMTime","Infinity","mt","filter","getOutputPort","outputPortAccess","ins","requestData","getNumberOfInputPorts","getNumberOfOutputPorts","getInputArrayToProcess","inputPort","arrayDesc","ds","fieldAssociation","arrayName","setInputArrayToProcess","attributeType","EVENT_ABORT","event","eventName","previousDelete","curCallbackID","callbackID","cbID","invoke","currentCallbacks","cb","priority","apply","continueNext","cb1","cb2","_ref","newInstance","extend","constructor","initialValues","register","chain","_len6","_key6","_len7","_key7","isVtkObject","instance","traverseInstanceTree","extractFunction","accumulator","visitedInstances","result","modelObj","subObj","debounce","func","wait","immediate","_this","timeout","debounced","_len8","_key8","context","later","callNow","clearTimeout","cancel","throttle","delay","isThrottled","argsToUse","next","wrapper","_len9","_key9","keystore","initialKeystore","setKey","getKey","getAllKeys","deleteKey","clearKeystore","nextProxyId","ROOT_GROUP_NAME","proxy","parentDelete","proxyId","ui","JSON","parse","stringify","propertyMap","groupChildrenNames","registerProperties","descriptionList","currentGroupName","childrenNames","children","updateUI","k","listProxyProperties","gName","updateProxyProperty","propertyName","propUI","activate","proxyManager","setActiveMethod","getProxyGroup","propertyLinkSubscribers","registerPropertyLinkForGC","otherLink","gcPropertyLinks","subscribers","unbind","propertyLinkMap","getPropertyLink","id","persistent","links","updateInProgress","source","force","needUpdate","sourceLink","link","newValue","linkToUpdate","indexToDelete","subscription","bind","updateMe","linkHandler","getProperties","groupName","propertyNames","method","listPropertyNames","p","getPropertyByName","getPropertyDomainByName","domain","getProxySection","proxyGroup","properties","registerLinks","property","updateOnBind","sLink","proxyPropertyMapping","subscriptions","modelKey","methodSrc","methodDst","proxyPropertyState","state","defaults","this","applyState","modelKeys","mapping","propValues","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","normalizeWheel","wheelEvent","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","macro","setImmediate","macro$1","__proto__","A","B","C","D","E","F","G","H","I","J","K","L","M","T","V","_","c","d","f","g","h","j","l","m","o","q","r","s","t","u","w","x","y","z"],"sources":["C:/Users/Malcolm/Projects/Web/my-vtkjs-app/node_modules/@kitware/vtk.js/macros2.js"],"sourcesContent":["import DeepEqual from 'fast-deep-equal';\nimport vtk, { vtkGlobal } from './vtk.js';\nimport ClassHierarchy from './Common/Core/ClassHierarchy.js';\n\n/**\n * macros.js is the old macro.js.\n * The name change is so we do not get eaten by babel-plugin-macros.\n */\nlet globalMTime = 0;\nconst VOID = Symbol('void');\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n}\n\n// ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n/* eslint-disable no-prototype-builtins                                      */\n\nconst fakeConsole = {};\nfunction noOp() {}\nconst consoleMethods = ['log', 'debug', 'info', 'warn', 'error', 'time', 'timeEnd', 'group', 'groupEnd'];\nconsoleMethods.forEach(methodName => {\n  fakeConsole[methodName] = noOp;\n});\nvtkGlobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\nconst loggerFunctions = {\n  debug: noOp,\n  // Don't print debug by default\n  error: vtkGlobal.console.error || noOp,\n  info: vtkGlobal.console.info || noOp,\n  log: vtkGlobal.console.log || noOp,\n  warn: vtkGlobal.console.warn || noOp\n};\nfunction setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\nfunction vtkLogMacro() {\n  loggerFunctions.log(...arguments);\n}\nfunction vtkInfoMacro() {\n  loggerFunctions.info(...arguments);\n}\nfunction vtkDebugMacro() {\n  loggerFunctions.debug(...arguments);\n}\nfunction vtkErrorMacro() {\n  loggerFunctions.error(...arguments);\n}\nfunction vtkWarningMacro() {\n  loggerFunctions.warn(...arguments);\n}\nconst ERROR_ONCE_MAP = {};\nfunction vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nconst TYPED_ARRAYS = Object.create(null);\nTYPED_ARRAYS.Float32Array = Float32Array;\nTYPED_ARRAYS.Float64Array = Float64Array;\nTYPED_ARRAYS.Uint8Array = Uint8Array;\nTYPED_ARRAYS.Int8Array = Int8Array;\nTYPED_ARRAYS.Uint16Array = Uint16Array;\nTYPED_ARRAYS.Int16Array = Int16Array;\nTYPED_ARRAYS.Uint32Array = Uint32Array;\nTYPED_ARRAYS.Int32Array = Int32Array;\nTYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray;\ntry {\n  TYPED_ARRAYS.BigInt64Array = BigInt64Array;\n  TYPED_ARRAYS.BigUint64Array = BigUint64Array;\n} catch {\n  // ignore\n}\nfunction newTypedArray(type) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return new (TYPED_ARRAYS[type] || Float64Array)(...args);\n}\nfunction newTypedArrayFrom(type) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  return (TYPED_ARRAYS[type] || Float64Array).from(...args);\n}\n\n// ----------------------------------------------------------------------------\n// capitilize provided string\n// ----------------------------------------------------------------------------\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction _capitalize(str) {\n  return capitalize(str[0] === '_' ? str.slice(1) : str);\n}\nfunction uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nfunction formatBytesToProperUnit(size) {\n  let precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  let chunkSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n  const units = ['TB', 'GB', 'MB', 'KB'];\n  let value = Number(size);\n  let currentUnit = 'B';\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n  return `${value.toFixed(precision)} ${currentUnit}`;\n}\n\n// ----------------------------------------------------------------------------\n// Convert thousand number with proper separator\n// ----------------------------------------------------------------------------\n\nfunction formatNumbersWithThousandSeparator(n) {\n  let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  const sections = [];\n  let size = n;\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n  if (size > 0) {\n    sections.push(size);\n  }\n  sections.reverse();\n  return sections.join(separator);\n}\n\n// ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach(key => {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n}\nfunction isTypedArray(value) {\n  return Object.values(TYPED_ARRAYS).some(ctor => value instanceof ctor);\n}\n\n// ----------------------------------------------------------------------------\n// shallow equals\n// ----------------------------------------------------------------------------\n\nfunction shallowEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find(key => e[key] === value);\n}\nfunction getStateArrayMapFunc(item) {\n  if (item && item.isA) {\n    return item.getState();\n  }\n  return item;\n}\n\n// ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\nfunction setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n}\n\n// ----------------------------------------------------------------------------\n// measurePromiseExecution\n//\n// Measures the time it takes for a promise to finish from\n//   the time this function is invoked.\n// The callback receives the time it took for the promise to resolve or reject.\n// ----------------------------------------------------------------------------\n\nfunction measurePromiseExecution(promise, callback) {\n  const start = performance.now();\n  promise.finally(() => {\n    const delta = performance.now() - start;\n    callback(delta);\n  });\n}\n\n// ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nfunction obj() {\n  let publicAPI = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n  const callbacks = [];\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n  if (!('classHierarchy' in model)) {\n    model.classHierarchy = new ClassHierarchy('vtkObject');\n  } else if (!(model.classHierarchy instanceof ClassHierarchy)) {\n    const hierarchy = new ClassHierarchy();\n    for (let i = 0; i < model.classHierarchy.length; i++) {\n      hierarchy.push(model.classHierarchy[i]);\n    }\n    model.classHierarchy = hierarchy;\n  }\n  function off(index) {\n    callbacks[index] = null;\n  }\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n  publicAPI.isDeleted = () => !!model.deleted;\n  publicAPI.modified = otherMTime => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n    model.mtime = ++globalMTime;\n    callbacks.forEach(callback => callback && callback(publicAPI));\n  };\n  publicAPI.onModified = callback => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n  publicAPI.getMTime = () => model.mtime;\n  publicAPI.isA = className => {\n    let count = model.classHierarchy.length;\n    // we go backwards as that is more likely for\n    // early termination\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n    return false;\n  };\n  publicAPI.getClassName = function () {\n    let depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.classHierarchy[model.classHierarchy.length - 1 - depth];\n  };\n  publicAPI.set = function () {\n    let map = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let noWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let noFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let ret = false;\n    Object.keys(map).forEach(name => {\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn(...map[name]) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(`Warning: Set value to model directly ${name}, ${map[name]}`);\n        }\n        ret = model[name] !== map[name] || ret;\n        model[name] = map[name];\n      }\n    });\n    return ret;\n  };\n  publicAPI.get = function () {\n    for (var _len3 = arguments.length, list = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      list[_key3] = arguments[_key3];\n    }\n    if (!list.length) {\n      return model;\n    }\n    const subset = {};\n    list.forEach(name => {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n  publicAPI.getReferenceByName = val => model[val];\n  publicAPI.delete = () => {\n    Object.keys(model).forEach(field => delete model[field]);\n    callbacks.forEach((el, index) => off(index));\n\n    // Flag the instance being deleted\n    model.deleted = true;\n  };\n\n  // Add serialization support\n  publicAPI.getState = () => {\n    if (model.deleted) {\n      return null;\n    }\n    const jsonArchive = {\n      ...model,\n      vtkClass: publicAPI.getClassName()\n    };\n\n    // Convert every vtkObject to its serializable form\n    Object.keys(jsonArchive).forEach(keyName => {\n      if (jsonArchive[keyName] === null || jsonArchive[keyName] === undefined || keyName[0] === '_' // protected members start with _\n      ) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      } else if (isTypedArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = Array.from(jsonArchive[keyName]);\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive).sort().forEach(name => {\n      sortedObj[name] = jsonArchive[name];\n    });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n    return sortedObj;\n  };\n\n  // Add shallowCopy(otherInstance) support\n  publicAPI.shallowCopy = function (other) {\n    let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(`Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`);\n    }\n    const otherModel = other.get();\n    const keyList = Object.keys(model).sort();\n    const otherKeyList = Object.keys(otherModel).sort();\n    otherKeyList.forEach(key => {\n      const keyIdx = keyList.indexOf(key);\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(`add ${key} in shallowCopy`);\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n      model[key] = otherModel[key];\n    });\n    if (keyList.length && debug) {\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\n    }\n    publicAPI.modified();\n  };\n\n  // This function will get called when one invoke JSON.stringify(vtkObject)\n  // JSON.stringify will only stringify the return value of this function\n  publicAPI.toJSON = function vtkObjToJSON() {\n    return publicAPI.getState();\n  };\n\n  // Allow usage as decorator\n  return publicAPI;\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nconst objectGetterMap = {\n  object(publicAPI, model, field) {\n    return function getter() {\n      return {\n        ...model[field.name]\n      };\n    };\n  }\n};\nfunction get(publicAPI, model, fieldNames) {\n  fieldNames.forEach(field => {\n    if (typeof field === 'object') {\n      const getter = objectGetterMap[field.type];\n      if (getter) {\n        publicAPI[`get${_capitalize(field.name)}`] = getter(publicAPI, model, field);\n      } else {\n        publicAPI[`get${_capitalize(field.name)}`] = () => model[field.name];\n      }\n    } else {\n      publicAPI[`get${_capitalize(field)}`] = () => model[field];\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nconst objectSetterMap = {\n  enum(publicAPI, model, field) {\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\n    return value => {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n          return false;\n        }\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (Object.keys(field.enum).map(key => field.enum[key]).indexOf(value) !== -1) {\n            const previousValue = model[field.name];\n            model[field.name] = value;\n            model[onChanged]?.(publicAPI, model, value, previousValue);\n            publicAPI.modified();\n            return true;\n          }\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\n          throw new RangeError('Set Enum outside numeric range');\n        }\n        return false;\n      }\n      vtkErrorMacro(`Set Enum with invalid argument (String/Number) ${field}, ${value}`);\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  },\n  object(publicAPI, model, field) {\n    if (field.params?.length === 1) {\n      vtkWarningMacro('Setter of type \"object\" with a single \"param\" field is not supported');\n    }\n    const onChanged = `_on${_capitalize(field.name)}Changed`;\n    return function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      let value;\n      if (args.length > 1 && field.params?.length) {\n        value = field.params.reduce((acc, prop, idx) => Object.assign(acc, {\n          [prop]: args[idx]\n        }), {});\n      } else {\n        value = args[0];\n      }\n      if (!DeepEqual(model[field.name], value)) {\n        const previousValue = model[field.name];\n        model[field.name] = value;\n        model[onChanged]?.(publicAPI, model, value, previousValue);\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  }\n};\nfunction findSetter(field) {\n  if (typeof field === 'object') {\n    const fn = objectSetterMap[field.type];\n    if (fn) {\n      return (publicAPI, model) => fn(publicAPI, model, field);\n    }\n    vtkErrorMacro(`No setter for field ${field}`);\n    throw new TypeError('No setter for field');\n  }\n  return function getSetter(publicAPI, model) {\n    const onChanged = `_on${_capitalize(field)}Changed`;\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n      if (model[field] !== value) {\n        const previousValue = model[field.name];\n        model[field] = value;\n        model[onChanged]?.(publicAPI, model, value, previousValue);\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  };\n}\nfunction set(publicAPI, model, fields) {\n  fields.forEach(field => {\n    if (typeof field === 'object') {\n      publicAPI[`set${_capitalize(field.name)}`] = findSetter(field)(publicAPI, model);\n    } else {\n      publicAPI[`set${_capitalize(field)}`] = findSetter(field)(publicAPI, model);\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nfunction setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nfunction getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach(field => {\n    publicAPI[`get${_capitalize(field)}`] = () => model[field] ? Array.from(model[field]) : model[field];\n    publicAPI[`get${_capitalize(field)}ByReference`] = () => model[field];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nfunction setArray(publicAPI, model, fieldNames, size) {\n  let defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  fieldNames.forEach(field => {\n    if (model[field] && size && model[field].length !== size) {\n      throw new RangeError(`Invalid initial number of values for array (${field})`);\n    }\n    const onChanged = `_on${_capitalize(field)}Changed`;\n    publicAPI[`set${_capitalize(field)}`] = function () {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      let array = args;\n      let changeDetected;\n      let needCopy = false;\n      // allow null or an array to be passed as a single arg.\n      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n        needCopy = true;\n      }\n      if (array == null) {\n        changeDetected = model[field] !== array;\n      } else {\n        if (size && array.length !== size) {\n          if (array.length < size && defaultVal !== undefined) {\n            array = Array.from(array);\n            needCopy = false;\n            while (array.length < size) array.push(defaultVal);\n          } else {\n            throw new RangeError(`Invalid number of values for array setter (${field})`);\n          }\n        }\n        changeDetected = model[field] == null || model[field].length !== array.length;\n        for (let i = 0; !changeDetected && i < array.length; ++i) {\n          changeDetected = model[field][i] !== array[i];\n        }\n        if (changeDetected && needCopy) {\n          array = Array.from(array);\n        }\n      }\n      if (changeDetected) {\n        const previousValue = model[field.name];\n        model[field] = array;\n        model[onChanged]?.(publicAPI, model, array, previousValue);\n        publicAPI.modified();\n      }\n      return changeDetected;\n    };\n    publicAPI[`set${_capitalize(field)}From`] = otherArray => {\n      const target = model[field];\n      otherArray.forEach((v, i) => {\n        target[i] = v;\n      });\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nfunction setGetArray(publicAPI, model, fieldNames, size) {\n  let defaultVal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\nfunction moveToProtected(publicAPI, model, fieldNames) {\n  for (let i = 0; i < fieldNames.length; i++) {\n    const fieldName = fieldNames[i];\n    if (model[fieldName] !== undefined) {\n      model[`_${fieldName}`] = model[fieldName];\n      delete model[fieldName];\n    }\n  }\n}\n// ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nfunction algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  }\n\n  // Cache the argument for later manipulation\n  model.numberOfInputs = numberOfInputs;\n\n  // Methods\n  function setInputData(dataset) {\n    let port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(`algorithm ${publicAPI.getClassName()} only has ${model.numberOfInputs} input ports. To add more input ports, use addInputData()`);\n      return;\n    }\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n  function getInputData() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n    return model.inputData[port];\n  }\n  function setInputConnection(outputPort) {\n    let port = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\n      msg += `${model.numberOfInputs}`;\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n  function getInputConnection() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return model.inputConnection[port];\n  }\n  function getPortToFill() {\n    let portToFill = model.numberOfInputs;\n    while (portToFill && !model.inputData[portToFill - 1] && !model.inputConnection[portToFill - 1]) {\n      portToFill--;\n    }\n    if (portToFill === model.numberOfInputs) {\n      model.numberOfInputs++;\n    }\n    return portToFill;\n  }\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputConnection(outputPort, getPortToFill());\n  }\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputData(dataset, getPortToFill());\n  }\n  function getOutputData() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n    return model.output[port];\n  }\n  publicAPI.shouldUpdate = () => {\n    const localMTime = publicAPI.getMTime();\n    let minOutputMTime = Infinity;\n    let count = numberOfOutputs;\n    while (count--) {\n      if (!model.output[count] || model.output[count].isDeleted()) {\n        return true;\n      }\n      const mt = model.output[count].getMTime();\n      if (mt < localMTime) {\n        return true;\n      }\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n    count = model.numberOfInputs;\n    while (count--) {\n      if (model.inputConnection[count]?.filter.shouldUpdate() || publicAPI.getInputData(count)?.getMTime() > minOutputMTime) {\n        return true;\n      }\n    }\n    return false;\n  };\n  function getOutputPort() {\n    let port = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const outputPortAccess = () => getOutputData(port);\n    // Add reference to filter\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  }\n\n  // Handle input if needed\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    let count = model.numberOfInputs;\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    }\n\n    // Expose public methods\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n  publicAPI.update = () => {\n    const ins = [];\n    if (model.numberOfInputs) {\n      let count = 0;\n      while (count < model.numberOfInputs) {\n        ins[count] = publicAPI.getInputData(count);\n        count++;\n      }\n    }\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\n  publicAPI.getNumberOfOutputPorts = () => numberOfOutputs || model.output.length;\n  publicAPI.getInputArrayToProcess = inputPort => {\n    const arrayDesc = model.inputArrayToProcess[inputPort];\n    const ds = model.inputData[inputPort];\n    if (arrayDesc && ds) {\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(arrayDesc.arrayName);\n    }\n    return null;\n  };\n  publicAPI.setInputArrayToProcess = function (inputPort, arrayName, fieldAssociation) {\n    let attributeType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Scalars';\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n    model.inputArrayToProcess[inputPort] = {\n      arrayName,\n      fieldAssociation,\n      attributeType\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nconst EVENT_ABORT = Symbol('Event abort');\nfunction event(publicAPI, model, eventName) {\n  const callbacks = [];\n  const previousDelete = publicAPI.delete;\n  let curCallbackID = 1;\n  function off(callbackID) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      const [cbID] = callbacks[i];\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n    return Object.freeze({\n      unsubscribe\n    });\n  }\n  function invoke() {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n    const currentCallbacks = callbacks.slice();\n    for (let index = 0; index < currentCallbacks.length; ++index) {\n      const [, cb, priority] = currentCallbacks[index];\n      if (!cb) {\n        continue; // eslint-disable-line\n      }\n\n      if (priority < 0) {\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        const continueNext = cb.apply(publicAPI, arguments);\n        if (continueNext === EVENT_ABORT) {\n          break;\n        }\n      }\n    }\n    /* eslint-enable prefer-rest-params */\n  }\n\n  publicAPI[`invoke${_capitalize(eventName)}`] = invoke;\n  publicAPI[`on${_capitalize(eventName)}`] = function (callback) {\n    let priority = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0;\n    if (!callback.apply) {\n      console.error(`Invalid callback for event ${eventName}`);\n      return null;\n    }\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    const callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\n    return on(callbackID);\n  };\n  publicAPI.delete = () => {\n    previousDelete();\n    callbacks.forEach(_ref => {\n      let [cbID] = _ref;\n      return off(cbID);\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nfunction newInstance(extend, className) {\n  const constructor = function () {\n    let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n    return Object.freeze(publicAPI);\n  };\n\n  // Register constructor to factory\n  if (className) {\n    vtk.register(className, constructor);\n  }\n  return constructor;\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nfunction chain() {\n  for (var _len6 = arguments.length, fn = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    fn[_key6] = arguments[_key6];\n  }\n  return function () {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    return fn.filter(i => !!i).map(i => i(...args));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nfunction isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\nfunction traverseInstanceTree(instance, extractFunction) {\n  let accumulator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let visitedInstances = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n    visitedInstances.push(instance);\n    const result = extractFunction(instance);\n    if (result !== undefined) {\n      accumulator.push(result);\n    }\n\n    // Now go through this instance's model\n    const model = instance.get();\n    Object.keys(model).forEach(key => {\n      const modelObj = model[key];\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach(subObj => {\n          traverseInstanceTree(subObj, extractFunction, accumulator, visitedInstances);\n        });\n      } else {\n        traverseInstanceTree(modelObj, extractFunction, accumulator, visitedInstances);\n      }\n    });\n  }\n  return accumulator;\n}\n\n// ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nfunction debounce(func, wait, immediate) {\n  var _this = this;\n  let timeout;\n  const debounced = function () {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    const context = _this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n  debounced.cancel = () => clearTimeout(timeout);\n  return debounced;\n}\n\n// ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nfunction throttle(callback, delay) {\n  let isThrottled = false;\n  let argsToUse = null;\n  function next() {\n    isThrottled = false;\n    if (argsToUse !== null) {\n      wrapper(...argsToUse); // eslint-disable-line\n      argsToUse = null;\n    }\n  }\n  function wrapper() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n    isThrottled = true;\n    callback(...args);\n    setTimeout(next, delay);\n  }\n  return wrapper;\n}\n\n// ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nfunction keystore(publicAPI, model) {\n  let initialKeystore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n  publicAPI.setKey = (key, value) => {\n    model.keystore[key] = value;\n  };\n  publicAPI.getKey = key => model.keystore[key];\n  publicAPI.getAllKeys = () => Object.keys(model.keystore);\n  publicAPI.deleteKey = key => delete model.keystore[key];\n  publicAPI.clearKeystore = () => publicAPI.getAllKeys().forEach(key => delete model.keystore[key]);\n}\n\n// ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\nlet nextProxyId = 1;\nconst ROOT_GROUP_NAME = '__root__';\nfunction proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n  const parentDelete = publicAPI.delete;\n\n  // getProxyId\n  model.proxyId = `${nextProxyId++}`;\n\n  // ui handling\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']);\n\n  // group properties\n  const propertyMap = {};\n  const groupChildrenNames = {};\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n    const childrenNames = groupChildrenNames[currentGroupName];\n    for (let i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(descriptionList[i].children, descriptionList[i].name);\n      }\n    }\n  }\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n  publicAPI.updateUI = ui => {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n    Object.keys(propertyMap).forEach(k => delete propertyMap[k]);\n    Object.keys(groupChildrenNames).forEach(k => delete groupChildrenNames[k]);\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n  function listProxyProperties() {\n    let gName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\n    return groupChildrenNames[gName];\n  }\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\n    const prop = propertyMap[propertyName];\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = {\n        ...propUI\n      };\n    }\n  };\n  publicAPI.activate = () => {\n    if (model.proxyManager) {\n      const setActiveMethod = `setActive${_capitalize(publicAPI.getProxyGroup().slice(0, -1))}`;\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  };\n\n  // property link\n  model.propertyLinkSubscribers = {};\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n  publicAPI.gcPropertyLinks = type => {\n    const subscribers = model.propertyLinkSubscribers[type] || [];\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n  model.propertyLinkMap = {};\n  publicAPI.getPropertyLink = function (id) {\n    let persistent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n    let value = null;\n    const links = [];\n    let count = 0;\n    let updateInProgress = false;\n    function update(source) {\n      let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (updateInProgress) {\n        return null;\n      }\n      const needUpdate = [];\n      let sourceLink = null;\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n      if (!sourceLink) {\n        return null;\n      }\n      const newValue = sourceLink.instance[`get${_capitalize(sourceLink.propertyName)}`]();\n      if (!shallowEquals(newValue, value) || force) {\n        value = newValue;\n        updateInProgress = true;\n        while (needUpdate.length) {\n          const linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set({\n            [linkToUpdate.propertyName]: value\n          });\n        }\n        updateInProgress = false;\n      }\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n      return newValue;\n    }\n    function unbind(instance, propertyName) {\n      const indexToDelete = [];\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === instance && (link.propertyName === propertyName || propertyName === undefined)) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n    function bind(instance, propertyName) {\n      let updateMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      const subscription = instance.onModified(update);\n      const other = links[0];\n      links.push({\n        instance,\n        propertyName,\n        subscription\n      });\n      if (updateMe) {\n        if (model.propertyLinkMap[id].persistent && model.propertyLinkMap[id].value !== undefined) {\n          instance.set({\n            [propertyName]: model.propertyLinkMap[id].value\n          });\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n      return {\n        unsubscribe: () => unbind(instance, propertyName)\n      };\n    }\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n    const linkHandler = {\n      bind,\n      unbind,\n      unsubscribe,\n      persistent\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  };\n\n  // extract values\n  function getProperties() {\n    let groupName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ROOT_GROUP_NAME;\n    const values = [];\n    const id = model.proxyId;\n    const propertyNames = listProxyProperties(groupName) || [];\n    for (let i = 0; i < propertyNames.length; i++) {\n      const name = propertyNames[i];\n      const method = publicAPI[`get${_capitalize(name)}`];\n      const value = method ? method() : undefined;\n      const prop = {\n        id,\n        name,\n        value\n      };\n      const children = getProperties(name);\n      if (children.length) {\n        prop.children = children;\n      }\n      values.push(prop);\n    }\n    return values;\n  }\n  publicAPI.listPropertyNames = () => getProperties().map(p => p.name);\n  publicAPI.getPropertyByName = name => getProperties().find(p => p.name === name);\n  publicAPI.getPropertyDomainByName = name => (propertyMap[name] || {}).domain;\n\n  // ui section\n  publicAPI.getProxySection = () => ({\n    id: model.proxyId,\n    name: model.proxyGroup,\n    ui: model.ui,\n    properties: getProperties()\n  });\n\n  // free resources\n  publicAPI.delete = () => {\n    const list = Object.keys(model.propertyLinkMap);\n    let count = list.length;\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n    Object.keys(model.propertyLinkSubscribers).forEach(publicAPI.gcPropertyLinks);\n    parentDelete();\n  };\n\n  // @todo fix infinite recursion due to active source\n  publicAPI.getState = () => null;\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (let i = 0; i < model.links.length; i++) {\n        const {\n          link,\n          property,\n          persistent,\n          updateOnBind,\n          type\n        } = model.links[i];\n        if (type === 'application') {\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n  setImmediateVTK(registerLinks);\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nfunction proxyPropertyMapping(publicAPI, model, map) {\n  const parentDelete = publicAPI.delete;\n  const subscriptions = [];\n  const propertyNames = Object.keys(map);\n  let count = propertyNames.length;\n  while (count--) {\n    const propertyName = propertyNames[count];\n    const {\n      modelKey,\n      property,\n      modified = true\n    } = map[propertyName];\n    const methodSrc = _capitalize(property);\n    const methodDst = _capitalize(propertyName);\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nfunction proxyPropertyState(publicAPI, model) {\n  let state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let defaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  model.this = publicAPI;\n  function applyState(map) {\n    const modelKeys = Object.keys(map);\n    let count = modelKeys.length;\n    while (count--) {\n      const modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n  const modelKeys = Object.keys(defaults);\n  let count = modelKeys.length;\n  while (count--) {\n    // Add default\n    const key = modelKeys[count];\n    model[key] = defaults[key];\n\n    // Add set method\n    const mapping = state[key];\n    publicAPI[`set${_capitalize(key)}`] = value => {\n      if (value !== model[key]) {\n        model[key] = value;\n        const propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  }\n\n  // Add getter\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n\n// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\nfunction normalizeWheel(wheelEvent) {\n  let sX = 0; // spinX\n  let sY = 0; // spinY\n  let pX = 0; // pixelX\n  let pY = 0; // pixelY\n\n  // Legacy\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n  return {\n    spinX: sX,\n    spinY: sY || sX,\n    pixelX: pX,\n    pixelY: pY || pX\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nvar macro = {\n  algo,\n  capitalize,\n  chain,\n  debounce,\n  enumToString,\n  event,\n  EVENT_ABORT,\n  formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator,\n  get,\n  getArray,\n  getCurrentGlobalMTime,\n  getStateArrayMapFunc,\n  isVtkObject,\n  keystore,\n  measurePromiseExecution,\n  moveToProtected,\n  newInstance,\n  newTypedArray,\n  newTypedArrayFrom,\n  normalizeWheel,\n  obj,\n  proxy,\n  proxyPropertyMapping,\n  proxyPropertyState,\n  safeArrays,\n  set,\n  setArray,\n  setGet,\n  setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction,\n  throttle,\n  traverseInstanceTree,\n  TYPED_ARRAYS,\n  // deprecated todo remove on breaking API revision\n  uncapitalize,\n  VOID,\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkInfoMacro,\n  vtkLogMacro,\n  vtkOnceErrorMacro,\n  vtkWarningMacro,\n  // vtk.js internal use\n  objectSetterMap\n};\n\nvar macro$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  VOID: VOID,\n  setLoggerFunction: setLoggerFunction,\n  vtkLogMacro: vtkLogMacro,\n  vtkInfoMacro: vtkInfoMacro,\n  vtkDebugMacro: vtkDebugMacro,\n  vtkErrorMacro: vtkErrorMacro,\n  vtkWarningMacro: vtkWarningMacro,\n  vtkOnceErrorMacro: vtkOnceErrorMacro,\n  TYPED_ARRAYS: TYPED_ARRAYS,\n  newTypedArray: newTypedArray,\n  newTypedArrayFrom: newTypedArrayFrom,\n  capitalize: capitalize,\n  _capitalize: _capitalize,\n  uncapitalize: uncapitalize,\n  formatBytesToProperUnit: formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator: formatNumbersWithThousandSeparator,\n  setImmediateVTK: setImmediateVTK,\n  measurePromiseExecution: measurePromiseExecution,\n  obj: obj,\n  get: get,\n  set: set,\n  setGet: setGet,\n  getArray: getArray,\n  setArray: setArray,\n  setGetArray: setGetArray,\n  moveToProtected: moveToProtected,\n  algo: algo,\n  EVENT_ABORT: EVENT_ABORT,\n  event: event,\n  newInstance: newInstance,\n  chain: chain,\n  isVtkObject: isVtkObject,\n  traverseInstanceTree: traverseInstanceTree,\n  debounce: debounce,\n  throttle: throttle,\n  keystore: keystore,\n  proxy: proxy,\n  proxyPropertyMapping: proxyPropertyMapping,\n  proxyPropertyState: proxyPropertyState,\n  normalizeWheel: normalizeWheel,\n  'default': macro\n});\n\nexport { uncapitalize as A, formatBytesToProperUnit as B, formatNumbersWithThousandSeparator as C, setImmediateVTK as D, measurePromiseExecution as E, setArray as F, EVENT_ABORT as G, isVtkObject as H, debounce as I, throttle as J, keystore as K, proxyPropertyState as L, normalizeWheel as M, TYPED_ARRAYS as T, VOID as V, _capitalize as _, newTypedArray as a, newTypedArrayFrom as b, macro$1 as c, algo as d, setGet as e, event as f, get as g, chain as h, moveToProtected as i, proxyPropertyMapping as j, getArray as k, setGetArray as l, macro as m, newInstance as n, obj as o, proxy as p, capitalize as q, vtkErrorMacro as r, set as s, traverseInstanceTree as t, setLoggerFunction as u, vtkWarningMacro as v, vtkLogMacro as w, vtkInfoMacro as x, vtkDebugMacro as y, vtkOnceErrorMacro as z };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}