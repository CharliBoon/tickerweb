{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\nimport vtkCompositeVRManipulator from './CompositeVRManipulator.js';\nimport { Device, Input } from '../../Rendering/Core/RenderWindowInteractor/Constants.js';\nimport { States } from '../../Rendering/Core/InteractorStyle/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkVRButtonPanManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVRButtonPanManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVRButtonPanManipulator');\n  publicAPI.onButton3D = (interactorStyle, renderer, state, eventData) => {\n    if (eventData.pressed) {\n      interactorStyle.startCameraPose();\n    } else if (state === States.IS_CAMERA_POSE) {\n      interactorStyle.endCameraPose();\n    }\n  };\n  publicAPI.onMove3D = (interactorStyle, renderer, state, eventData) => {\n    if (state !== States.IS_CAMERA_POSE) {\n      return;\n    }\n\n    // move the world in the direction of the\n    // controller\n    const camera = renderer.getActiveCamera();\n    const oldTrans = camera.getPhysicalTranslation();\n\n    // look at the y axis to determine how fast / what direction to move\n    const speed = eventData.gamepad.axes[1];\n\n    // 0.05 meters / frame movement\n    const pscale = speed * 0.05 * camera.getPhysicalScale();\n\n    // convert orientation to world coordinate direction\n    const dir = camera.physicalOrientationToWorldDirection(eventData.orientation);\n    camera.setPhysicalTranslation(oldTrans[0] + dir[0] * pscale, oldTrans[1] + dir[1] * pscale, oldTrans[2] + dir[2] * pscale);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: Device.RightController,\n  input: Input.TrackPad\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  vtkCompositeVRManipulator.extend(publicAPI, model, initialValues);\n\n  // Object specific methods\n  vtkVRButtonPanManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkVRButtonPanManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVRButtonPanManipulator$1 = {\n  newInstance,\n  extend\n};\nexport { vtkVRButtonPanManipulator$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkCompositeVRManipulator","Device","Input","States","vtkVRButtonPanManipulator","publicAPI","model","classHierarchy","push","onButton3D","interactorStyle","renderer","state","eventData","pressed","startCameraPose","IS_CAMERA_POSE","endCameraPose","onMove3D","camera","getActiveCamera","oldTrans","getPhysicalTranslation","speed","gamepad","axes","pscale","getPhysicalScale","dir","physicalOrientationToWorldDirection","orientation","setPhysicalTranslation","DEFAULT_VALUES","device","RightController","input","TrackPad","extend","initialValues","arguments","length","undefined","Object","assign","obj","newInstance","vtkVRButtonPanManipulator$1","default"],"sources":["/home/ims/VSCodeProjects/TickerWeb/TickerWeb_Vue/node_modules/@kitware/vtk.js/Interaction/Manipulators/VRButtonPanManipulator.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport vtkCompositeVRManipulator from './CompositeVRManipulator.js';\nimport { Device, Input } from '../../Rendering/Core/RenderWindowInteractor/Constants.js';\nimport { States } from '../../Rendering/Core/InteractorStyle/Constants.js';\n\n// ----------------------------------------------------------------------------\n// vtkVRButtonPanManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVRButtonPanManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVRButtonPanManipulator');\n  publicAPI.onButton3D = (interactorStyle, renderer, state, eventData) => {\n    if (eventData.pressed) {\n      interactorStyle.startCameraPose();\n    } else if (state === States.IS_CAMERA_POSE) {\n      interactorStyle.endCameraPose();\n    }\n  };\n  publicAPI.onMove3D = (interactorStyle, renderer, state, eventData) => {\n    if (state !== States.IS_CAMERA_POSE) {\n      return;\n    }\n\n    // move the world in the direction of the\n    // controller\n    const camera = renderer.getActiveCamera();\n    const oldTrans = camera.getPhysicalTranslation();\n\n    // look at the y axis to determine how fast / what direction to move\n    const speed = eventData.gamepad.axes[1];\n\n    // 0.05 meters / frame movement\n    const pscale = speed * 0.05 * camera.getPhysicalScale();\n\n    // convert orientation to world coordinate direction\n    const dir = camera.physicalOrientationToWorldDirection(eventData.orientation);\n    camera.setPhysicalTranslation(oldTrans[0] + dir[0] * pscale, oldTrans[1] + dir[1] * pscale, oldTrans[2] + dir[2] * pscale);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: Device.RightController,\n  input: Input.TrackPad\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  vtkCompositeVRManipulator.extend(publicAPI, model, initialValues);\n\n  // Object specific methods\n  vtkVRButtonPanManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkVRButtonPanManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVRButtonPanManipulator$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkVRButtonPanManipulator$1 as default, extend, newInstance };\n"],"mappings":";AAAA,SAASA,CAAC,IAAIC,KAAK,QAAQ,kBAAkB;AAC7C,OAAOC,yBAAyB,MAAM,6BAA6B;AACnE,SAASC,MAAM,EAAEC,KAAK,QAAQ,0DAA0D;AACxF,SAASC,MAAM,QAAQ,mDAAmD;;AAE1E;AACA;AACA;;AAEA,SAASC,yBAAyBA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACnD;EACAA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,2BAA2B,CAAC;EACtDH,SAAS,CAACI,UAAU,GAAG,CAACC,eAAe,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,KAAK;IACtE,IAAIA,SAAS,CAACC,OAAO,EAAE;MACrBJ,eAAe,CAACK,eAAe,CAAC,CAAC;IACnC,CAAC,MAAM,IAAIH,KAAK,KAAKT,MAAM,CAACa,cAAc,EAAE;MAC1CN,eAAe,CAACO,aAAa,CAAC,CAAC;IACjC;EACF,CAAC;EACDZ,SAAS,CAACa,QAAQ,GAAG,CAACR,eAAe,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,KAAK;IACpE,IAAID,KAAK,KAAKT,MAAM,CAACa,cAAc,EAAE;MACnC;IACF;;IAEA;IACA;IACA,MAAMG,MAAM,GAAGR,QAAQ,CAACS,eAAe,CAAC,CAAC;IACzC,MAAMC,QAAQ,GAAGF,MAAM,CAACG,sBAAsB,CAAC,CAAC;;IAEhD;IACA,MAAMC,KAAK,GAAGV,SAAS,CAACW,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;;IAEvC;IACA,MAAMC,MAAM,GAAGH,KAAK,GAAG,IAAI,GAAGJ,MAAM,CAACQ,gBAAgB,CAAC,CAAC;;IAEvD;IACA,MAAMC,GAAG,GAAGT,MAAM,CAACU,mCAAmC,CAAChB,SAAS,CAACiB,WAAW,CAAC;IAC7EX,MAAM,CAACY,sBAAsB,CAACV,QAAQ,CAAC,CAAC,CAAC,GAAGO,GAAG,CAAC,CAAC,CAAC,GAAGF,MAAM,EAAEL,QAAQ,CAAC,CAAC,CAAC,GAAGO,GAAG,CAAC,CAAC,CAAC,GAAGF,MAAM,EAAEL,QAAQ,CAAC,CAAC,CAAC,GAAGO,GAAG,CAAC,CAAC,CAAC,GAAGF,MAAM,CAAC;EAC5H,CAAC;AACH;;AAEA;AACA;AACA;;AAEA,MAAMM,cAAc,GAAG;EACrBC,MAAM,EAAEhC,MAAM,CAACiC,eAAe;EAC9BC,KAAK,EAAEjC,KAAK,CAACkC;AACf,CAAC;;AAED;;AAEA,SAASC,MAAMA,CAAChC,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAIgC,aAAa,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FG,MAAM,CAACC,MAAM,CAACrC,KAAK,EAAE0B,cAAc,EAAEM,aAAa,CAAC;EACnDvC,KAAK,CAAC6C,GAAG,CAACvC,SAAS,EAAEC,KAAK,CAAC;EAC3BN,yBAAyB,CAACqC,MAAM,CAAChC,SAAS,EAAEC,KAAK,EAAEgC,aAAa,CAAC;;EAEjE;EACAlC,yBAAyB,CAACC,SAAS,EAAEC,KAAK,CAAC;AAC7C;;AAEA;;AAEA,MAAMuC,WAAW,GAAG9C,KAAK,CAAC8C,WAAW,CAACR,MAAM,EAAE,2BAA2B,CAAC;;AAE1E;;AAEA,IAAIS,2BAA2B,GAAG;EAChCD,WAAW;EACXR;AACF,CAAC;AAED,SAASS,2BAA2B,IAAIC,OAAO,EAAEV,MAAM,EAAEQ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}