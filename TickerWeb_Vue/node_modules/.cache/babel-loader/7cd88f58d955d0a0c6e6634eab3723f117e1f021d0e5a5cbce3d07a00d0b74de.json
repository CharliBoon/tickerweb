{"ast":null,"code":"import axios from 'axios';\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect, watch } from 'vue';\n// vtk\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry';\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkXMLPolyDataReader from '@kitware/vtk.js/IO/XML/XMLPolyDataReader';\nexport default {\n  setup() {\n    const vtkContainer = ref(null);\n    const context = ref(null);\n    const coneResolution = ref(10);\n    const coneOpacity = ref(100);\n    const representation = ref(2);\n    const textEncoder = new TextEncoder();\n    //const path = 'http://localhost:5000';\n    const path = 'http://192.168.0.2:5000';\n    const reader = vtkXMLPolyDataReader.newInstance();\n    const mapper = vtkMapper.newInstance();\n    mapper.setInputConnection(reader.getOutputPort());\n    const actor = vtkActor.newInstance();\n    actor.setMapper(mapper);\n    function setConeResolution(res) {\n      coneResolution.value = Number(res);\n    }\n    function setConeOpacity(opacity) {\n      coneOpacity.value = Number(opacity);\n    }\n    function setRepresentation(rep) {\n      representation.value = Number(rep);\n    }\n    function setConeAtResolution(resolution, reset) {\n      if (context.value) {\n        const {\n          renderWindow\n        } = context.value;\n        axios.post(path + '/resolution', {\n          resolution: resolution\n        }).then(function (response_post) {\n          axios.get(path + '/cone').then(response_get => {\n            reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n            if (reset) {\n              renderer.resetCamera();\n            }\n            renderWindow.render();\n            console.log(response_get.data);\n          }).catch(error => {\n            console.error(error);\n          });\n          console.log(response_post);\n        }).catch(function (error) {\n          console.log(error);\n        });\n        renderWindow.render();\n      }\n    }\n    watch(coneResolution, newValue => {\n      if (context.value) {\n        const {\n          renderWindow\n        } = context.value;\n        axios.post(path + '/resolution', {\n          resolution: newValue\n        }).then(function (response_post) {\n          axios.get(path + '/cone').then(response_get => {\n            reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n            renderWindow.render();\n            console.log(response_get.data);\n          }).catch(error => {\n            console.error(error);\n          });\n          console.log(response_post);\n        }).catch(function (error) {\n          console.log(error);\n        });\n        renderWindow.render();\n      }\n    });\n    watchEffect(() => {\n      const opacity = unref(coneOpacity);\n      const rep = unref(representation);\n      if (context.value) {\n        const {\n          actor,\n          renderWindow\n        } = context.value;\n        actor.getProperty().setOpacity(opacity * 0.01);\n        actor.getProperty().setRepresentation(rep);\n        renderWindow.render();\n      }\n    });\n    onMounted(() => {\n      if (!context.value) {\n        const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value\n        });\n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n        renderer.addActor(actor);\n        context.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          actor,\n          mapper,\n          reader\n        };\n\n        // sets resolution as well\n        setConeAtResolution(unref(coneResolution), true);\n        /*\n        axios.post(path + '/resolution',{resolution: unref(coneResolution)})\n                .then(function (response_post) {\n                  axios.get(path+'/cone')\n                    .then((response_get) => {\n                      reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n                      renderer.resetCamera(),\n        \t\trenderWindow.render();\n                      console.log(response_get.data)\n                    })\n                    .catch((error) => {\n                      console.error(error);\n                    });\n                  console.log(response_post);\n                })\n                .catch(function (error) {\n                  console.log(error);\n                })\n              */\n        //renderer.resetCamera();\n        //renderWindow.render();\n      }\n    });\n    onBeforeUnmount(() => {\n      if (context.value) {\n        //const {fullScreenRenderer, actor, mapper } = context.value;\n        const {\n          renderer,\n          renderWindow,\n          fullScreenRenderer,\n          reader,\n          actor,\n          mapper\n        } = context.value;\n        actor.delete();\n        mapper.delete();\n        reader.delete();\n        renderer.delete();\n        renderWindow.delete();\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n    return {\n      vtkContainer,\n      setRepresentation,\n      setConeResolution,\n      setConeOpacity,\n      coneOpacity,\n      coneResolution,\n      representation\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","unref","onMounted","onBeforeUnmount","watchEffect","watch","vtkFullScreenRenderWindow","vtkActor","vtkMapper","vtkXMLPolyDataReader","setup","vtkContainer","context","coneResolution","coneOpacity","representation","textEncoder","TextEncoder","path","reader","newInstance","mapper","setInputConnection","getOutputPort","actor","setMapper","setConeResolution","res","value","Number","setConeOpacity","opacity","setRepresentation","rep","setConeAtResolution","resolution","reset","renderWindow","post","then","response_post","get","response_get","parseAsArrayBuffer","encode","data","renderer","resetCamera","render","console","log","catch","error","newValue","getProperty","setOpacity","fullScreenRenderer","rootContainer","getRenderer","getRenderWindow","addActor","delete"],"sources":["C:\\Users\\Malcolm\\Projects\\Web\\TickerWeb\\TickerWeb_Vue\\src\\components\\TickerVTK.vue"],"sourcesContent":["<template>\n  <div>\n    <div ref=\"vtkContainer\" />\n    <table class=\"controls\">\n      <tbody>\n        <tr>\n          <td style=\"text-align:left\">Resolution</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"3\"\n              max=\"100\"\n              :value=\"coneResolution\"\n              @input=\"setConeResolution($event.target.value)\"\n            />\n          </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Opacity</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              :value=\"coneOpacity\"\n              @input=\"setConeOpacity($event.target.value)\"\n            />\n          </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Representation</td>\n          <td>\n            <select\n              style=\"width: 100%\"\n              :value=\"representation\"\n              @change=\"setRepresentation($event.target.value)\"\n            >\n              <option value=\"0\">Points</option>\n              <option value=\"1\">Wireframe</option>\n              <option value=\"2\">Surface</option>\n            </select>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect, watch } from 'vue';\n// vtk\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry';\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkActor              from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkMapper             from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkXMLPolyDataReader  from '@kitware/vtk.js/IO/XML/XMLPolyDataReader'; \n\nexport default {\n\n  setup() {\n  \n    const vtkContainer = ref(null);\n    const context = ref(null);\n    const coneResolution = ref(10);\n\tconst coneOpacity    = ref(100);\n    const representation = ref(2);\n\t\n    const textEncoder = new TextEncoder();\n    //const path = 'http://localhost:5000';\n\tconst path = 'http://192.168.0.2:5000';\n    \n\tconst reader = vtkXMLPolyDataReader.newInstance();\n\t\n\tconst mapper = vtkMapper.newInstance();\n\tmapper.setInputConnection(reader.getOutputPort());\n\n    const actor = vtkActor.newInstance();\n    actor.setMapper(mapper);\n\n    function setConeResolution(res) {\n      coneResolution.value = Number(res);\n    }\n\t\n\tfunction setConeOpacity(opacity) {\n      coneOpacity.value = Number(opacity);\n    }\n\n    function setRepresentation(rep) {\n      representation.value = Number(rep);\n    }\n\t\n\tfunction setConeAtResolution(resolution, reset) {\n      if (context.value) {\n        const {renderWindow} = context.value;\n\t\taxios.post(path + '/resolution',{resolution: resolution})\n          .then(function (response_post) {\n            axios.get(path+'/cone')\n              .then((response_get) => {\n                reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n\t\t\t\tif (reset) {renderer.resetCamera()}\n\t\t\t\trenderWindow.render();\n                console.log(response_get.data)\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n            console.log(response_post);\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n\t\trenderWindow.render();\n      }\n\t}\n\t\n\twatch(coneResolution, (newValue) => {\n      if (context.value) {\n        const {renderWindow} = context.value;\n\t\taxios.post(path + '/resolution',{resolution: newValue})\n          .then(function (response_post) {\n            axios.get(path+'/cone')\n              .then((response_get) => {\n                reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n\t\t\t\trenderWindow.render();\n                console.log(response_get.data)\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n            console.log(response_post);\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n\t\trenderWindow.render();\n      }\n\t})\n\n    watchEffect(() => {\n      const opacity = unref(coneOpacity);\n      const rep = unref(representation);\n      if (context.value) {\n        const { actor, renderWindow } = context.value;\n\t\tactor.getProperty().setOpacity(opacity*0.01);\n        actor.getProperty().setRepresentation(rep);\n        renderWindow.render();\n      }\n    });\n\n    onMounted(() => {\n\t\n      if (!context.value) {\n        const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value,\n          });\n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n\t\trenderer.addActor(actor);\n\t\t\n\t\tcontext.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          actor,\n          mapper,\n          reader,\n        };\n\t\t\n\t\t// sets resolution as well\n        setConeAtResolution(unref(coneResolution), true)\n\t\t/*\n\t\taxios.post(path + '/resolution',{resolution: unref(coneResolution)})\n          .then(function (response_post) {\n            axios.get(path+'/cone')\n              .then((response_get) => {\n                reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n                renderer.resetCamera(),\n\t\t\t\trenderWindow.render();\n                console.log(response_get.data)\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n            console.log(response_post);\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n        */\n        //renderer.resetCamera();\n        //renderWindow.render();\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (context.value) {\n\t\t//const {fullScreenRenderer, actor, mapper } = context.value;\n        const { renderer, renderWindow, fullScreenRenderer, reader, actor, mapper } = context.value;\n        actor.delete();\n        mapper.delete();\n        reader.delete();\n\t\t\n\t\trenderer.delete()\n\t\trenderWindow.delete()\n\t\t\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n\n    return {\n      vtkContainer,\n      setRepresentation,\n      setConeResolution,\n      setConeOpacity,\n      coneOpacity,\n      coneResolution,\n      representation,\n    };\n  }\n}\n</script>\n\n<style scoped>\n.controls {\n  position: absolute;\n  top: 25px;\n  left: 25px;\n  background: white;\n  padding: 12px;\n}\n</style>"],"mappings":"AAiDA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,eAAe,EAAEC,WAAW,EAAEC,KAAI,QAAS,KAAK;AAChF;AACA,OAAO,6CAA6C;AACpD,OAAOC,yBAAwB,MAAO,uDAAuD;AAC7F,OAAOC,QAAO,MAAoB,sCAAsC;AACxE,OAAOC,SAAQ,MAAmB,uCAAuC;AACzE,OAAOC,oBAAmB,MAAQ,0CAA0C;AAE5E,eAAe;EAEbC,KAAKA,CAAA,EAAG;IAEN,MAAMC,YAAW,GAAIX,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMY,OAAM,GAAIZ,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMa,cAAa,GAAIb,GAAG,CAAC,EAAE,CAAC;IACjC,MAAMc,WAAU,GAAOd,GAAG,CAAC,GAAG,CAAC;IAC5B,MAAMe,cAAa,GAAIf,GAAG,CAAC,CAAC,CAAC;IAE7B,MAAMgB,WAAU,GAAI,IAAIC,WAAW,CAAC,CAAC;IACrC;IACH,MAAMC,IAAG,GAAI,yBAAyB;IAEtC,MAAMC,MAAK,GAAIV,oBAAoB,CAACW,WAAW,CAAC,CAAC;IAEjD,MAAMC,MAAK,GAAIb,SAAS,CAACY,WAAW,CAAC,CAAC;IACtCC,MAAM,CAACC,kBAAkB,CAACH,MAAM,CAACI,aAAa,CAAC,CAAC,CAAC;IAE9C,MAAMC,KAAI,GAAIjB,QAAQ,CAACa,WAAW,CAAC,CAAC;IACpCI,KAAK,CAACC,SAAS,CAACJ,MAAM,CAAC;IAEvB,SAASK,iBAAiBA,CAACC,GAAG,EAAE;MAC9Bd,cAAc,CAACe,KAAI,GAAIC,MAAM,CAACF,GAAG,CAAC;IACpC;IAEH,SAASG,cAAcA,CAACC,OAAO,EAAE;MAC5BjB,WAAW,CAACc,KAAI,GAAIC,MAAM,CAACE,OAAO,CAAC;IACrC;IAEA,SAASC,iBAAiBA,CAACC,GAAG,EAAE;MAC9BlB,cAAc,CAACa,KAAI,GAAIC,MAAM,CAACI,GAAG,CAAC;IACpC;IAEH,SAASC,mBAAmBA,CAACC,UAAU,EAAEC,KAAK,EAAE;MAC3C,IAAIxB,OAAO,CAACgB,KAAK,EAAE;QACjB,MAAM;UAACS;QAAY,IAAIzB,OAAO,CAACgB,KAAK;QAC1C7B,KAAK,CAACuC,IAAI,CAACpB,IAAG,GAAI,aAAa,EAAC;UAACiB,UAAU,EAAEA;QAAU,CAAC,EAC/CI,IAAI,CAAC,UAAUC,aAAa,EAAE;UAC7BzC,KAAK,CAAC0C,GAAG,CAACvB,IAAI,GAAC,OAAO,EACnBqB,IAAI,CAAEG,YAAY,IAAK;YACtBvB,MAAM,CAACwB,kBAAkB,CAAC3B,WAAW,CAAC4B,MAAM,CAACF,YAAY,CAACG,IAAI,CAAC,CAAC;YAC5E,IAAIT,KAAK,EAAE;cAACU,QAAQ,CAACC,WAAW,CAAC,CAAC;YAAA;YAClCV,YAAY,CAACW,MAAM,CAAC,CAAC;YACTC,OAAO,CAACC,GAAG,CAACR,YAAY,CAACG,IAAI;UAC/B,CAAC,EACAM,KAAK,CAAEC,KAAK,IAAK;YAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;UACtB,CAAC,CAAC;UACJH,OAAO,CAACC,GAAG,CAACV,aAAa,CAAC;QAC5B,CAAC,EACAW,KAAK,CAAC,UAAUC,KAAK,EAAE;UACtBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;QACpB,CAAC;QACTf,YAAY,CAACW,MAAM,CAAC,CAAC;MACjB;IACL;IAEA3C,KAAK,CAACQ,cAAc,EAAGwC,QAAQ,IAAK;MAC/B,IAAIzC,OAAO,CAACgB,KAAK,EAAE;QACjB,MAAM;UAACS;QAAY,IAAIzB,OAAO,CAACgB,KAAK;QAC1C7B,KAAK,CAACuC,IAAI,CAACpB,IAAG,GAAI,aAAa,EAAC;UAACiB,UAAU,EAAEkB;QAAQ,CAAC,EAC7Cd,IAAI,CAAC,UAAUC,aAAa,EAAE;UAC7BzC,KAAK,CAAC0C,GAAG,CAACvB,IAAI,GAAC,OAAO,EACnBqB,IAAI,CAAEG,YAAY,IAAK;YACtBvB,MAAM,CAACwB,kBAAkB,CAAC3B,WAAW,CAAC4B,MAAM,CAACF,YAAY,CAACG,IAAI,CAAC,CAAC;YAC5ER,YAAY,CAACW,MAAM,CAAC,CAAC;YACTC,OAAO,CAACC,GAAG,CAACR,YAAY,CAACG,IAAI;UAC/B,CAAC,EACAM,KAAK,CAAEC,KAAK,IAAK;YAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;UACtB,CAAC,CAAC;UACJH,OAAO,CAACC,GAAG,CAACV,aAAa,CAAC;QAC5B,CAAC,EACAW,KAAK,CAAC,UAAUC,KAAK,EAAE;UACtBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;QACpB,CAAC;QACTf,YAAY,CAACW,MAAM,CAAC,CAAC;MACjB;IACL,CAAC;IAEE5C,WAAW,CAAC,MAAM;MAChB,MAAM2B,OAAM,GAAI9B,KAAK,CAACa,WAAW,CAAC;MAClC,MAAMmB,GAAE,GAAIhC,KAAK,CAACc,cAAc,CAAC;MACjC,IAAIH,OAAO,CAACgB,KAAK,EAAE;QACjB,MAAM;UAAEJ,KAAK;UAAEa;QAAa,IAAIzB,OAAO,CAACgB,KAAK;QACnDJ,KAAK,CAAC8B,WAAW,CAAC,CAAC,CAACC,UAAU,CAACxB,OAAO,GAAC,IAAI,CAAC;QACtCP,KAAK,CAAC8B,WAAW,CAAC,CAAC,CAACtB,iBAAiB,CAACC,GAAG,CAAC;QAC1CI,YAAY,CAACW,MAAM,CAAC,CAAC;MACvB;IACF,CAAC,CAAC;IAEF9C,SAAS,CAAC,MAAM;MAEd,IAAI,CAACU,OAAO,CAACgB,KAAK,EAAE;QAClB,MAAM4B,kBAAiB,GAAIlD,yBAAyB,CAACc,WAAW,CAAC;UAC/DqC,aAAa,EAAE9C,YAAY,CAACiB;QAC5B,CAAC,CAAC;QACJ,MAAMkB,QAAO,GAAIU,kBAAkB,CAACE,WAAW,CAAC,CAAC;QACjD,MAAMrB,YAAW,GAAImB,kBAAkB,CAACG,eAAe,CAAC,CAAC;QAC/Db,QAAQ,CAACc,QAAQ,CAACpC,KAAK,CAAC;QAExBZ,OAAO,CAACgB,KAAI,GAAI;UACR4B,kBAAkB;UAClBnB,YAAY;UACZS,QAAQ;UACRtB,KAAK;UACLH,MAAM;UACNF;QACF,CAAC;;QAEP;QACMe,mBAAmB,CAACjC,KAAK,CAACY,cAAc,CAAC,EAAE,IAAI;QACrD;;;;;;;;;;;;;;;;;;;QAmBM;QACA;MACF;IACF,CAAC,CAAC;IAEFV,eAAe,CAAC,MAAM;MACpB,IAAIS,OAAO,CAACgB,KAAK,EAAE;QACvB;QACM,MAAM;UAAEkB,QAAQ;UAAET,YAAY;UAAEmB,kBAAkB;UAAErC,MAAM;UAAEK,KAAK;UAAEH;QAAO,IAAIT,OAAO,CAACgB,KAAK;QAC3FJ,KAAK,CAACqC,MAAM,CAAC,CAAC;QACdxC,MAAM,CAACwC,MAAM,CAAC,CAAC;QACf1C,MAAM,CAAC0C,MAAM,CAAC,CAAC;QAErBf,QAAQ,CAACe,MAAM,CAAC;QAChBxB,YAAY,CAACwB,MAAM,CAAC;QAEdL,kBAAkB,CAACK,MAAM,CAAC,CAAC;QAC3BjD,OAAO,CAACgB,KAAI,GAAI,IAAI;MACtB;IACF,CAAC,CAAC;IAEF,OAAO;MACLjB,YAAY;MACZqB,iBAAiB;MACjBN,iBAAiB;MACjBI,cAAc;MACdhB,WAAW;MACXD,cAAc;MACdE;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}