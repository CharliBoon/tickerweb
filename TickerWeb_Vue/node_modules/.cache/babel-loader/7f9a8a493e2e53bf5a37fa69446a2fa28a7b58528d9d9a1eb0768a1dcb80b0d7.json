{"ast":null,"code":"function identity(i) {\n  return i;\n}\nfunction toNativeType(str) {\n  if (str === null || str === 'null') {\n    return null;\n  }\n  if (str === 'true') {\n    return true;\n  }\n  if (str === 'false') {\n    return false;\n  }\n  if (str === undefined || str === 'undefined') {\n    return undefined;\n  }\n  if (str[0] === '[' && str[str.length - 1] === ']') {\n    return str.substring(1, str.length - 1).split(',').map(s => toNativeType(s.trim()));\n  }\n  if (str === '' || Number.isNaN(Number(str))) {\n    return str;\n  }\n  return Number(str);\n}\nfunction extractURLParameters() {\n  let castToNativeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.search;\n  const summary = {};\n  const convert = castToNativeType ? toNativeType : identity;\n  const queryTokens = (query || '').replace(/#.*/, '') // remove hash query\n  .replace('?', '') // Remove ? from the head\n  .split('&'); // extract token pair\n\n  queryTokens.forEach(token => {\n    const [key, value] = token.split('=').map(s => decodeURIComponent(s));\n    if (key) {\n      summary[key] = value ? convert(value) : true;\n    }\n  });\n  return summary;\n}\nvar vtkURLExtract = {\n  toNativeType,\n  extractURLParameters\n};\nexport { vtkURLExtract as default };","map":{"version":3,"names":["identity","i","toNativeType","str","undefined","length","substring","split","map","s","trim","Number","isNaN","extractURLParameters","castToNativeType","arguments","query","window","location","search","summary","convert","queryTokens","replace","forEach","token","key","value","decodeURIComponent","vtkURLExtract","default"],"sources":["C:/Users/Malcolm/my-vtkjs-app/node_modules/@kitware/vtk.js/Common/Core/URLExtract.js"],"sourcesContent":["function identity(i) {\n  return i;\n}\nfunction toNativeType(str) {\n  if (str === null || str === 'null') {\n    return null;\n  }\n  if (str === 'true') {\n    return true;\n  }\n  if (str === 'false') {\n    return false;\n  }\n  if (str === undefined || str === 'undefined') {\n    return undefined;\n  }\n  if (str[0] === '[' && str[str.length - 1] === ']') {\n    return str.substring(1, str.length - 1).split(',').map(s => toNativeType(s.trim()));\n  }\n  if (str === '' || Number.isNaN(Number(str))) {\n    return str;\n  }\n  return Number(str);\n}\nfunction extractURLParameters() {\n  let castToNativeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.search;\n  const summary = {};\n  const convert = castToNativeType ? toNativeType : identity;\n  const queryTokens = (query || '').replace(/#.*/, '') // remove hash query\n  .replace('?', '') // Remove ? from the head\n  .split('&'); // extract token pair\n\n  queryTokens.forEach(token => {\n    const [key, value] = token.split('=').map(s => decodeURIComponent(s));\n    if (key) {\n      summary[key] = value ? convert(value) : true;\n    }\n  });\n  return summary;\n}\nvar vtkURLExtract = {\n  toNativeType,\n  extractURLParameters\n};\n\nexport { vtkURLExtract as default };\n"],"mappings":"AAAA,SAASA,QAAQA,CAACC,CAAC,EAAE;EACnB,OAAOA,CAAC;AACV;AACA,SAASC,YAAYA,CAACC,GAAG,EAAE;EACzB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,MAAM,EAAE;IAClC,OAAO,IAAI;EACb;EACA,IAAIA,GAAG,KAAK,MAAM,EAAE;IAClB,OAAO,IAAI;EACb;EACA,IAAIA,GAAG,KAAK,OAAO,EAAE;IACnB,OAAO,KAAK;EACd;EACA,IAAIA,GAAG,KAAKC,SAAS,IAAID,GAAG,KAAK,WAAW,EAAE;IAC5C,OAAOC,SAAS;EAClB;EACA,IAAID,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,GAAG,CAACA,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;IACjD,OAAOF,GAAG,CAACG,SAAS,CAAC,CAAC,EAAEH,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIP,YAAY,CAACO,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrF;EACA,IAAIP,GAAG,KAAK,EAAE,IAAIQ,MAAM,CAACC,KAAK,CAACD,MAAM,CAACR,GAAG,CAAC,CAAC,EAAE;IAC3C,OAAOA,GAAG;EACZ;EACA,OAAOQ,MAAM,CAACR,GAAG,CAAC;AACpB;AACA,SAASU,oBAAoBA,CAAA,EAAG;EAC9B,IAAIC,gBAAgB,GAAGC,SAAS,CAACV,MAAM,GAAG,CAAC,IAAIU,SAAS,CAAC,CAAC,CAAC,KAAKX,SAAS,GAAGW,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;EAC/F,IAAIC,KAAK,GAAGD,SAAS,CAACV,MAAM,GAAG,CAAC,IAAIU,SAAS,CAAC,CAAC,CAAC,KAAKX,SAAS,GAAGW,SAAS,CAAC,CAAC,CAAC,GAAGE,MAAM,CAACC,QAAQ,CAACC,MAAM;EACtG,MAAMC,OAAO,GAAG,CAAC,CAAC;EAClB,MAAMC,OAAO,GAAGP,gBAAgB,GAAGZ,YAAY,GAAGF,QAAQ;EAC1D,MAAMsB,WAAW,GAAG,CAACN,KAAK,IAAI,EAAE,EAAEO,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EAAA,CACpDA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;EAAA,CACjBhB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEbe,WAAW,CAACE,OAAO,CAACC,KAAK,IAAI;IAC3B,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGF,KAAK,CAAClB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAImB,kBAAkB,CAACnB,CAAC,CAAC,CAAC;IACrE,IAAIiB,GAAG,EAAE;MACPN,OAAO,CAACM,GAAG,CAAC,GAAGC,KAAK,GAAGN,OAAO,CAACM,KAAK,CAAC,GAAG,IAAI;IAC9C;EACF,CAAC,CAAC;EACF,OAAOP,OAAO;AAChB;AACA,IAAIS,aAAa,GAAG;EAClB3B,YAAY;EACZW;AACF,CAAC;AAED,SAASgB,aAAa,IAAIC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}