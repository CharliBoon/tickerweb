{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport axios from 'axios';\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect, watch } from 'vue';\n// vtk\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry'; // geometry rendering for WebGL, WebGPU\nimport '@kitware/vtk.js/Rendering/Profiles/Glyph'; // vtkGlyph3DMapper\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkLookupTable from '@kitware/vtk.js/Common/Core/LookupTable';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkXMLPolyDataReader from '@kitware/vtk.js/IO/XML/XMLPolyDataReader';\nimport vtkGlyph3DMapper from '@kitware/vtk.js/Rendering/Core/Glyph3DMapper';\nimport vtkCubeSource from '@kitware/vtk.js/Filters/Sources/CubeSource';\nimport vtkSphereSource from '@kitware/vtk.js/Filters/Sources/SphereSource';\nexport default {\n  setup() {\n    const vtkContainer = ref(null);\n    const context = ref(null);\n    const events_opacity = ref(50);\n    const events_timestamp = ref(1640995200);\n    const plan_opacity = ref(100);\n    const plan_representation = ref(1);\n    const textEncoder = new TextEncoder();\n    //const path = 'http://localhost:5000';\n    const path = 'http://192.168.0.2:5000';\n\n    // nodes\n    const node_reader = vtkXMLPolyDataReader.newInstance();\n    const node_lut = vtkLookupTable.newInstance();\n    const data = new Uint8Array([0, 255, 0, 255, 255, 165, 80, 255, 255, 0, 0, 255]);\n    const table = vtkDataArray.newInstance({\n      values: data,\n      numberOfComponents: 4\n    });\n    node_lut.setTable(table);\n    const node_glyph = vtkCubeSource.newInstance();\n    const node_mapper = vtkGlyph3DMapper.newInstance();\n    const node_actor = vtkActor.newInstance();\n    //\n    node_mapper.setInputConnection(node_reader.getOutputPort());\n    node_mapper.setSourceConnection(node_glyph.getOutputPort());\n    node_mapper.setScalarModeToUsePointData();\n    node_mapper.setColorByArrayName('alert');\n    node_mapper.setScalarVisibility(true);\n    node_mapper.setScalarRange(1, 3);\n    node_mapper.setLookupTable(node_lut);\n    //node_mapper.setColorByArrayName(\"Scalars\");\n    node_mapper.setColorModeToMapScalars();\n    node_mapper.setScaleFactor(10.0);\n    //node_mapper.setScaleModeToScaleByConstant\n    node_actor.setMapper(node_mapper);\n    //node_actor.getProperty().setAmbient(0.5)\n\n    // plan\n    const plan_reader = vtkXMLPolyDataReader.newInstance();\n    const plan_mapper = vtkMapper.newInstance();\n    const plan_actor = vtkActor.newInstance();\n    //\n    plan_mapper.setInputConnection(plan_reader.getOutputPort());\n    plan_actor.setMapper(plan_mapper);\n    plan_actor.getProperty().setOpacity(0.25);\n\n    // events\n    const events_reader = vtkXMLPolyDataReader.newInstance();\n    const events_glyph = vtkSphereSource.newInstance();\n    const events_mapper = vtkGlyph3DMapper.newInstance();\n    const events_actor = vtkActor.newInstance();\n    //\n    events_glyph.setThetaResolution(20);\n    events_glyph.setPhiResolution(10);\n    events_mapper.setInputConnection(events_reader.getOutputPort());\n    events_mapper.setSourceConnection(events_glyph.getOutputPort());\n    events_mapper.setScaleFactor(100.0);\n    events_mapper.setScaleArray('scale');\n    events_mapper.setScalarVisibility(true);\n    events_mapper.setScalarModeToUsePointData();\n    events_mapper.setColorByArrayName('dtEvent');\n    events_mapper.setScalarRange(1640995200.0, 1656653056.0);\n    events_actor.setMapper(events_mapper);\n    events_actor.getProperty().setOpacity(0.5);\n    function setEventOpacity(opacity) {\n      events_opacity.value = Number(opacity);\n    }\n    function setEventTimeStamp(res) {\n      events_timestamp.value = Number(res);\n    }\n    function setPlanOpacity(opacity) {\n      plan_opacity.value = Number(opacity);\n    }\n    function setRepresentation(rep) {\n      plan_representation.value = Number(rep);\n    }\n    function onEventFilter(timestamp, reset = false) {\n      if (context.value) {\n        const {\n          renderWindow,\n          renderer\n        } = context.value;\n        axios.post(path + '/event_filter', {\n          timestamp: timestamp\n        }).then(function (response_post) {\n          axios.get(path + '/events').then(response_get => {\n            events_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n            //events_reader.update()\n            if (reset) {\n              renderer.resetCamera();\n              console.log('reset');\n            }\n            renderWindow.render();\n            console.log(response_get.data);\n          }).catch(error => {\n            console.error(error);\n          });\n          console.log(response_post);\n        }).catch(function (error) {\n          console.log(error);\n        });\n        renderWindow.render();\n      }\n    }\n    function getNodes(reset = false) {\n      const {\n        renderWindow,\n        renderer\n      } = context.value;\n      axios.get(path + '/nodes').then(response_get => {\n        node_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n        //node_reader.update()\n        if (reset) {\n          renderer.resetCamera();\n        }\n        renderWindow.render();\n        console.log(response_get.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n    function getPlan(reset = false) {\n      const {\n        renderWindow,\n        renderer\n      } = context.value;\n      axios.get(path + '/plan').then(response_get => {\n        plan_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n        //plan_reader.update()\n        if (reset) {\n          renderer.resetCamera();\n        }\n        renderWindow.render();\n        console.log(response_get.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n    function getEvents(reset = false) {\n      const {\n        renderWindow,\n        renderer\n      } = context.value;\n      axios.get(path + '/events').then(response_get => {\n        events_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n        if (reset) {\n          renderer.resetCamera();\n        }\n        renderWindow.render();\n        console.log(response_get.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n    watch(events_timestamp, newValue => {\n      onEventFilter(newValue);\n    });\n    watchEffect(() => {\n      if (context.value) {\n        const {\n          renderWindow\n        } = context.value;\n        plan_actor.getProperty().setOpacity(unref(plan_opacity) * 0.01);\n        plan_actor.getProperty().setRepresentation(unref(plan_representation));\n        events_actor.getProperty().setOpacity(unref(events_opacity) * 0.01);\n        renderWindow.render();\n      }\n    });\n    onMounted(() => {\n      if (!context.value) {\n        const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value\n        });\n        //fullScreenRenderer.setAlphaBitPlanes(1) // depth-peeling\n        //fullScreenRenderer.setMultiSamples(0) // depth-peeling\n\n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n        //\n        renderer.setUseDepthPeeling(true); // depth peeling\n        renderer.setMaximumNumberOfPeels(100); // depth peeling\n        renderer.setOcclusionRatio(0.01); // depth peeling\n        //\n        renderer.addActor(node_actor);\n        renderer.addActor(plan_actor);\n        renderer.addActor(events_actor);\n        context.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          //\n          node_actor,\n          node_mapper,\n          node_reader,\n          node_glyph,\n          //\n          events_actor,\n          events_mapper,\n          events_reader,\n          events_glyph,\n          //\n          plan_reader,\n          plan_mapper,\n          plan_actor\n        };\n\n        // renders as well\n        getNodes();\n        getPlan();\n        getEvents();\n        onEventFilter(unref(events_timestamp), true);\n        renderer.resetCamera();\n        renderWindow.render();\n        renderWindow.render();\n      }\n    });\n\n    //onBeforeUnmount(() => {\n    //  }\n    //);\n\n    onBeforeUnmount(() => {\n      if (context.value) {\n        //const {fullScreenRenderer, actor, mapper } = context.value;\n        const {\n          renderer,\n          renderWindow,\n          fullScreenRenderer,\n          node_reader,\n          node_actor,\n          node_mapper,\n          node_glyph,\n          plan_reader,\n          plan_actor,\n          plan_mapper,\n          events_reader,\n          events_actor,\n          events_mapper,\n          events_glyph\n        } = context.value;\n        plan_actor.delete();\n        plan_mapper.delete();\n        plan_reader.delete();\n        node_actor.delete();\n        node_mapper.delete();\n        node_reader.delete();\n        node_glyph.delete();\n        events_reader.delete();\n        events_actor.delete();\n        events_mapper.delete();\n        events_glyph.delete();\n        //\n        renderer.delete();\n        renderWindow.delete();\n        //\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n    return {\n      vtkContainer,\n      setRepresentation,\n      setEventOpacity,\n      setEventTimeStamp,\n      setPlanOpacity,\n      plan_opacity,\n      plan_representation,\n      events_timestamp,\n      events_opacity,\n      //\n      getNodes,\n      getPlan,\n      getEvents\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","unref","onMounted","onBeforeUnmount","watchEffect","watch","vtkFullScreenRenderWindow","vtkActor","vtkLookupTable","vtkDataArray","vtkMapper","vtkXMLPolyDataReader","vtkGlyph3DMapper","vtkCubeSource","vtkSphereSource","setup","vtkContainer","context","events_opacity","events_timestamp","plan_opacity","plan_representation","textEncoder","TextEncoder","path","node_reader","newInstance","node_lut","data","Uint8Array","table","values","numberOfComponents","setTable","node_glyph","node_mapper","node_actor","setInputConnection","getOutputPort","setSourceConnection","setScalarModeToUsePointData","setColorByArrayName","setScalarVisibility","setScalarRange","setLookupTable","setColorModeToMapScalars","setScaleFactor","setMapper","plan_reader","plan_mapper","plan_actor","getProperty","setOpacity","events_reader","events_glyph","events_mapper","events_actor","setThetaResolution","setPhiResolution","setScaleArray","setEventOpacity","opacity","value","Number","setEventTimeStamp","res","setPlanOpacity","setRepresentation","rep","onEventFilter","timestamp","reset","renderWindow","renderer","post","then","response_post","get","response_get","parseAsArrayBuffer","encode","resetCamera","console","log","render","catch","error","getNodes","getPlan","getEvents","newValue","fullScreenRenderer","rootContainer","getRenderer","getRenderWindow","setUseDepthPeeling","setMaximumNumberOfPeels","setOcclusionRatio","addActor","delete"],"sources":["C:\\Users\\Malcolm\\Projects\\Web\\TickerWeb\\TickerWeb_Vue\\src\\components\\TickerVTK.vue"],"sourcesContent":["<template>\n  <div>\n    <div ref=\"vtkContainer\" />\n    <table class=\"controls\">\n      <tbody>\n        <tr>\n          <td style=\"text-align:left\"><b>Events</b></td>\n          <td style=\"text-align:left\"> </td>\n        </tr>\n        <tr>\n          <td style=\"text-align:left\">TimeStamp</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"1640995200\"\n              max=\"1656653056\"\n              :value=\"events_timestamp\"\n              @input=\"setEventTimeStamp($event.target.value)\"\n            />\n          </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Opacity</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              :value=\"events_opacity\"\n              @input=\"setEventOpacity($event.target.value)\"\n            />\n          </td>\n        </tr>\t\t\n        <tr>\n          <td style=\"text-align:left\"><b>Plan</b></td>\n          <td style=\"text-align:left\"> </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Opacity</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              :value=\"plan_opacity\"\n              @input=\"setPlanOpacity($event.target.value)\"\n            />\n          </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Representation</td>\n          <td>\n            <select\n              style=\"width: 100%\"\n              :value=\"plan_representation\"\n              @change=\"setRepresentation($event.target.value)\"\n            >\n              <option value=\"0\">Points</option>\n              <option value=\"1\">Wireframe</option>\n            </select>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect, watch } from 'vue';\n// vtk\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry'; // geometry rendering for WebGL, WebGPU\nimport '@kitware/vtk.js/Rendering/Profiles/Glyph'; // vtkGlyph3DMapper\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkActor                  from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkLookupTable            from '@kitware/vtk.js/Common/Core/LookupTable';\nimport vtkDataArray              from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkMapper                 from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkXMLPolyDataReader      from '@kitware/vtk.js/IO/XML/XMLPolyDataReader';\nimport vtkGlyph3DMapper          from '@kitware/vtk.js/Rendering/Core/Glyph3DMapper'; \nimport vtkCubeSource             from '@kitware/vtk.js/Filters/Sources/CubeSource';\nimport vtkSphereSource           from '@kitware/vtk.js/Filters/Sources/SphereSource';\n\nexport default {\n\n  setup() {\n  \n    const vtkContainer = ref(null);\n    const context = ref(null);\n    \n\tconst events_opacity      = ref(50);\n    const events_timestamp    = ref(1640995200);\n\tconst plan_opacity        = ref(100);\n    const plan_representation = ref(1);\n\t\n    const textEncoder = new TextEncoder();\n    //const path = 'http://localhost:5000';\n\tconst path = 'http://192.168.0.2:5000';\n    \n\t// nodes\n\tconst node_reader = vtkXMLPolyDataReader.newInstance();\n\tconst node_lut = vtkLookupTable.newInstance();\n    const data = new Uint8Array([0, 255, 0, 255, 255, 165, 80, 255, 255, 0, 0, 255]);\n    const table = vtkDataArray.newInstance({values: data, numberOfComponents: 4});\n    node_lut.setTable(table);\n\n\tconst node_glyph = vtkCubeSource.newInstance();\n\tconst node_mapper = vtkGlyph3DMapper.newInstance();\n\tconst node_actor = vtkActor.newInstance();\n\t//\n\tnode_mapper.setInputConnection(node_reader.getOutputPort());\n\tnode_mapper.setSourceConnection(node_glyph.getOutputPort())\n\tnode_mapper.setScalarModeToUsePointData();\n\tnode_mapper.setColorByArrayName('alert');\n\tnode_mapper.setScalarVisibility(true);\n\tnode_mapper.setScalarRange(1, 3);\n    node_mapper.setLookupTable(node_lut);\n    //node_mapper.setColorByArrayName(\"Scalars\");\n    node_mapper.setColorModeToMapScalars();\n\tnode_mapper.setScaleFactor(10.0);\n\t//node_mapper.setScaleModeToScaleByConstant\n    node_actor.setMapper(node_mapper);\n\t//node_actor.getProperty().setAmbient(0.5)\n\t\n\t// plan\n\tconst plan_reader = vtkXMLPolyDataReader.newInstance();\n\tconst plan_mapper = vtkMapper.newInstance();\n\tconst plan_actor  = vtkActor.newInstance();\n\t//\n\tplan_mapper.setInputConnection(plan_reader.getOutputPort());\n\tplan_actor.setMapper(plan_mapper)\n\tplan_actor.getProperty().setOpacity(0.25)\n\t\n\t// events\n\tconst events_reader = vtkXMLPolyDataReader.newInstance();\n\tconst events_glyph  = vtkSphereSource.newInstance();\n\tconst events_mapper = vtkGlyph3DMapper.newInstance();\n\tconst events_actor  = vtkActor.newInstance();\n\t//\n    events_glyph.setThetaResolution(20)\n    events_glyph.setPhiResolution(10)\n\tevents_mapper.setInputConnection(events_reader.getOutputPort());\n\tevents_mapper.setSourceConnection(events_glyph.getOutputPort())\n\tevents_mapper.setScaleFactor(100.0);\n    events_mapper.setScaleArray('scale');\n\tevents_mapper.setScalarVisibility(true);\n\tevents_mapper.setScalarModeToUsePointData()\n\tevents_mapper.setColorByArrayName('dtEvent');\n\tevents_mapper.setScalarRange(1640995200.0, 1656653056.0)\n\tevents_actor.setMapper(events_mapper)\n\tevents_actor.getProperty().setOpacity(0.5)\n\t\n\t\n\tfunction setEventOpacity(opacity) {\n      events_opacity.value = Number(opacity);\n    }\n\t\n    function setEventTimeStamp(res) {\n      events_timestamp.value = Number(res);\n    }\n\t\n\tfunction setPlanOpacity(opacity) {\n      plan_opacity.value = Number(opacity);\n    }\n\n    function setRepresentation(rep) {\n      plan_representation.value = Number(rep);\n    }\n\t\n\tfunction onEventFilter(timestamp, reset=false) {\n      if (context.value) {\n        const {renderWindow, renderer} = context.value;\n\t\taxios.post(path + '/event_filter',{timestamp: timestamp})\n          .then(function (response_post) {\n            axios.get(path+'/events')\n              .then((response_get) => {\n                events_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n\t\t\t\t//events_reader.update()\n\t\t\t\tif (reset) {\n                  renderer.resetCamera()\n                  console.log('reset')\n                  }\n\t\t\t\trenderWindow.render();\n                console.log(response_get.data)\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n            console.log(response_post);\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n\t\trenderWindow.render();\n      }\n\t}\n\t\n\tfunction getNodes(reset=false) {\n      const {renderWindow, renderer} = context.value;\n      axios.get(path+'/nodes')\n        .then((response_get) => {\n          node_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n          //node_reader.update()\n          if (reset) {\n            renderer.resetCamera()\n            }\n          renderWindow.render();\n          console.log(response_get.data)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n\t\n\tfunction getPlan(reset=false) {\n      const {renderWindow, renderer} = context.value;\n      axios.get(path+'/plan')\n        .then((response_get) => {\n          plan_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n          //plan_reader.update()\n          if (reset) {\n            renderer.resetCamera()\n            }\n          renderWindow.render();\n          console.log(response_get.data)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n\t\n\tfunction getEvents(reset=false) {\n      const {renderWindow, renderer} = context.value;\n      axios.get(path+'/events')\n        .then((response_get) => {\n          events_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n          if (reset) {\n            renderer.resetCamera()\n            }\n          renderWindow.render();\n          console.log(response_get.data)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n\t\n\twatch(events_timestamp, (newValue) => {\n      onEventFilter(newValue)\n\t})\n\n    watchEffect(() => {\n      if (context.value) {\n        const {renderWindow } = context.value;\n\t\tplan_actor.getProperty().setOpacity(unref(plan_opacity)*0.01);\n        plan_actor.getProperty().setRepresentation(unref(plan_representation));\n\t\tevents_actor.getProperty().setOpacity(unref(events_opacity)*0.01);\n\t\trenderWindow.render();\n      }\n    });\n\n    onMounted(() => {\n\t\n      if (!context.value) {\n        const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value,\n          });\n        //fullScreenRenderer.setAlphaBitPlanes(1) // depth-peeling\n        //fullScreenRenderer.setMultiSamples(0) // depth-peeling\n         \n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n\t\t//\n        renderer.setUseDepthPeeling(true) // depth peeling\n        renderer.setMaximumNumberOfPeels(100) // depth peeling\n        renderer.setOcclusionRatio(0.01) // depth peeling\n\t\t//\n\t\trenderer.addActor(node_actor);\n\t\trenderer.addActor(plan_actor);\n\t\trenderer.addActor(events_actor);\n\t\t\n\t\tcontext.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          //\n          node_actor,\n          node_mapper,\n          node_reader,\n          node_glyph,\n          //\n          events_actor,\n          events_mapper,\n          events_reader,\n          events_glyph,\n          //\n          plan_reader,\n          plan_mapper,\n          plan_actor,\n        };\n\t\t\n\t\t// renders as well\n        getNodes();\n        getPlan();\n        getEvents();\n        onEventFilter(unref(events_timestamp), true)\n        renderer.resetCamera();\n        renderWindow.render();\n        renderWindow.render();\t\t\n      }\n    });\n\t\n    //onBeforeUnmount(() => {\n    //  }\n    //);\n\n\tonBeforeUnmount(() => {\n      if (context.value) {\n\t\t//const {fullScreenRenderer, actor, mapper } = context.value;\n        const { renderer, renderWindow, fullScreenRenderer, node_reader, node_actor, node_mapper, node_glyph, plan_reader, plan_actor, plan_mapper, events_reader, events_actor, events_mapper, events_glyph, } = context.value;\n        plan_actor.delete();\n        plan_mapper.delete();\n        plan_reader.delete();\n\t\tnode_actor.delete();\n        node_mapper.delete();\n        node_reader.delete();\n\t\tnode_glyph.delete();\n        events_reader.delete();\n        events_actor.delete();\n        events_mapper.delete();\n        events_glyph.delete();\n        //\n\t\trenderer.delete()\n\t\trenderWindow.delete()\n        //\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n\n    return {\n      vtkContainer,\n      setRepresentation,\n      setEventOpacity,\n      setEventTimeStamp,\n      setPlanOpacity,\n      plan_opacity,\n      plan_representation,\n      events_timestamp,\n      events_opacity,\n      //\n      getNodes,\n      getPlan,\n      getEvents,\n    };\n  }\n}\n</script>\n\n<style scoped>\n.controls {\n  position: absolute;\n  top: 25px;\n  left: 25px;\n  background: white;\n  padding: 12px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}