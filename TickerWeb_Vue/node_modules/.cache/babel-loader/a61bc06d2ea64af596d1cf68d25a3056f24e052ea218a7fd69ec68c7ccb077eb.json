{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\nconst {\n  vtkErrorMacro\n} = macro;\nconst PASS_TYPES = ['Build', 'Render'];\n\n// ----------------------------------------------------------------------------\n// vtkViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewNode');\n\n  // Builds myself.\n  publicAPI.build = prepass => {};\n\n  // Renders myself\n  publicAPI.render = prepass => {};\n  publicAPI.traverse = renderPass => {\n    // we can choose to do special\n    // traversal here based on pass\n    const passTraversal = renderPass.getTraverseOperation();\n    const fn = publicAPI[passTraversal];\n    if (fn) {\n      fn(renderPass);\n      return;\n    }\n\n    // default traversal\n    publicAPI.apply(renderPass, true);\n    for (let index = 0; index < model.children.length; index++) {\n      model.children[index].traverse(renderPass);\n    }\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.apply = (renderPass, prepass) => {\n    const customRenderPass = publicAPI[renderPass.getOperation()];\n    if (customRenderPass) {\n      customRenderPass(prepass, renderPass);\n    }\n  };\n  publicAPI.getViewNodeFor = dataObject => {\n    if (model.renderable === dataObject) {\n      return publicAPI;\n    }\n    for (let index = 0; index < model.children.length; ++index) {\n      const child = model.children[index];\n      const vn = child.getViewNodeFor(dataObject);\n      if (vn) {\n        return vn;\n      }\n    }\n    return undefined;\n  };\n  publicAPI.getFirstAncestorOfType = type => {\n    if (!model._parent) {\n      return null;\n    }\n    if (model._parent.isA(type)) {\n      return model._parent;\n    }\n    return model._parent.getFirstAncestorOfType(type);\n  };\n  publicAPI.getLastAncestorOfType = type => {\n    if (!model._parent) {\n      return null;\n    }\n    const lastAncestor = model._parent.getLastAncestorOfType(type);\n    if (lastAncestor) {\n      return lastAncestor;\n    }\n    if (model._parent.isA(type)) {\n      return model._parent;\n    }\n    return null;\n  };\n\n  // add a missing node/child for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n  publicAPI.addMissingNode = dobj => {\n    if (!dobj) {\n      return undefined;\n    }\n\n    // if found just mark as visited\n    const result = model._renderableChildMap.get(dobj);\n    if (result !== undefined) {\n      result.setVisited(true);\n      return result;\n    }\n\n    // otherwise create a node\n    const newNode = publicAPI.createViewNode(dobj);\n    if (newNode) {\n      newNode.setParent(publicAPI);\n      newNode.setVisited(true);\n      model._renderableChildMap.set(dobj, newNode);\n      model.children.push(newNode);\n      return newNode;\n    }\n    return undefined;\n  };\n\n  // add missing nodes/children for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n  publicAPI.addMissingNodes = dataObjs => {\n    if (!dataObjs || !dataObjs.length) {\n      return;\n    }\n    for (let index = 0; index < dataObjs.length; ++index) {\n      const dobj = dataObjs[index];\n      publicAPI.addMissingNode(dobj);\n    }\n  };\n\n  // ability to add children that have no renderable use in the same manner\n  // as addMissingNodes This case is when a normal viewnode wants to\n  // delegate passes to a helper or child that doeasn't map to a clear\n  // renderable or any renderable\n  publicAPI.addMissingChildren = children => {\n    if (!children || !children.length) {\n      return;\n    }\n    for (let index = 0; index < children.length; ++index) {\n      const child = children[index];\n      const cindex = model.children.indexOf(child);\n      if (cindex === -1) {\n        child.setParent(publicAPI);\n        model.children.push(child);\n        const childRenderable = child.getRenderable();\n        if (childRenderable) {\n          model._renderableChildMap.set(childRenderable, child);\n        }\n      }\n      child.setVisited(true);\n    }\n  };\n  publicAPI.removeNode = child => {\n    const childIdx = model.children.findIndex(x => x === child);\n    if (childIdx < 0) {\n      return false;\n    }\n    const renderable = child.getRenderable();\n    if (renderable) {\n      model._renderableChildMap.delete(renderable);\n    }\n    child.delete();\n    model.children.splice(childIdx, 1);\n    return true;\n  };\n  publicAPI.prepareNodes = () => {\n    for (let index = 0; index < model.children.length; ++index) {\n      model.children[index].setVisited(false);\n    }\n  };\n  publicAPI.setVisited = val => {\n    model.visited = val;\n  };\n  publicAPI.removeUnusedNodes = () => {\n    let visitedCount = 0;\n    for (let index = 0; index < model.children.length; ++index) {\n      const child = model.children[index];\n      const visited = child.getVisited();\n      if (visited) {\n        model.children[visitedCount++] = child;\n        child.setVisited(false);\n      } else {\n        const renderable = child.getRenderable();\n        if (renderable) {\n          model._renderableChildMap.delete(renderable);\n        }\n        child.delete();\n      }\n    }\n    model.children.length = visitedCount;\n  };\n  publicAPI.createViewNode = dataObj => {\n    if (!model.myFactory) {\n      vtkErrorMacro('Cannot create view nodes without my own factory');\n      return null;\n    }\n    const ret = model.myFactory.createNode(dataObj);\n    if (ret) {\n      ret.setRenderable(dataObj);\n    }\n    return ret;\n  };\n  const parentDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    for (let i = 0; i < model.children.length; i++) {\n      model.children[i].delete();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // _parent: null,\n  renderable: null,\n  myFactory: null,\n  children: [],\n  visited: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  model._renderableChildMap = new Map();\n  macro.get(publicAPI, model, ['visited']);\n  macro.setGet(publicAPI, model, ['_parent', 'renderable', 'myFactory']);\n  macro.getArray(publicAPI, model, ['children']);\n  macro.moveToProtected(publicAPI, model, ['parent']);\n\n  // Object methods\n  vtkViewNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkViewNode');\n\n// ----------------------------------------------------------------------------\n\nvar vtkViewNode$1 = {\n  newInstance,\n  extend,\n  PASS_TYPES\n};\nexport { vtkViewNode$1 as default };","map":{"version":3,"names":["m","macro","vtkErrorMacro","PASS_TYPES","vtkViewNode","publicAPI","model","classHierarchy","push","build","prepass","render","traverse","renderPass","passTraversal","getTraverseOperation","fn","apply","index","children","length","customRenderPass","getOperation","getViewNodeFor","dataObject","renderable","child","vn","undefined","getFirstAncestorOfType","type","_parent","isA","getLastAncestorOfType","lastAncestor","addMissingNode","dobj","result","_renderableChildMap","get","setVisited","newNode","createViewNode","setParent","set","addMissingNodes","dataObjs","addMissingChildren","cindex","indexOf","childRenderable","getRenderable","removeNode","childIdx","findIndex","x","delete","splice","prepareNodes","val","visited","removeUnusedNodes","visitedCount","getVisited","dataObj","myFactory","ret","createNode","setRenderable","parentDelete","i","DEFAULT_VALUES","extend","initialValues","arguments","Object","assign","obj","event","Map","setGet","getArray","moveToProtected","newInstance","vtkViewNode$1","default"],"sources":["C:/Users/Malcolm/Projects/Web/TickerWeb/node_modules/@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nconst PASS_TYPES = ['Build', 'Render'];\n\n// ----------------------------------------------------------------------------\n// vtkViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewNode');\n\n  // Builds myself.\n  publicAPI.build = prepass => {};\n\n  // Renders myself\n  publicAPI.render = prepass => {};\n  publicAPI.traverse = renderPass => {\n    // we can choose to do special\n    // traversal here based on pass\n    const passTraversal = renderPass.getTraverseOperation();\n    const fn = publicAPI[passTraversal];\n    if (fn) {\n      fn(renderPass);\n      return;\n    }\n\n    // default traversal\n    publicAPI.apply(renderPass, true);\n    for (let index = 0; index < model.children.length; index++) {\n      model.children[index].traverse(renderPass);\n    }\n    publicAPI.apply(renderPass, false);\n  };\n  publicAPI.apply = (renderPass, prepass) => {\n    const customRenderPass = publicAPI[renderPass.getOperation()];\n    if (customRenderPass) {\n      customRenderPass(prepass, renderPass);\n    }\n  };\n  publicAPI.getViewNodeFor = dataObject => {\n    if (model.renderable === dataObject) {\n      return publicAPI;\n    }\n    for (let index = 0; index < model.children.length; ++index) {\n      const child = model.children[index];\n      const vn = child.getViewNodeFor(dataObject);\n      if (vn) {\n        return vn;\n      }\n    }\n    return undefined;\n  };\n  publicAPI.getFirstAncestorOfType = type => {\n    if (!model._parent) {\n      return null;\n    }\n    if (model._parent.isA(type)) {\n      return model._parent;\n    }\n    return model._parent.getFirstAncestorOfType(type);\n  };\n  publicAPI.getLastAncestorOfType = type => {\n    if (!model._parent) {\n      return null;\n    }\n    const lastAncestor = model._parent.getLastAncestorOfType(type);\n    if (lastAncestor) {\n      return lastAncestor;\n    }\n    if (model._parent.isA(type)) {\n      return model._parent;\n    }\n    return null;\n  };\n\n  // add a missing node/child for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n  publicAPI.addMissingNode = dobj => {\n    if (!dobj) {\n      return undefined;\n    }\n\n    // if found just mark as visited\n    const result = model._renderableChildMap.get(dobj);\n    if (result !== undefined) {\n      result.setVisited(true);\n      return result;\n    }\n\n    // otherwise create a node\n    const newNode = publicAPI.createViewNode(dobj);\n    if (newNode) {\n      newNode.setParent(publicAPI);\n      newNode.setVisited(true);\n      model._renderableChildMap.set(dobj, newNode);\n      model.children.push(newNode);\n      return newNode;\n    }\n    return undefined;\n  };\n\n  // add missing nodes/children for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n  publicAPI.addMissingNodes = dataObjs => {\n    if (!dataObjs || !dataObjs.length) {\n      return;\n    }\n    for (let index = 0; index < dataObjs.length; ++index) {\n      const dobj = dataObjs[index];\n      publicAPI.addMissingNode(dobj);\n    }\n  };\n\n  // ability to add children that have no renderable use in the same manner\n  // as addMissingNodes This case is when a normal viewnode wants to\n  // delegate passes to a helper or child that doeasn't map to a clear\n  // renderable or any renderable\n  publicAPI.addMissingChildren = children => {\n    if (!children || !children.length) {\n      return;\n    }\n    for (let index = 0; index < children.length; ++index) {\n      const child = children[index];\n      const cindex = model.children.indexOf(child);\n      if (cindex === -1) {\n        child.setParent(publicAPI);\n        model.children.push(child);\n        const childRenderable = child.getRenderable();\n        if (childRenderable) {\n          model._renderableChildMap.set(childRenderable, child);\n        }\n      }\n      child.setVisited(true);\n    }\n  };\n  publicAPI.removeNode = child => {\n    const childIdx = model.children.findIndex(x => x === child);\n    if (childIdx < 0) {\n      return false;\n    }\n    const renderable = child.getRenderable();\n    if (renderable) {\n      model._renderableChildMap.delete(renderable);\n    }\n    child.delete();\n    model.children.splice(childIdx, 1);\n    return true;\n  };\n  publicAPI.prepareNodes = () => {\n    for (let index = 0; index < model.children.length; ++index) {\n      model.children[index].setVisited(false);\n    }\n  };\n  publicAPI.setVisited = val => {\n    model.visited = val;\n  };\n  publicAPI.removeUnusedNodes = () => {\n    let visitedCount = 0;\n    for (let index = 0; index < model.children.length; ++index) {\n      const child = model.children[index];\n      const visited = child.getVisited();\n      if (visited) {\n        model.children[visitedCount++] = child;\n        child.setVisited(false);\n      } else {\n        const renderable = child.getRenderable();\n        if (renderable) {\n          model._renderableChildMap.delete(renderable);\n        }\n        child.delete();\n      }\n    }\n    model.children.length = visitedCount;\n  };\n  publicAPI.createViewNode = dataObj => {\n    if (!model.myFactory) {\n      vtkErrorMacro('Cannot create view nodes without my own factory');\n      return null;\n    }\n    const ret = model.myFactory.createNode(dataObj);\n    if (ret) {\n      ret.setRenderable(dataObj);\n    }\n    return ret;\n  };\n  const parentDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    for (let i = 0; i < model.children.length; i++) {\n      model.children[i].delete();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // _parent: null,\n  renderable: null,\n  myFactory: null,\n  children: [],\n  visited: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  model._renderableChildMap = new Map();\n  macro.get(publicAPI, model, ['visited']);\n  macro.setGet(publicAPI, model, ['_parent', 'renderable', 'myFactory']);\n  macro.getArray(publicAPI, model, ['children']);\n  macro.moveToProtected(publicAPI, model, ['parent']);\n\n  // Object methods\n  vtkViewNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkViewNode');\n\n// ----------------------------------------------------------------------------\n\nvar vtkViewNode$1 = {\n  newInstance,\n  extend,\n  PASS_TYPES\n};\n\nexport { vtkViewNode$1 as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}