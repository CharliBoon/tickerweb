{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkCompositeCameraManipulator from './CompositeCameraManipulator.js';\nimport vtkCompositeMouseManipulator from './CompositeMouseManipulator.js';\nimport { w as multiplyScalar, d as dot, k as add, r as radiansFromDegrees, j as cross } from '../../Common/Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkMouseCameraTrackballRotateManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMouseCameraTrackballRotateManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMouseCameraTrackballRotateManipulator');\n  const newCamPos = new Float64Array(3);\n  const newFp = new Float64Array(3);\n  const newViewUp = new Float64Array(3);\n  const trans = new Float64Array(16);\n  const v2 = new Float64Array(3);\n  const centerNeg = new Float64Array(3);\n  const direction = new Float64Array(3);\n  publicAPI.onButtonDown = (interactor, renderer, position) => {\n    model.previousPosition = position;\n  };\n  publicAPI.onMouseMove = (interactor, renderer, position) => {\n    if (!position) {\n      return;\n    }\n    const camera = renderer.getActiveCamera();\n    const cameraPos = camera.getPosition();\n    const cameraFp = camera.getFocalPoint();\n    mat4.identity(trans);\n    const {\n      center,\n      rotationFactor\n    } = model;\n    if (model.useFocalPointAsCenterOfRotation) {\n      center[0] = cameraFp[0];\n      center[1] = cameraFp[1];\n      center[2] = cameraFp[2];\n    }\n    const dx = model.previousPosition.x - position.x;\n    const dy = model.previousPosition.y - position.y;\n    const size = interactor.getView().getViewportSize(renderer);\n\n    // Azimuth\n    const viewUp = camera.getViewUp();\n    if (model.useWorldUpVec) {\n      const centerOfRotation = new Float64Array(3);\n      vec3.copy(centerOfRotation, model.worldUpVec);\n\n      // Compute projection of cameraPos onto worldUpVec\n      multiplyScalar(centerOfRotation, dot(cameraPos, model.worldUpVec) / dot(model.worldUpVec, model.worldUpVec));\n      add(center, centerOfRotation, centerOfRotation);\n      mat4.translate(trans, trans, centerOfRotation);\n      mat4.rotate(trans, trans, radiansFromDegrees(360.0 * dx / size[0] * rotationFactor), model.worldUpVec);\n\n      // Translate back\n      centerOfRotation[0] = -centerOfRotation[0];\n      centerOfRotation[1] = -centerOfRotation[1];\n      centerOfRotation[2] = -centerOfRotation[2];\n      mat4.translate(trans, trans, centerOfRotation);\n      mat4.translate(trans, trans, center);\n    } else {\n      mat4.translate(trans, trans, center);\n      mat4.rotate(trans, trans, radiansFromDegrees(360.0 * dx / size[0] * rotationFactor), viewUp);\n    }\n\n    // Elevation\n    cross(camera.getDirectionOfProjection(), viewUp, v2);\n    mat4.rotate(trans, trans, radiansFromDegrees(-360.0 * dy / size[1] * rotationFactor), v2);\n\n    // Translate back\n    centerNeg[0] = -center[0];\n    centerNeg[1] = -center[1];\n    centerNeg[2] = -center[2];\n    mat4.translate(trans, trans, centerNeg);\n\n    // Apply transformation to camera position, focal point, and view up\n    vec3.transformMat4(newCamPos, cameraPos, trans);\n    vec3.transformMat4(newFp, cameraFp, trans);\n    direction[0] = viewUp[0] + cameraPos[0];\n    direction[1] = viewUp[1] + cameraPos[1];\n    direction[2] = viewUp[2] + cameraPos[2];\n    vec3.transformMat4(newViewUp, direction, trans);\n    camera.setPosition(newCamPos[0], newCamPos[1], newCamPos[2]);\n    camera.setFocalPoint(newFp[0], newFp[1], newFp[2]);\n    camera.setViewUp(newViewUp[0] - newCamPos[0], newViewUp[1] - newCamPos[1], newViewUp[2] - newCamPos[2]);\n    camera.orthogonalizeViewUp();\n    renderer.resetCameraClippingRange();\n    if (interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n    model.previousPosition = position;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  useWorldUpVec: false,\n  // set WorldUpVector to be y-axis by default\n  worldUpVec: [0, 1, 0],\n  useFocalPointAsCenterOfRotation: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  vtkCompositeMouseManipulator.extend(publicAPI, model, initialValues);\n  vtkCompositeCameraManipulator.extend(publicAPI, model, initialValues);\n\n  // Create get-set macro\n  macro.setGet(publicAPI, model, ['useWorldUpVec']);\n  macro.setGetArray(publicAPI, model, ['worldUpVec'], 3);\n  macro.setGet(publicAPI, model, ['useFocalPointAsCenterOfRotation']);\n\n  // Object specific methods\n  vtkMouseCameraTrackballRotateManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMouseCameraTrackballRotateManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMouseCameraTrackballRotateManipulator$1 = {\n  newInstance,\n  extend\n};\nexport { vtkMouseCameraTrackballRotateManipulator$1 as default, extend, newInstance };","map":{"version":3,"names":["mat4","vec3","m","macro","vtkCompositeCameraManipulator","vtkCompositeMouseManipulator","w","multiplyScalar","d","dot","k","add","r","radiansFromDegrees","j","cross","vtkMouseCameraTrackballRotateManipulator","publicAPI","model","classHierarchy","push","newCamPos","Float64Array","newFp","newViewUp","trans","v2","centerNeg","direction","onButtonDown","interactor","renderer","position","previousPosition","onMouseMove","camera","getActiveCamera","cameraPos","getPosition","cameraFp","getFocalPoint","identity","center","rotationFactor","useFocalPointAsCenterOfRotation","dx","x","dy","y","size","getView","getViewportSize","viewUp","getViewUp","useWorldUpVec","centerOfRotation","copy","worldUpVec","translate","rotate","getDirectionOfProjection","transformMat4","setPosition","setFocalPoint","setViewUp","orthogonalizeViewUp","resetCameraClippingRange","getLightFollowCamera","updateLightsGeometryToFollowCamera","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","setGet","setGetArray","newInstance","vtkMouseCameraTrackballRotateManipulator$1","default"],"sources":["/home/ims/VSCodeProjects/TickerWeb/TickerWeb_Vue/node_modules/@kitware/vtk.js/Interaction/Manipulators/MouseCameraTrackballRotateManipulator.js"],"sourcesContent":["import { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkCompositeCameraManipulator from './CompositeCameraManipulator.js';\nimport vtkCompositeMouseManipulator from './CompositeMouseManipulator.js';\nimport { w as multiplyScalar, d as dot, k as add, r as radiansFromDegrees, j as cross } from '../../Common/Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkMouseCameraTrackballRotateManipulator methods\n// ----------------------------------------------------------------------------\n\nfunction vtkMouseCameraTrackballRotateManipulator(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkMouseCameraTrackballRotateManipulator');\n  const newCamPos = new Float64Array(3);\n  const newFp = new Float64Array(3);\n  const newViewUp = new Float64Array(3);\n  const trans = new Float64Array(16);\n  const v2 = new Float64Array(3);\n  const centerNeg = new Float64Array(3);\n  const direction = new Float64Array(3);\n  publicAPI.onButtonDown = (interactor, renderer, position) => {\n    model.previousPosition = position;\n  };\n  publicAPI.onMouseMove = (interactor, renderer, position) => {\n    if (!position) {\n      return;\n    }\n    const camera = renderer.getActiveCamera();\n    const cameraPos = camera.getPosition();\n    const cameraFp = camera.getFocalPoint();\n    mat4.identity(trans);\n    const {\n      center,\n      rotationFactor\n    } = model;\n    if (model.useFocalPointAsCenterOfRotation) {\n      center[0] = cameraFp[0];\n      center[1] = cameraFp[1];\n      center[2] = cameraFp[2];\n    }\n    const dx = model.previousPosition.x - position.x;\n    const dy = model.previousPosition.y - position.y;\n    const size = interactor.getView().getViewportSize(renderer);\n\n    // Azimuth\n    const viewUp = camera.getViewUp();\n    if (model.useWorldUpVec) {\n      const centerOfRotation = new Float64Array(3);\n      vec3.copy(centerOfRotation, model.worldUpVec);\n\n      // Compute projection of cameraPos onto worldUpVec\n      multiplyScalar(centerOfRotation, dot(cameraPos, model.worldUpVec) / dot(model.worldUpVec, model.worldUpVec));\n      add(center, centerOfRotation, centerOfRotation);\n      mat4.translate(trans, trans, centerOfRotation);\n      mat4.rotate(trans, trans, radiansFromDegrees(360.0 * dx / size[0] * rotationFactor), model.worldUpVec);\n\n      // Translate back\n      centerOfRotation[0] = -centerOfRotation[0];\n      centerOfRotation[1] = -centerOfRotation[1];\n      centerOfRotation[2] = -centerOfRotation[2];\n      mat4.translate(trans, trans, centerOfRotation);\n      mat4.translate(trans, trans, center);\n    } else {\n      mat4.translate(trans, trans, center);\n      mat4.rotate(trans, trans, radiansFromDegrees(360.0 * dx / size[0] * rotationFactor), viewUp);\n    }\n\n    // Elevation\n    cross(camera.getDirectionOfProjection(), viewUp, v2);\n    mat4.rotate(trans, trans, radiansFromDegrees(-360.0 * dy / size[1] * rotationFactor), v2);\n\n    // Translate back\n    centerNeg[0] = -center[0];\n    centerNeg[1] = -center[1];\n    centerNeg[2] = -center[2];\n    mat4.translate(trans, trans, centerNeg);\n\n    // Apply transformation to camera position, focal point, and view up\n    vec3.transformMat4(newCamPos, cameraPos, trans);\n    vec3.transformMat4(newFp, cameraFp, trans);\n    direction[0] = viewUp[0] + cameraPos[0];\n    direction[1] = viewUp[1] + cameraPos[1];\n    direction[2] = viewUp[2] + cameraPos[2];\n    vec3.transformMat4(newViewUp, direction, trans);\n    camera.setPosition(newCamPos[0], newCamPos[1], newCamPos[2]);\n    camera.setFocalPoint(newFp[0], newFp[1], newFp[2]);\n    camera.setViewUp(newViewUp[0] - newCamPos[0], newViewUp[1] - newCamPos[1], newViewUp[2] - newCamPos[2]);\n    camera.orthogonalizeViewUp();\n    renderer.resetCameraClippingRange();\n    if (interactor.getLightFollowCamera()) {\n      renderer.updateLightsGeometryToFollowCamera();\n    }\n    model.previousPosition = position;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  useWorldUpVec: false,\n  // set WorldUpVector to be y-axis by default\n  worldUpVec: [0, 1, 0],\n  useFocalPointAsCenterOfRotation: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n  vtkCompositeMouseManipulator.extend(publicAPI, model, initialValues);\n  vtkCompositeCameraManipulator.extend(publicAPI, model, initialValues);\n\n  // Create get-set macro\n  macro.setGet(publicAPI, model, ['useWorldUpVec']);\n  macro.setGetArray(publicAPI, model, ['worldUpVec'], 3);\n  macro.setGet(publicAPI, model, ['useFocalPointAsCenterOfRotation']);\n\n  // Object specific methods\n  vtkMouseCameraTrackballRotateManipulator(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkMouseCameraTrackballRotateManipulator');\n\n// ----------------------------------------------------------------------------\n\nvar vtkMouseCameraTrackballRotateManipulator$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkMouseCameraTrackballRotateManipulator$1 as default, extend, newInstance };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}