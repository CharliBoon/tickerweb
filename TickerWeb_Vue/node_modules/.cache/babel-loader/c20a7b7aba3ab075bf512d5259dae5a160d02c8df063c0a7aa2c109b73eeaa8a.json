{"ast":null,"code":"import axios from 'axios';\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect } from 'vue';\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry';\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkConeSource from '@kitware/vtk.js/Filters/Sources/ConeSource';\nexport default {\n  name: 'TickerVTK',\n  setup() {\n    const vtkContainer = ref(null);\n    const context = ref(null);\n    const coneResolution = ref(6);\n    const representation = ref(2);\n    function setConeResolution(res) {\n      coneResolution.value = Number(res);\n    }\n    function setRepresentation(rep) {\n      representation.value = Number(rep);\n    }\n    watchEffect(() => {\n      const res = unref(coneResolution);\n      const rep = unref(representation);\n      if (context.value) {\n        const {\n          actor,\n          coneSource,\n          renderWindow\n        } = context.value;\n        coneSource.setResolution(res);\n        actor.getProperty().setRepresentation(rep);\n        renderWindow.render();\n      }\n    });\n    onMounted(() => {\n      const path = 'http://localhost:5000/hello';\n      axios.get(path);\n      if (!context.value) {\n        const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value\n        });\n        const coneSource = vtkConeSource.newInstance({\n          height: 1.0\n        });\n        const mapper = vtkMapper.newInstance();\n        mapper.setInputConnection(coneSource.getOutputPort());\n        const actor = vtkActor.newInstance();\n        actor.setMapper(mapper);\n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n        renderer.addActor(actor);\n        renderer.resetCamera();\n        renderWindow.render();\n        context.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          coneSource,\n          actor,\n          mapper\n        };\n      }\n    });\n    onBeforeUnmount(() => {\n      if (context.value) {\n        const {\n          fullScreenRenderer,\n          coneSource,\n          actor,\n          mapper\n        } = context.value;\n        //const { renderer, renderWindow, fullScreenRenderer, coneSource, actor, mapper } = context.value;\n        actor.delete();\n        mapper.delete();\n        coneSource.delete();\n\n        //renderer.delete()\n        //renderWindow.delete()\n\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n    return {\n      vtkContainer,\n      setRepresentation,\n      setConeResolution,\n      coneResolution,\n      representation\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","unref","onMounted","onBeforeUnmount","watchEffect","vtkFullScreenRenderWindow","vtkActor","vtkMapper","vtkConeSource","name","setup","vtkContainer","context","coneResolution","representation","setConeResolution","res","value","Number","setRepresentation","rep","actor","coneSource","renderWindow","setResolution","getProperty","render","path","get","fullScreenRenderer","newInstance","rootContainer","height","mapper","setInputConnection","getOutputPort","setMapper","renderer","getRenderer","getRenderWindow","addActor","resetCamera","delete"],"sources":["C:\\Users\\Malcolm\\Projects\\Web\\TickerWeb\\src\\components\\TickerVTK.vue"],"sourcesContent":["<template>\n  <div>\n    <div ref=\"vtkContainer\" />\n    <table class=\"controls\">\n      <tbody>\n        <tr>\n          <td>\n            <select\n              style=\"width: 100%\"\n              :value=\"representation\"\n              @change=\"setRepresentation($event.target.value)\"\n            >\n              <option value=\"0\">Points</option>\n              <option value=\"1\">Wireframe</option>\n              <option value=\"2\">Surface</option>\n            </select>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <input\n              type=\"range\"\n              min=\"4\"\n              max=\"80\"\n              :value=\"coneResolution\"\n              @input=\"setConeResolution($event.target.value)\"\n            />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect } from 'vue';\n\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry';\n\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\n\nimport vtkActor           from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkMapper          from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkConeSource      from '@kitware/vtk.js/Filters/Sources/ConeSource';\n\nexport default {\n  name: 'TickerVTK',\n\n  setup() {\n    const vtkContainer = ref(null);\n    const context = ref(null);\n    const coneResolution = ref(6);\n    const representation = ref(2);\n\n    function setConeResolution(res) {\n      coneResolution.value = Number(res);\n    }\n\n    function setRepresentation(rep) {\n      representation.value = Number(rep);\n    }\n\n    watchEffect(() => {\n      const res = unref(coneResolution);\n      const rep = unref(representation);\n      if (context.value) {\n        const { actor, coneSource, renderWindow } = context.value;\n        coneSource.setResolution(res);\n        actor.getProperty().setRepresentation(rep);\n        renderWindow.render();\n      }\n    });\n\n    onMounted(() => {\n\t\n\t  const path = 'http://localhost:5000/hello';\n      axios.get(path)\n\t\n      if (!context.value) {\n        const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value,\n        });\n        const coneSource = vtkConeSource.newInstance({ height: 1.0 });\n\n        const mapper = vtkMapper.newInstance();\n        mapper.setInputConnection(coneSource.getOutputPort());\n\n        const actor = vtkActor.newInstance();\n        actor.setMapper(mapper);\n\n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n\n        renderer.addActor(actor);\n        renderer.resetCamera();\n        renderWindow.render();\n\n        context.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          coneSource,\n          actor,\n          mapper,\n        };\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (context.value) {\n\t\tconst {fullScreenRenderer, coneSource, actor, mapper } = context.value;\n        //const { renderer, renderWindow, fullScreenRenderer, coneSource, actor, mapper } = context.value;\n        actor.delete();\n        mapper.delete();\n        coneSource.delete();\n\t\t\n\t\t//renderer.delete()\n\t\t//renderWindow.delete()\n\t\t\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n\n    return {\n      vtkContainer,\n      setRepresentation,\n      setConeResolution,\n      coneResolution,\n      representation,\n    };\n  }\n}\n</script>\n\n<style scoped>\n.controls {\n  position: absolute;\n  top: 25px;\n  left: 25px;\n  background: white;\n  padding: 12px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}