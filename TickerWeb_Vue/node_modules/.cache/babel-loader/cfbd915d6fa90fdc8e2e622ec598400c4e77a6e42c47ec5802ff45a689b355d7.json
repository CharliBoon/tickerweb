{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { mat4, quat } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport { A as degreesFromRadians, r as radiansFromDegrees, a as areMatricesEqual } from '../../Common/Core/Math/index.js';\nimport vtkProp from './Prop.js';\nconst VTK_EPSILON = 1e-6;\n\n// ----------------------------------------------------------------------------\n// vtkProp3D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp3D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp3D');\n  publicAPI.addPosition = deltaXYZ => {\n    model.position = model.position.map((value, index) => value + deltaXYZ[index]);\n    publicAPI.modified();\n  };\n  publicAPI.getOrientationWXYZ = () => {\n    const q = quat.create();\n    mat4.getRotation(q, model.rotation);\n    const oaxis = new Float64Array(3);\n    const w = quat.getAxisAngle(oaxis, q);\n    return [degreesFromRadians(w), oaxis[0], oaxis[1], oaxis[2]];\n  };\n  publicAPI.getOrientationQuaternion = function () {\n    let out = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return mat4.getRotation(out, model.rotation);\n  };\n  publicAPI.rotateX = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateX(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateY = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateY(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateZ = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateZ(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateWXYZ = (degrees, x, y, z) => {\n    if (degrees === 0.0 || x === 0.0 && y === 0.0 && z === 0.0) {\n      return;\n    }\n\n    // convert to radians\n    const angle = radiansFromDegrees(degrees);\n    const q = quat.create();\n    quat.setAxisAngle(q, [x, y, z], angle);\n    const quatMat = new Float64Array(16);\n    mat4.fromQuat(quatMat, q);\n    mat4.multiply(model.rotation, model.rotation, quatMat);\n    publicAPI.modified();\n  };\n  publicAPI.rotateQuaternion = orientationQuaternion => {\n    if (Math.abs(orientationQuaternion[3]) >= 1 - VTK_EPSILON) {\n      return;\n    }\n    const oriQuatMat = mat4.fromQuat(new Float64Array(16), orientationQuaternion);\n    mat4.multiply(model.rotation, model.rotation, oriQuatMat);\n    publicAPI.modified();\n  };\n  publicAPI.setOrientation = (x, y, z) => {\n    if (x === model.orientation[0] && y === model.orientation[1] && z === model.orientation[2]) {\n      return false;\n    }\n    model.orientation = [x, y, z];\n    mat4.identity(model.rotation);\n    publicAPI.rotateZ(z);\n    publicAPI.rotateX(x);\n    publicAPI.rotateY(y);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.setUserMatrix = matrix => {\n    if (areMatricesEqual(model.userMatrix, matrix)) {\n      return false;\n    }\n    mat4.copy(model.userMatrix, matrix);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.getMatrix = () => {\n    publicAPI.computeMatrix();\n    return model.matrix;\n  };\n  publicAPI.computeMatrix = () => {\n    // check whether or not need to rebuild the matrix\n    if (publicAPI.getMTime() > model.matrixMTime.getMTime()) {\n      mat4.identity(model.matrix);\n      if (model.userMatrix) {\n        mat4.multiply(model.matrix, model.matrix, model.userMatrix);\n      }\n      mat4.translate(model.matrix, model.matrix, model.origin);\n      mat4.translate(model.matrix, model.matrix, model.position);\n      mat4.multiply(model.matrix, model.matrix, model.rotation);\n      mat4.scale(model.matrix, model.matrix, model.scale);\n      mat4.translate(model.matrix, model.matrix, [-model.origin[0], -model.origin[1], -model.origin[2]]);\n      mat4.transpose(model.matrix, model.matrix);\n\n      // check for identity\n      model.isIdentity = true;\n      for (let i = 0; i < 4; ++i) {\n        for (let j = 0; j < 4; ++j) {\n          if ((i === j ? 1.0 : 0.0) !== model.matrix[i + j * 4]) {\n            model.isIdentity = false;\n          }\n        }\n      }\n      model.matrixMTime.modified();\n    }\n  };\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(model.bounds);\n  publicAPI.getLength = () => vtkBoundingBox.getLength(model.bounds);\n  publicAPI.getXRange = () => vtkBoundingBox.getXRange(model.bounds);\n  publicAPI.getYRange = () => vtkBoundingBox.getYRange(model.bounds);\n  publicAPI.getZRange = () => vtkBoundingBox.getZRange(model.bounds);\n  publicAPI.getUserMatrix = () => model.userMatrix;\n  function updateIdentityFlag() {\n    publicAPI.computeMatrix();\n  }\n  publicAPI.onModified(updateIdentityFlag);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  origin: [0, 0, 0],\n  position: [0, 0, 0],\n  orientation: [0, 0, 0],\n  rotation: null,\n  scale: [1, 1, 1],\n  bounds: [1, -1, 1, -1, 1, -1],\n  userMatrix: null,\n  userMatrixMTime: null,\n  cachedProp3D: null,\n  isIdentity: true,\n  matrixMTime: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp.extend(publicAPI, model, initialValues);\n  model.matrixMTime = {};\n  macro.obj(model.matrixMTime);\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['bounds', 'isIdentity']);\n  macro.getArray(publicAPI, model, ['orientation']);\n  macro.setGetArray(publicAPI, model, ['origin', 'position', 'scale'], 3);\n\n  // Object internal instance\n  model.matrix = mat4.identity(new Float64Array(16));\n  model.rotation = mat4.identity(new Float64Array(16));\n  model.userMatrix = mat4.identity(new Float64Array(16));\n  model.transform = null; // FIXME\n\n  // Object methods\n  vtkProp3D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkProp3D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkProp3D$1 = {\n  newInstance,\n  extend\n};\nexport { vtkProp3D$1 as default, extend, newInstance };","map":{"version":3,"names":["mat4","quat","m","macro","vtkBoundingBox","A","degreesFromRadians","r","radiansFromDegrees","a","areMatricesEqual","vtkProp","VTK_EPSILON","vtkProp3D","publicAPI","model","classHierarchy","push","addPosition","deltaXYZ","position","map","value","index","modified","getOrientationWXYZ","q","create","getRotation","rotation","oaxis","Float64Array","w","getAxisAngle","getOrientationQuaternion","out","arguments","length","undefined","rotateX","val","rotateY","rotateZ","rotateWXYZ","degrees","x","y","z","angle","setAxisAngle","quatMat","fromQuat","multiply","rotateQuaternion","orientationQuaternion","Math","abs","oriQuatMat","setOrientation","orientation","identity","setUserMatrix","matrix","userMatrix","copy","getMatrix","computeMatrix","getMTime","matrixMTime","translate","origin","scale","transpose","isIdentity","i","j","getCenter","bounds","getLength","getXRange","getYRange","getZRange","getUserMatrix","updateIdentityFlag","onModified","DEFAULT_VALUES","userMatrixMTime","cachedProp3D","extend","initialValues","Object","assign","obj","get","getArray","setGetArray","transform","newInstance","vtkProp3D$1","default"],"sources":["C:/Users/Malcolm/Projects/Web/my-vtkjs-app/node_modules/@kitware/vtk.js/Rendering/Core/Prop3D.js"],"sourcesContent":["import { mat4, quat } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport { A as degreesFromRadians, r as radiansFromDegrees, a as areMatricesEqual } from '../../Common/Core/Math/index.js';\nimport vtkProp from './Prop.js';\n\nconst VTK_EPSILON = 1e-6;\n\n// ----------------------------------------------------------------------------\n// vtkProp3D methods\n// ----------------------------------------------------------------------------\n\nfunction vtkProp3D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkProp3D');\n  publicAPI.addPosition = deltaXYZ => {\n    model.position = model.position.map((value, index) => value + deltaXYZ[index]);\n    publicAPI.modified();\n  };\n  publicAPI.getOrientationWXYZ = () => {\n    const q = quat.create();\n    mat4.getRotation(q, model.rotation);\n    const oaxis = new Float64Array(3);\n    const w = quat.getAxisAngle(oaxis, q);\n    return [degreesFromRadians(w), oaxis[0], oaxis[1], oaxis[2]];\n  };\n  publicAPI.getOrientationQuaternion = function () {\n    let out = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return mat4.getRotation(out, model.rotation);\n  };\n  publicAPI.rotateX = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateX(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateY = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateY(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateZ = val => {\n    if (val === 0.0) {\n      return;\n    }\n    mat4.rotateZ(model.rotation, model.rotation, radiansFromDegrees(val));\n    publicAPI.modified();\n  };\n  publicAPI.rotateWXYZ = (degrees, x, y, z) => {\n    if (degrees === 0.0 || x === 0.0 && y === 0.0 && z === 0.0) {\n      return;\n    }\n\n    // convert to radians\n    const angle = radiansFromDegrees(degrees);\n    const q = quat.create();\n    quat.setAxisAngle(q, [x, y, z], angle);\n    const quatMat = new Float64Array(16);\n    mat4.fromQuat(quatMat, q);\n    mat4.multiply(model.rotation, model.rotation, quatMat);\n    publicAPI.modified();\n  };\n  publicAPI.rotateQuaternion = orientationQuaternion => {\n    if (Math.abs(orientationQuaternion[3]) >= 1 - VTK_EPSILON) {\n      return;\n    }\n    const oriQuatMat = mat4.fromQuat(new Float64Array(16), orientationQuaternion);\n    mat4.multiply(model.rotation, model.rotation, oriQuatMat);\n    publicAPI.modified();\n  };\n  publicAPI.setOrientation = (x, y, z) => {\n    if (x === model.orientation[0] && y === model.orientation[1] && z === model.orientation[2]) {\n      return false;\n    }\n    model.orientation = [x, y, z];\n    mat4.identity(model.rotation);\n    publicAPI.rotateZ(z);\n    publicAPI.rotateX(x);\n    publicAPI.rotateY(y);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.setUserMatrix = matrix => {\n    if (areMatricesEqual(model.userMatrix, matrix)) {\n      return false;\n    }\n    mat4.copy(model.userMatrix, matrix);\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.getMatrix = () => {\n    publicAPI.computeMatrix();\n    return model.matrix;\n  };\n  publicAPI.computeMatrix = () => {\n    // check whether or not need to rebuild the matrix\n    if (publicAPI.getMTime() > model.matrixMTime.getMTime()) {\n      mat4.identity(model.matrix);\n      if (model.userMatrix) {\n        mat4.multiply(model.matrix, model.matrix, model.userMatrix);\n      }\n      mat4.translate(model.matrix, model.matrix, model.origin);\n      mat4.translate(model.matrix, model.matrix, model.position);\n      mat4.multiply(model.matrix, model.matrix, model.rotation);\n      mat4.scale(model.matrix, model.matrix, model.scale);\n      mat4.translate(model.matrix, model.matrix, [-model.origin[0], -model.origin[1], -model.origin[2]]);\n      mat4.transpose(model.matrix, model.matrix);\n\n      // check for identity\n      model.isIdentity = true;\n      for (let i = 0; i < 4; ++i) {\n        for (let j = 0; j < 4; ++j) {\n          if ((i === j ? 1.0 : 0.0) !== model.matrix[i + j * 4]) {\n            model.isIdentity = false;\n          }\n        }\n      }\n      model.matrixMTime.modified();\n    }\n  };\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(model.bounds);\n  publicAPI.getLength = () => vtkBoundingBox.getLength(model.bounds);\n  publicAPI.getXRange = () => vtkBoundingBox.getXRange(model.bounds);\n  publicAPI.getYRange = () => vtkBoundingBox.getYRange(model.bounds);\n  publicAPI.getZRange = () => vtkBoundingBox.getZRange(model.bounds);\n  publicAPI.getUserMatrix = () => model.userMatrix;\n  function updateIdentityFlag() {\n    publicAPI.computeMatrix();\n  }\n  publicAPI.onModified(updateIdentityFlag);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  origin: [0, 0, 0],\n  position: [0, 0, 0],\n  orientation: [0, 0, 0],\n  rotation: null,\n  scale: [1, 1, 1],\n  bounds: [1, -1, 1, -1, 1, -1],\n  userMatrix: null,\n  userMatrixMTime: null,\n  cachedProp3D: null,\n  isIdentity: true,\n  matrixMTime: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp.extend(publicAPI, model, initialValues);\n  model.matrixMTime = {};\n  macro.obj(model.matrixMTime);\n\n  // Build VTK API\n  macro.get(publicAPI, model, ['bounds', 'isIdentity']);\n  macro.getArray(publicAPI, model, ['orientation']);\n  macro.setGetArray(publicAPI, model, ['origin', 'position', 'scale'], 3);\n\n  // Object internal instance\n  model.matrix = mat4.identity(new Float64Array(16));\n  model.rotation = mat4.identity(new Float64Array(16));\n  model.userMatrix = mat4.identity(new Float64Array(16));\n  model.transform = null; // FIXME\n\n  // Object methods\n  vtkProp3D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkProp3D');\n\n// ----------------------------------------------------------------------------\n\nvar vtkProp3D$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkProp3D$1 as default, extend, newInstance };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}