{"ast":null,"code":"import axios from 'axios';\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect } from 'vue';\n// vtk\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry';\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkXMLPolyDataReader from '@kitware/vtk.js/IO/XML/XMLPolyDataReader';\nexport default {\n  setup() {\n    const vtkContainer = ref(null);\n    const context = ref(null);\n    const coneResolution = ref(6);\n    const coneOpacity = ref(1.0);\n    const representation = ref(2);\n    const textEncoder = new TextEncoder();\n    const path = 'http://localhost:5000/cone';\n    const reader = vtkXMLPolyDataReader.newInstance();\n    const mapper = vtkMapper.newInstance();\n    mapper.setInputConnection(reader.getOutputPort());\n    const actor = vtkActor.newInstance();\n    actor.setMapper(mapper);\n    function setConeResolution(res) {\n      coneResolution.value = Number(res);\n    }\n    function setConeOpacity(opacity) {\n      coneOpacity.value = Number(opacity);\n    }\n    function setRepresentation(rep) {\n      representation.value = Number(rep);\n    }\n    watchEffect(() => {\n      const res = unref(coneResolution);\n      const opacity = unref(coneOpacity);\n      const rep = unref(representation);\n      if (context.value) {\n        const {\n          actor,\n          renderWindow\n        } = context.value;\n        axios.post('http://localhost:5000/resolution', {\n          resolution: res\n        }).then(function (response) {\n          axios.get(path).then(res => {\n            reader.parseAsArrayBuffer(textEncoder.encode(res.data));\n            renderWindow.render();\n            console.log(res.data);\n          }).catch(error => {\n            console.error(error);\n          });\n          console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n        });\n        actor.getProperty().setRepresentation(rep);\n        actor.getProperty().setOpacity(opacity);\n        renderWindow.render();\n      }\n    });\n    onMounted(() => {\n      if (!context.value) {\n        const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value\n        });\n        axios.get(path).then(res => {\n          //reader.ParseXML(res.data);\n          reader.parseAsArrayBuffer(textEncoder.encode(res.data));\n          console.log(res.data);\n        }).catch(error => {\n          console.error(error);\n        });\n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n        renderer.addActor(actor);\n        renderer.resetCamera();\n        renderWindow.render();\n        context.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          actor,\n          mapper,\n          reader\n        };\n      }\n    });\n    onBeforeUnmount(() => {\n      if (context.value) {\n        //const {fullScreenRenderer, actor, mapper } = context.value;\n        const {\n          renderer,\n          renderWindow,\n          fullScreenRenderer,\n          reader,\n          actor,\n          mapper\n        } = context.value;\n        actor.delete();\n        mapper.delete();\n        reader.delete();\n        renderer.delete();\n        renderWindow.delete();\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n    return {\n      vtkContainer,\n      setRepresentation,\n      setConeResolution,\n      setConeOpacity,\n      coneResolution,\n      representation\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","unref","onMounted","onBeforeUnmount","watchEffect","vtkFullScreenRenderWindow","vtkActor","vtkMapper","vtkXMLPolyDataReader","setup","vtkContainer","context","coneResolution","coneOpacity","representation","textEncoder","TextEncoder","path","reader","newInstance","mapper","setInputConnection","getOutputPort","actor","setMapper","setConeResolution","res","value","Number","setConeOpacity","opacity","setRepresentation","rep","renderWindow","post","resolution","then","response","get","parseAsArrayBuffer","encode","data","render","console","log","catch","error","getProperty","setOpacity","fullScreenRenderer","rootContainer","renderer","getRenderer","getRenderWindow","addActor","resetCamera","delete"],"sources":["C:\\Users\\Malcolm\\Projects\\Web\\TickerWeb\\src\\components\\TickerVTK.vue"],"sourcesContent":["<template>\n  <div>\n    <div ref=\"vtkContainer\" />\n    <table class=\"controls\">\n      <tbody>\n        <tr>\n          <td>\n            <select\n              style=\"width: 100%\"\n              :value=\"representation\"\n              @change=\"setRepresentation($event.target.value)\"\n            >\n              <option value=\"0\">Points</option>\n              <option value=\"1\">Wireframe</option>\n              <option value=\"2\">Surface</option>\n            </select>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <input\n              type=\"range\"\n              min=\"3\"\n              max=\"100\"\n              :value=\"coneResolution\"\n              @input=\"setConeResolution($event.target.value)\"\n            />\n          </td>\n        </tr>\n\t\t<tr>\n          <td>\n            <input\n              type=\"range\"\n              min=\"0.0\"\n              max=\"1.0\"\n              :value=\"coneOpacity\"\n              @input=\"setConeOpacity($event.target.value)\"\n            />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect } from 'vue';\n// vtk\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry';\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkActor              from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkMapper             from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkXMLPolyDataReader  from '@kitware/vtk.js/IO/XML/XMLPolyDataReader'; \n\nexport default {\n\n  setup() {\n  \n    const vtkContainer = ref(null);\n    const context = ref(null);\n    const coneResolution = ref(6);\n\tconst coneOpacity    = ref(1.0);\n    const representation = ref(2);\n\t\n    const textEncoder = new TextEncoder();\n    const path = 'http://localhost:5000/cone';\n    \n\tconst reader = vtkXMLPolyDataReader.newInstance();\n\t\n\tconst mapper = vtkMapper.newInstance();\n\tmapper.setInputConnection(reader.getOutputPort());\n\n    const actor = vtkActor.newInstance();\n    actor.setMapper(mapper);\n\n    function setConeResolution(res) {\n      coneResolution.value = Number(res);\n    }\n\t\n\tfunction setConeOpacity(opacity) {\n      coneOpacity.value = Number(opacity);\n    }\n\n    function setRepresentation(rep) {\n      representation.value = Number(rep);\n    }\n\n    watchEffect(() => {\n      const res = unref(coneResolution);\n      const opacity = unref(coneOpacity);\n      const rep = unref(representation);\n      if (context.value) {\n        const { actor, renderWindow } = context.value;\n        \n\t\taxios.post('http://localhost:5000/resolution',{resolution: res})\n          .then(function (response) {\n            axios.get(path)\n              .then((res) => {\n                reader.parseAsArrayBuffer(textEncoder.encode(res.data));\n\t\t\t\trenderWindow.render();\n                console.log(res.data)\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          })\n\t\t\n        actor.getProperty().setRepresentation(rep);\n\t\tactor.getProperty().setOpacity(opacity);\n        renderWindow.render();\n      }\n    });\n\n    onMounted(() => {\n\t\n      if (!context.value) {\n        const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value,\n        });\n\t\t\n        axios.get(path)\n          .then((res) => {\n            //reader.ParseXML(res.data);\n            reader.parseAsArrayBuffer(textEncoder.encode(res.data));\n            console.log(res.data)\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n\n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n\n        renderer.addActor(actor);\n        renderer.resetCamera();\n        renderWindow.render();\n\n        context.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          actor,\n          mapper,\n          reader,\n        };\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (context.value) {\n\t\t//const {fullScreenRenderer, actor, mapper } = context.value;\n        const { renderer, renderWindow, fullScreenRenderer, reader, actor, mapper } = context.value;\n        actor.delete();\n        mapper.delete();\n        reader.delete();\n\t\t\n\t\trenderer.delete()\n\t\trenderWindow.delete()\n\t\t\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n\n    return {\n      vtkContainer,\n      setRepresentation,\n      setConeResolution,\n      setConeOpacity,\n      coneResolution,\n      representation,\n    };\n  }\n}\n</script>\n\n<style scoped>\n.controls {\n  position: absolute;\n  top: 25px;\n  left: 25px;\n  background: white;\n  padding: 12px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}