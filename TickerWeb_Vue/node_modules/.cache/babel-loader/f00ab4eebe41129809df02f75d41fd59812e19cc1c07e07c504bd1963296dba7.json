{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport axios from 'axios';\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect, watch } from 'vue';\n// vtk\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry'; // geometry rendering for WebGL, WebGPU\nimport '@kitware/vtk.js/Rendering/Profiles/Glyph'; // vtkGlyph3DMapper\nimport '@kitware/vtk.js/Rendering/Profiles/Molecule'; // vtkSphereMapper\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkLookupTable from '@kitware/vtk.js/Common/Core/LookupTable';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkXMLPolyDataReader from '@kitware/vtk.js/IO/XML/XMLPolyDataReader';\nimport vtkGlyph3DMapper from '@kitware/vtk.js/Rendering/Core/Glyph3DMapper';\nimport vtkCubeSource from '@kitware/vtk.js/Filters/Sources/CubeSource';\nimport vtkSphereSource from '@kitware/vtk.js/Filters/Sources/SphereSource';\nimport vtkSphereMapper from '@kitware/vtk.js/Rendering/Core/SphereMapper';\nexport default {\n  setup() {\n    const session = {\n      user: 'malcolm',\n      mine: 'Bambanani'\n    };\n    let bounds = new Array(6).fill(0.0);\n    const vtkContainer = ref(null);\n    const context = ref(null);\n    const node_representation = ref(0);\n    const events_opacity = ref(50);\n    const events_timestamp = ref(1640995200);\n    const plan_opacity = ref(100);\n    const plan_representation = ref(1);\n    const textEncoder = new TextEncoder();\n    //const path = 'http://localhost:5000';\n    const path = 'http://192.168.0.2:5000';\n\n    // nodes\n    const node_reader = vtkXMLPolyDataReader.newInstance();\n    const node_lut = vtkLookupTable.newInstance(); // make custom LUT\n    const data = new Uint8Array([0, 255, 0, 255, 255, 165, 80, 255, 255, 0, 0, 255]); // green, orange, red\n    const table = vtkDataArray.newInstance({\n      values: data,\n      numberOfComponents: 4\n    }); // to VTK\n    node_lut.setTable(table); // LUT = green, orange, red\n\n    const node_glyph = vtkCubeSource.newInstance();\n    node_glyph.update();\n    const node_mapper = vtkGlyph3DMapper.newInstance();\n    const node_actor = vtkActor.newInstance();\n    //\n    //node_mapper.setInputConnection(node_reader.getOutputPort());\n    //node_mapper.setSourceConnection(node_glyph.getOutputPort())\n    //node_mapper.setInputConnection(node_glyph.getOutputPort(), 1)\n    node_mapper.setInputData(node_glyph.getOutputData(), 1);\n    node_mapper.setScalarModeToUsePointData();\n    node_mapper.setColorByArrayName('alert');\n    node_mapper.setScalarVisibility(true);\n    node_mapper.setScalarRange(1, 3);\n    node_mapper.setLookupTable(node_lut);\n    //node_mapper.setColorByArrayName(\"Scalars\");\n    node_mapper.setScalarModeToUsePointData();\n    node_mapper.setColorModeToMapScalars();\n    node_mapper.setScaleFactor(10.0);\n    //node_mapper.setScaleModeToScaleByConstant()\n    node_mapper.setScaleMode(1);\n    node_actor.setMapper(node_mapper);\n    //node_actor.getProperty().setAmbient(0.5)\n\n    // plan\n    const plan_reader = vtkXMLPolyDataReader.newInstance();\n    const plan_mapper = vtkMapper.newInstance();\n    const plan_actor = vtkActor.newInstance();\n    //\n    plan_mapper.setInputConnection(plan_reader.getOutputPort());\n    plan_actor.setMapper(plan_mapper);\n    plan_actor.getProperty().setOpacity(0.25);\n    plan_actor.getProperty().setColor(0.5, 0.5, 0.5);\n\n    // events\n    const events_reader = vtkXMLPolyDataReader.newInstance();\n    const events_glyph = vtkSphereSource.newInstance();\n    //const events_mapper = vtkGlyph3DMapper.newInstance();\n    const events_mapper = vtkSphereMapper.newInstance();\n    const events_actor = vtkActor.newInstance();\n    //\n    events_glyph.setThetaResolution(20);\n    events_glyph.setPhiResolution(10);\n    events_mapper.setInputConnection(events_reader.getOutputPort());\n    //events_mapper.setSourceConnection(events_glyph.getOutputPort())\n    events_mapper.setScaleFactor(100.0);\n    events_mapper.setScaleArray('scale');\n    events_mapper.setScalarVisibility(true);\n    events_mapper.setScalarModeToUsePointData();\n    //events_mapper.setColorByArrayName('dtEvent');\n    events_mapper.setScalarRange(1640995200.0, 1656653056.0);\n    events_actor.setMapper(events_mapper);\n    events_actor.getProperty().setOpacity(0.5);\n    function setNodeRepresentation(rep) {\n      node_representation.value = Number(rep);\n    }\n    function setEventOpacity(opacity) {\n      events_opacity.value = Number(opacity);\n    }\n    function setEventTimeStamp(res) {\n      events_timestamp.value = Number(res);\n    }\n    function setPlanOpacity(opacity) {\n      plan_opacity.value = Number(opacity);\n    }\n    function setPlanRepresentation(rep) {\n      plan_representation.value = Number(rep);\n    }\n    async function onEventFilter(timestamp) {\n      const {\n        renderWindow\n      } = context.value;\n      await getEvents({\n        bounds: bounds,\n        mine: session.mine,\n        timestamp: timestamp\n      });\n      renderWindow.render();\n    }\n\n    // provide data to vtk pipelines\n\n    function getNodes(args = {}) {\n      return new Promise((resolve, reject) => {\n        axios.put(path + '/nodes', args).then(response_get => {\n          node_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n          node_reader.update();\n          console.log('nodes');\n          console.log(node_reader.getOutputData());\n          node_mapper.setInputData(node_reader.getOutputData());\n          resolve('nodes');\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    }\n    function getPlan(args = {}) {\n      return new Promise((resolve, reject) => {\n        axios.put(path + '/plan', args).then(response_get => {\n          plan_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n          resolve('plan');\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    }\n    function getEvents(args = {}) {\n      return new Promise((resolve, reject) => {\n        axios.put(path + '/events', args).then(response_get => {\n          events_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data));\n          resolve('events');\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    }\n    async function getAllAndRender() {\n      const {\n        renderWindow,\n        renderer\n      } = context.value;\n      await getNodes({\n        mine: session.mine\n      });\n      bounds = node_reader.getOutputData().getBounds();\n      const buffer = 1000.0;\n      bounds[0] -= buffer;\n      bounds[1] += buffer;\n      bounds[2] -= buffer;\n      bounds[3] += buffer;\n      bounds[4] -= buffer;\n      bounds[5] += buffer;\n      console.log(bounds);\n      Promise.allSettled([getPlan({\n        bounds: bounds,\n        mine: session.mine\n      }), getEvents({\n        bounds: bounds,\n        mine: session.mine,\n        timestamp: 0.0\n      })]).then(() => {\n        renderer.resetCamera();\n        renderWindow.render();\n      });\n    }\n    function checkModified() {\n      return new Promise((resolve, reject) => {\n        axios.put(path + '/modified', {\n          mine: session.mine\n        }).then(response_get => {\n          console.log(response_get.data);\n          resolve('plan');\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    }\n    watch(events_timestamp, newValue => {\n      onEventFilter(newValue);\n    });\n    watchEffect(() => {\n      if (context.value) {\n        const {\n          renderWindow\n        } = context.value;\n        node_mapper.setScaleMode(unref(node_representation));\n        plan_actor.getProperty().setOpacity(unref(plan_opacity) * 0.01);\n        plan_actor.getProperty().setRepresentation(unref(plan_representation));\n        events_actor.getProperty().setOpacity(unref(events_opacity) * 0.01);\n        renderWindow.render();\n      }\n    });\n    onMounted(() => {\n      console.log('onMounted');\n      if (!context.value) {\n        const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value\n        });\n        //fullScreenRenderer.setAlphaBitPlanes(1) // depth-peeling\n        //fullScreenRenderer.setMultiSamples(0) // depth-peeling\n\n        const renderer = fullScreenRenderer.getRenderer();\n        const renderWindow = fullScreenRenderer.getRenderWindow();\n        //\n        renderer.setBackground(1.0, 1.0, 1.0);\n        renderer.setUseDepthPeeling(true); // depth peeling\n        renderer.setMaximumNumberOfPeels(100); // depth peeling\n        renderer.setOcclusionRatio(0.01); // depth peeling\n        //\n        renderer.addActor(node_actor);\n        renderer.addActor(plan_actor);\n        renderer.addActor(events_actor);\n        context.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          //\n          node_actor,\n          node_mapper,\n          node_reader,\n          node_glyph,\n          //\n          events_actor,\n          events_mapper,\n          events_reader,\n          events_glyph,\n          //\n          plan_reader,\n          plan_mapper,\n          plan_actor\n        };\n\n        // renders as well\n        getAllAndRender();\n        setInterval(checkModified, 30000);\n      }\n    });\n    onBeforeUnmount(() => {\n      if (context.value) {\n        //const {fullScreenRenderer, actor, mapper } = context.value;\n        const {\n          renderer,\n          renderWindow,\n          fullScreenRenderer,\n          node_reader,\n          node_actor,\n          node_mapper,\n          node_glyph,\n          plan_reader,\n          plan_actor,\n          plan_mapper,\n          events_reader,\n          events_actor,\n          events_mapper,\n          events_glyph\n        } = context.value;\n        plan_actor.delete();\n        plan_mapper.delete();\n        plan_reader.delete();\n        node_actor.delete();\n        node_mapper.delete();\n        node_reader.delete();\n        node_glyph.delete();\n        events_reader.delete();\n        events_actor.delete();\n        events_mapper.delete();\n        events_glyph.delete();\n        //\n        renderer.delete();\n        renderWindow.delete();\n        //\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n    return {\n      vtkContainer,\n      setNodeRepresentation,\n      setEventOpacity,\n      setEventTimeStamp,\n      setPlanOpacity,\n      setPlanRepresentation,\n      plan_opacity,\n      plan_representation,\n      events_timestamp,\n      events_opacity,\n      node_representation,\n      //\n      getNodes,\n      getPlan,\n      getEvents\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","unref","onMounted","onBeforeUnmount","watchEffect","watch","vtkFullScreenRenderWindow","vtkActor","vtkLookupTable","vtkDataArray","vtkMapper","vtkXMLPolyDataReader","vtkGlyph3DMapper","vtkCubeSource","vtkSphereSource","vtkSphereMapper","setup","session","user","mine","bounds","Array","fill","vtkContainer","context","node_representation","events_opacity","events_timestamp","plan_opacity","plan_representation","textEncoder","TextEncoder","path","node_reader","newInstance","node_lut","data","Uint8Array","table","values","numberOfComponents","setTable","node_glyph","update","node_mapper","node_actor","setInputData","getOutputData","setScalarModeToUsePointData","setColorByArrayName","setScalarVisibility","setScalarRange","setLookupTable","setColorModeToMapScalars","setScaleFactor","setScaleMode","setMapper","plan_reader","plan_mapper","plan_actor","setInputConnection","getOutputPort","getProperty","setOpacity","setColor","events_reader","events_glyph","events_mapper","events_actor","setThetaResolution","setPhiResolution","setScaleArray","setNodeRepresentation","rep","value","Number","setEventOpacity","opacity","setEventTimeStamp","res","setPlanOpacity","setPlanRepresentation","onEventFilter","timestamp","renderWindow","getEvents","render","getNodes","args","Promise","resolve","reject","put","then","response_get","parseAsArrayBuffer","encode","console","log","catch","error","getPlan","getAllAndRender","renderer","getBounds","buffer","allSettled","resetCamera","checkModified","newValue","setRepresentation","fullScreenRenderer","rootContainer","getRenderer","getRenderWindow","setBackground","setUseDepthPeeling","setMaximumNumberOfPeels","setOcclusionRatio","addActor","setInterval","delete"],"sources":["C:\\Users\\Malcolm\\Projects\\Web\\TickerWeb\\TickerWeb_Vue\\src\\components\\TickerVTK.vue"],"sourcesContent":["<template>\n  <div>\n    <div ref=\"vtkContainer\" />\n    <table class=\"controls\">\n      <tbody>\n        <tr>\n          <td style=\"text-align:left\"><b>Nodes</b></td>\n          <td style=\"text-align:left\"> </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Representation</td>\n          <td>\n            <select\n              style=\"width: 100%\"\n              :value=\"node_representation\"\n              @change=\"setNodeRepresentation($event.target.value)\"\n            >\n              <option value=\"0\">Unscaled</option>\n              <option value=\"1\">Scaled</option>\n            </select>\n          </td>\n        </tr>\n        <tr>\n          <td style=\"text-align:left\"><b>Events</b></td>\n          <td style=\"text-align:left\"> </td>\n        </tr>\n        <tr>\n          <td style=\"text-align:left\">TimeStamp</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"1640995200\"\n              max=\"1656653056\"\n              :value=\"events_timestamp\"\n              @input=\"setEventTimeStamp($event.target.value)\"\n            />\n          </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Opacity</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              :value=\"events_opacity\"\n              @input=\"setEventOpacity($event.target.value)\"\n            />\n          </td>\n        </tr>\t\t\n        <tr>\n          <td style=\"text-align:left\"><b>Plan</b></td>\n          <td style=\"text-align:left\"> </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Opacity</td>\n          <td>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              :value=\"plan_opacity\"\n              @input=\"setPlanOpacity($event.target.value)\"\n            />\n          </td>\n        </tr>\n\t\t<tr>\n          <td style=\"text-align:left\">Representation</td>\n          <td>\n            <select\n              style=\"width: 100%\"\n              :value=\"plan_representation\"\n              @change=\"setPlanRepresentation($event.target.value)\"\n            >\n              <option value=\"0\">Points</option>\n              <option value=\"1\">Wireframe</option>\n            </select>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, unref, onMounted, onBeforeUnmount, watchEffect, watch } from 'vue';\n// vtk\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry'; // geometry rendering for WebGL, WebGPU\nimport '@kitware/vtk.js/Rendering/Profiles/Glyph'; // vtkGlyph3DMapper\nimport '@kitware/vtk.js/Rendering/Profiles/Molecule'; // vtkSphereMapper\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkActor                  from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkLookupTable            from '@kitware/vtk.js/Common/Core/LookupTable';\nimport vtkDataArray              from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkMapper                 from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkXMLPolyDataReader      from '@kitware/vtk.js/IO/XML/XMLPolyDataReader';\nimport vtkGlyph3DMapper          from '@kitware/vtk.js/Rendering/Core/Glyph3DMapper'; \nimport vtkCubeSource             from '@kitware/vtk.js/Filters/Sources/CubeSource';\nimport vtkSphereSource           from '@kitware/vtk.js/Filters/Sources/SphereSource';\nimport vtkSphereMapper           from '@kitware/vtk.js/Rendering/Core/SphereMapper';\n\nexport default {\n\n  setup() {\n  \n    const session = {user: 'malcolm', mine:'Bambanani'}\n\t\n\tlet bounds = new Array(6).fill(0.0)\n\t\n\tconst vtkContainer = ref(null);\n    const context = ref(null);\n\n    const node_representation = ref(0);    \n\tconst events_opacity      = ref(50);\n    const events_timestamp    = ref(1640995200);\n\tconst plan_opacity        = ref(100);\n    const plan_representation = ref(1);\n\t\n    const textEncoder = new TextEncoder();\n    //const path = 'http://localhost:5000';\n\tconst path = 'http://192.168.0.2:5000';\n    \n\t// nodes\n\tconst node_reader = vtkXMLPolyDataReader.newInstance()\n\tconst node_lut = vtkLookupTable.newInstance(); // make custom LUT\n    const data = new Uint8Array([0, 255, 0, 255, 255, 165, 80, 255, 255, 0, 0, 255]); // green, orange, red\n    const table = vtkDataArray.newInstance({values: data, numberOfComponents: 4}); // to VTK\n    node_lut.setTable(table); // LUT = green, orange, red\n\n\tconst node_glyph = vtkCubeSource.newInstance();\n\tnode_glyph.update()\n\tconst node_mapper = vtkGlyph3DMapper.newInstance();\n\tconst node_actor = vtkActor.newInstance();\n\t//\n\t//node_mapper.setInputConnection(node_reader.getOutputPort());\n\t//node_mapper.setSourceConnection(node_glyph.getOutputPort())\n    //node_mapper.setInputConnection(node_glyph.getOutputPort(), 1)\n\tnode_mapper.setInputData(node_glyph.getOutputData(), 1)\n\tnode_mapper.setScalarModeToUsePointData();\n\tnode_mapper.setColorByArrayName('alert');\n\tnode_mapper.setScalarVisibility(true);\n\tnode_mapper.setScalarRange(1, 3);\n    node_mapper.setLookupTable(node_lut);\n    //node_mapper.setColorByArrayName(\"Scalars\");\n\tnode_mapper.setScalarModeToUsePointData()\n    node_mapper.setColorModeToMapScalars();\n\tnode_mapper.setScaleFactor(10.0);\n\t//node_mapper.setScaleModeToScaleByConstant()\n\tnode_mapper.setScaleMode(1)\n    node_actor.setMapper(node_mapper);\n\t//node_actor.getProperty().setAmbient(0.5)\n\t\n\t// plan\n\tconst plan_reader = vtkXMLPolyDataReader.newInstance();\n\tconst plan_mapper = vtkMapper.newInstance();\n\tconst plan_actor  = vtkActor.newInstance();\n\t//\n\tplan_mapper.setInputConnection(plan_reader.getOutputPort());\n\tplan_actor.setMapper(plan_mapper)\n\tplan_actor.getProperty().setOpacity(0.25)\n\tplan_actor.getProperty().setColor(0.5, 0.5, 0.5)\n\t\n\t// events\n\tconst events_reader = vtkXMLPolyDataReader.newInstance();\n\tconst events_glyph  = vtkSphereSource.newInstance();\n\t//const events_mapper = vtkGlyph3DMapper.newInstance();\n    const events_mapper = vtkSphereMapper.newInstance();\n\tconst events_actor  = vtkActor.newInstance();\n\t//\n    events_glyph.setThetaResolution(20)\n    events_glyph.setPhiResolution(10)\n\tevents_mapper.setInputConnection(events_reader.getOutputPort())\n\t//events_mapper.setSourceConnection(events_glyph.getOutputPort())\n\tevents_mapper.setScaleFactor(100.0);\n    events_mapper.setScaleArray('scale');\n\tevents_mapper.setScalarVisibility(true);\n\tevents_mapper.setScalarModeToUsePointData()\n\t//events_mapper.setColorByArrayName('dtEvent');\n\tevents_mapper.setScalarRange(1640995200.0, 1656653056.0)\n\tevents_actor.setMapper(events_mapper)\n\tevents_actor.getProperty().setOpacity(0.5)\n\t\n    function setNodeRepresentation(rep) {\n      node_representation.value = Number(rep);\n    }\n\n\tfunction setEventOpacity(opacity) {\n      events_opacity.value = Number(opacity);\n    }\n\t\n    function setEventTimeStamp(res) {\n      events_timestamp.value = Number(res);\n    }\n\t\n\tfunction setPlanOpacity(opacity) {\n      plan_opacity.value = Number(opacity);\n    }\n\n    function setPlanRepresentation(rep) {\n      plan_representation.value = Number(rep);\n    }\n\t\n\t\n    async function onEventFilter(timestamp) {\n      const {renderWindow} = context.value\n      await getEvents({bounds: bounds, mine: session.mine, timestamp: timestamp})\n      renderWindow.render()\n\t}\n\t\n\t// provide data to vtk pipelines\n\t\n\tfunction getNodes(args={}) {\n      return new Promise((resolve, reject) => {\n        axios.put(path+'/nodes', args)\n          .then((response_get) => {\n            node_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data))\n            node_reader.update()\n\t\t\tconsole.log('nodes')\n\t\t\tconsole.log(node_reader.getOutputData())\n\t\t\tnode_mapper.setInputData(node_reader.getOutputData())\t\t\t\n            resolve('nodes')\n          })\n          .catch((error) => {\n            reject(error)\n        })\n      })\n    }\n\t\n\tfunction getPlan(args={}) {\n      return new Promise((resolve, reject) => {\n        axios.put(path+'/plan', args)\n          .then((response_get) => {\n            plan_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data))\t\t  \n            resolve('plan')\n          })\n          .catch((error) => {\n            reject(error)\n        })\n      })\n    }\n\t\n\tfunction getEvents(args={}) {\n      return new Promise((resolve, reject) => {\n        axios.put(path+'/events', args)\n          .then((response_get) => {\n            events_reader.parseAsArrayBuffer(textEncoder.encode(response_get.data))\t\t  \n            resolve('events')\n          })\n          .catch((error) => {\n            reject(error)\n        })\n      })\n    }\n\t\n    async function getAllAndRender() {\n      const {renderWindow, renderer} = context.value\n      await getNodes({mine: session.mine})\n      bounds = node_reader.getOutputData().getBounds()\n      const buffer = 1000.0\n      bounds[0] -= buffer\n      bounds[1] += buffer\n      bounds[2] -= buffer\n      bounds[3] += buffer\n      bounds[4] -= buffer\n      bounds[5] += buffer\n      console.log(bounds)\n      Promise.allSettled([getPlan({bounds: bounds, mine: session.mine}), getEvents({bounds: bounds, mine: session.mine, timestamp: 0.0})]).then(() => {\n\t\trenderer.resetCamera()\n        renderWindow.render()\n      })\n\t}\n\t\n    function checkModified(){\n      return new Promise((resolve, reject) => {\n        axios.put(path+'/modified', {mine: session.mine})\n          .then((response_get) => {\n            console.log(response_get.data)\t\t  \n            resolve('plan')\n          })\n          .catch((error) => {\n            reject(error)\n        })\n      })\n    }\n\t\n\twatch(events_timestamp, (newValue) => {\n      onEventFilter(newValue)\n\t})\n\n    watchEffect(() => {\n      if (context.value) {\n        const {renderWindow } = context.value;\n\t\tnode_mapper.setScaleMode(unref(node_representation));\n\t\tplan_actor.getProperty().setOpacity(unref(plan_opacity)*0.01);\n        plan_actor.getProperty().setRepresentation(unref(plan_representation))\n\t\tevents_actor.getProperty().setOpacity(unref(events_opacity)*0.01)\n\t\trenderWindow.render();\n      }\n    });\n\t\n    onMounted(() => {\n      console.log('onMounted')\n\t\n      if (!context.value) {\n        \n\t\tconst fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n          rootContainer: vtkContainer.value,\n          });\n        //fullScreenRenderer.setAlphaBitPlanes(1) // depth-peeling\n        //fullScreenRenderer.setMultiSamples(0) // depth-peeling\n         \n        const renderer = fullScreenRenderer.getRenderer()\n        const renderWindow = fullScreenRenderer.getRenderWindow()\n\t\t//\n        renderer.setBackground(1.0, 1.0, 1.0)\n\t\trenderer.setUseDepthPeeling(true) // depth peeling\n        renderer.setMaximumNumberOfPeels(100) // depth peeling\n        renderer.setOcclusionRatio(0.01) // depth peeling\n\t\t//\n\t\trenderer.addActor(node_actor)\n\t\trenderer.addActor(plan_actor)\n\t\trenderer.addActor(events_actor)\n\t\t\n\t\tcontext.value = {\n          fullScreenRenderer,\n          renderWindow,\n          renderer,\n          //\n          node_actor,\n          node_mapper,\n          node_reader,\n          node_glyph,\n          //\n          events_actor,\n          events_mapper,\n          events_reader,\n          events_glyph,\n          //\n          plan_reader,\n          plan_mapper,\n          plan_actor,\n        };\n\t\t\n\t\t// renders as well\n\t\tgetAllAndRender()\n        \n        setInterval(checkModified, 30000)\n      }\n    });\n\t\n\n\tonBeforeUnmount(() => {\n      if (context.value) {\n\t\t//const {fullScreenRenderer, actor, mapper } = context.value;\n        const { renderer, renderWindow, fullScreenRenderer, node_reader, node_actor, node_mapper, node_glyph, plan_reader, plan_actor, plan_mapper, events_reader, events_actor, events_mapper, events_glyph, } = context.value;\n        plan_actor.delete();\n        plan_mapper.delete();\n        plan_reader.delete();\n\t\tnode_actor.delete();\n        node_mapper.delete();\n        node_reader.delete();\n\t\tnode_glyph.delete();\n        events_reader.delete();\n        events_actor.delete();\n        events_mapper.delete();\n        events_glyph.delete();\n        //\n\t\trenderer.delete()\n\t\trenderWindow.delete()\n        //\n        fullScreenRenderer.delete();\n        context.value = null;\n      }\n    });\n\n    return {\n      vtkContainer,\n      setNodeRepresentation,\n      setEventOpacity,\n      setEventTimeStamp,\n      setPlanOpacity,\n      setPlanRepresentation,\n      plan_opacity,\n      plan_representation,\n      events_timestamp,\n      events_opacity,\n      node_representation,\n      //\n      getNodes,\n      getPlan,\n      getEvents,\n    };\n  }\n}\n</script>\n\n<style scoped>\n.controls {\n  position: absolute;\n  top: 25px;\n  left: 25px;\n  background: white;\n  padding: 12px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}